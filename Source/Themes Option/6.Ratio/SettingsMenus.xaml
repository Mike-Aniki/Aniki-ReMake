<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">


	<!-- Style pour le contour du menu de réglages -->
	<Style x:Key="SettingsMenuBorder" TargetType="Border">
		<Setter Property="Tag" Value="{DynamicResource BackgroundImageIndex}" />
		<!-- Propriétés de base -->
		<Setter Property="Width" Value="Auto" />
		<Setter Property="CornerRadius" Value="0" />
		<Setter Property="Grid.ColumnSpan" Value="4" />
		<Setter Property="Margin" Value="0,0,0,0" />
		<Setter Property="HorizontalAlignment" Value="Stretch" />
		<!-- Utilisation d'un Grid pour superposer l'image en tant qu'arrière-plan -->
		<Setter Property="Background" Value="{DynamicResource OverlayMenu}"/>
		<Style.Resources>
			<Style TargetType="StackPanel">
				<Setter Property="HorizontalAlignment" Value="Left" />
				<Setter Property="VerticalAlignment" Value="Stretch" />
				<Setter Property="Width" Value="750" />
				<Setter Property="Margin" Value="40,30,0,0" />
			</Style>
		</Style.Resources>
		<!-- Déclencheur pour l'animation de l'opacité lors du chargement -->
		<Style.Triggers>
			<EventTrigger RoutedEvent="Window.Loaded">
				<BeginStoryboard>
					<Storyboard>
						<Int32Animation Storyboard.TargetProperty="(Grid.Column)" Duration="0:0:0" To="0"/>
						<DoubleAnimation Storyboard.TargetProperty="Opacity" Duration="0:0:0.2" From="0" To="1" />
					</Storyboard>
				</BeginStoryboard>
			</EventTrigger>		
		</Style.Triggers>
	</Style>



	<!-- Style pour la section settings -->
	<Style x:Key="SettingsSectionBorder" TargetType="Border">
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="CornerRadius" Value="0" />
		<Setter Property="Padding" Value="10" />
		<Setter Property="Margin" Value="-100,100,-500,0" />
		<Setter Property="Opacity" Value="1" />
	</Style>


	<!-- Style pour les boutons du menu de Gauche -->
	<Style x:Key="SettingsMenuButton" BasedOn="{StaticResource {x:Type Button}}" TargetType="Button">
		<!-- Propriétés de base -->
		<Setter Property="Margin" Value="0,10,0,25" />
		<Setter Property="Height" Value="73" />
		<Setter Property="Width" Value="350" />
		<Setter Property="HorizontalAlignment" Value="Left" />
		<Setter Property="HorizontalContentAlignment" Value="Left" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="Button">
					<Grid Background="{TemplateBinding Background}">
						<Border CornerRadius="{DynamicResource Corner}" Opacity="0.1" Background="Transparent"
                                x:Name="MainBackground"/>
						<Border x:Name="MainBorder" Margin="-3" 
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                Style="{DynamicResource AnimatedBorderBrush}" Tag="False"
                                BorderThickness="3" CornerRadius="{DynamicResource Corner}" Visibility="Collapsed" />
						<TextBlock x:Name="Text" Style="{DynamicResource ButtonTextBlockBaseStyle}"
                                   Foreground="{TemplateBinding Foreground}" FontWeight="SemiBold"
                                   HorizontalAlignment="Center"
                                   VerticalAlignment="Center"
                                   Margin="0,0,0,0">
							<ContentPresenter />
						</TextBlock>
							<Rectangle Fill="{DynamicResource TextBrush}" Opacity="0.8" Margin="0,-10,-10,-100" Width="2" Height="400" VerticalAlignment="Stretch" HorizontalAlignment="Right" />

					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsEnabled" Value="False">
							<Setter Property="Opacity" Value="0.5" />
						</Trigger>
						<Trigger Property="IsFocused" Value="True">
							<Setter Property="Foreground" Value="{DynamicResource TextBrushDark}" />
							<Setter Property="Tag" Value="True" TargetName="MainBorder" />
							<Setter Property="Visibility" Value="Visible" TargetName="MainBorder" />
							<Setter Property="Opacity" Value="1" TargetName="MainBackground" />
							<Setter Property="Background" Value="White" TargetName="MainBackground" />
						</Trigger>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter Property="Visibility" Value="Visible" TargetName="MainBorder" />
							<Setter Property="Background" Value="White" TargetName="MainBackground" />
							<Setter Property="Foreground" Value="{DynamicResource TextBrushDark}" />
							<Setter Property="Opacity" Value="1" TargetName="MainBackground" />
							<Setter Property="Tag" Value="True" TargetName="MainBorder" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>


	<!-- Modèle de données pour l'en-tête du menu de réglages -->
	<DataTemplate x:Key="SettingsMenuHeaderTemplate">
		<!-- Conteneur parent avec une largeur automatique -->
		<Grid HorizontalAlignment="Stretch">
			<!-- Contenu de l'en-tête -->
			<StackPanel Orientation="Horizontal" HorizontalAlignment="Left" VerticalAlignment="Bottom" Margin="10,0,0,0" Background="Transparent" Height="110">				
													<Border RenderOptions.BitmapScalingMode="Fant" Margin="0,0,0,0" CornerRadius="5" Height="60" Width="60" VerticalAlignment="Top" HorizontalAlignment="Center" ClipToBounds="True" >
														<Border.Style>
															<Style TargetType="Border">
																<Setter Property="Background" Value="{DynamicResource Avatar0}"/>
																<Style.Triggers>
																	<DataTrigger Binding="{Binding Source={StaticResource AvatarImageIndex}}" Value="1">
																		<Setter Property="Background" Value="{DynamicResource Avatar0}"/>
																	</DataTrigger>
																	<DataTrigger Binding="{Binding Source={StaticResource AvatarImageIndex}}" Value="2">
																		<Setter Property="Background" Value="{DynamicResource Avatar2}"/>
																	</DataTrigger>
																	<DataTrigger Binding="{Binding Source={StaticResource AvatarImageIndex}}" Value="3">
																		<Setter Property="Background" Value="{DynamicResource Avatar3}"/>
																	</DataTrigger>
																	<DataTrigger Binding="{Binding Source={StaticResource AvatarImageIndex}}" Value="4">
																		<Setter Property="Background" Value="{DynamicResource Avatar4}"/>
																	</DataTrigger>
																	<DataTrigger Binding="{Binding Source={StaticResource AvatarImageIndex}}" Value="5">
																		<Setter Property="Background" Value="{DynamicResource Avatar5}"/>
																	</DataTrigger>
																	<DataTrigger Binding="{Binding Source={StaticResource AvatarImageIndex}}" Value="6">
																		<Setter Property="Background" Value="{DynamicResource Avatar6}"/>
																	</DataTrigger>
																	<DataTrigger Binding="{Binding Source={StaticResource AvatarImageIndex}}" Value="7">
																		<Setter Property="Background" Value="{DynamicResource Avatar7}"/>
																	</DataTrigger>
																	<DataTrigger Binding="{Binding Source={StaticResource AvatarImageIndex}}" Value="8">
																		<Setter Property="Background" Value="{DynamicResource Avatar8}"/>
																	</DataTrigger>
																	<DataTrigger Binding="{Binding Source={StaticResource AvatarImageIndex}}" Value="9">
																		<Setter Property="Background" Value="{DynamicResource Avatar9}"/>
																	</DataTrigger>
																	<DataTrigger Binding="{Binding Source={StaticResource AvatarImageIndex}}" Value="10">
																		<Setter Property="Background" Value="{DynamicResource Avatar10}"/>
																	</DataTrigger>
																	<DataTrigger Binding="{Binding Source={StaticResource AvatarImageIndex}}" Value="11">
																		<Setter Property="Background" Value="{DynamicResource Avatar11}"/>
																	</DataTrigger>
																	<DataTrigger Binding="{Binding Source={StaticResource AvatarImageIndex}}" Value="12">
																		<Setter Property="Background" Value="{DynamicResource Avatar12}"/>
																	</DataTrigger>
																	<DataTrigger Binding="{Binding Source={StaticResource AvatarImageIndex}}" Value="13">
																		<Setter Property="Background" Value="{DynamicResource Avatar13}"/>
																	</DataTrigger>
																	<DataTrigger Binding="{Binding Source={StaticResource AvatarImageIndex}}" Value="14">
																		<Setter Property="Background" Value="{DynamicResource Avatar14}"/>
																	</DataTrigger>
																	<DataTrigger Binding="{Binding Source={StaticResource AvatarImageIndex}}" Value="15">
																		<Setter Property="Background" Value="{DynamicResource Avatar15}"/>
																	</DataTrigger>
																	<DataTrigger Binding="{Binding Source={StaticResource AvatarImageIndex}}" Value="16">
																		<Setter Property="Background" Value="{DynamicResource Avatar16}"/>
																	</DataTrigger>
																	<DataTrigger Binding="{Binding Source={StaticResource AvatarImageIndex}}" Value="17">
																		<Setter Property="Background" Value="{DynamicResource Avatar17}"/>
																	</DataTrigger>
																	<DataTrigger Binding="{Binding Source={StaticResource AvatarImageIndex}}" Value="18">
																		<Setter Property="Background" Value="{DynamicResource Avatar18}"/>
																	</DataTrigger>
																	<DataTrigger Binding="{Binding Source={StaticResource AvatarImageIndex}}" Value="19">
																		<Setter Property="Background" Value="{DynamicResource Avatar19}"/>
																	</DataTrigger>
																	<DataTrigger Binding="{Binding Source={StaticResource AvatarImageIndex}}" Value="20">
																		<Setter Property="Background" Value="{DynamicResource Avatar20}"/>
																	</DataTrigger>
																	<DataTrigger Binding="{Binding Source={StaticResource AvatarImageIndex}}" Value="21">
																		<Setter Property="Background" Value="{DynamicResource Avatar21}"/>
																	</DataTrigger>
																	<DataTrigger Binding="{Binding Source={StaticResource AvatarImageIndex}}" Value="22">
																		<Setter Property="Background" Value="{DynamicResource Avatar22}"/>
																	</DataTrigger>
																	<DataTrigger Binding="{Binding Source={StaticResource AvatarImageIndex}}" Value="23">
																		<Setter Property="Background" Value="{DynamicResource Avatar23}"/>
																	</DataTrigger>
																	<DataTrigger Binding="{Binding Source={StaticResource AvatarImageIndex}}" Value="24">
																		<Setter Property="Background" Value="{DynamicResource Avatar24}"/>
																	</DataTrigger>
																	<DataTrigger Binding="{Binding Source={StaticResource AvatarImageIndex}}" Value="25">
																		<Setter Property="Background" Value="{DynamicResource Avatar25}"/>
																	</DataTrigger>
																	<DataTrigger Binding="{Binding Source={StaticResource AvatarImageIndex}}" Value="26">
																		<Setter Property="Background" Value="{DynamicResource Avatar26}"/>
																	</DataTrigger>
																	<DataTrigger Binding="{Binding Source={StaticResource AvatarImageIndex}}" Value="27">
																		<Setter Property="Background" Value="{DynamicResource Avatar27}"/>
																	</DataTrigger>
																	<DataTrigger Binding="{Binding Source={StaticResource AvatarImageIndex}}" Value="28">
																		<Setter Property="Background" Value="{DynamicResource Avatar28}"/>
																	</DataTrigger>
																	<DataTrigger Binding="{Binding Source={StaticResource AvatarImageIndex}}" Value="29">
																		<Setter Property="Background" Value="{DynamicResource Avatar29}"/>
																	</DataTrigger>
																	<DataTrigger Binding="{Binding Source={StaticResource AvatarImageIndex}}" Value="30">
																		<Setter Property="Background" Value="{DynamicResource Avatar30}"/>
																	</DataTrigger>
																	<DataTrigger Binding="{Binding Source={StaticResource AvatarImageIndex}}" Value="31">
																		<Setter Property="Background" Value="{DynamicResource Avatar31}"/>
																	</DataTrigger>
																	<DataTrigger Binding="{Binding Source={StaticResource AvatarImageIndex}}" Value="32">
																		<Setter Property="Background" Value="{DynamicResource Avatar32}"/>
																	</DataTrigger>
																	<DataTrigger Binding="{Binding Source={StaticResource AvatarImageIndex}}" Value="33">
																		<Setter Property="Background" Value="{DynamicResource Avatar33}"/>
																	</DataTrigger>
																	<DataTrigger Binding="{Binding Source={StaticResource AvatarImageIndex}}" Value="34">
																		<Setter Property="Background" Value="{DynamicResource Avatar34}"/>
																	</DataTrigger>
																	<DataTrigger Binding="{Binding Source={StaticResource AvatarImageIndex}}" Value="35">
																		<Setter Property="Background" Value="{DynamicResource Avatar35}"/>
																	</DataTrigger>
																	<DataTrigger Binding="{Binding Source={StaticResource AvatarImageIndex}}" Value="36">
																		<Setter Property="Background" Value="{DynamicResource Avatar36}"/>
																	</DataTrigger>
																	<DataTrigger Binding="{Binding Source={StaticResource AvatarImageIndex}}" Value="37">
																		<Setter Property="Background" Value="{DynamicResource Avatar37}"/>
																	</DataTrigger>
																	<DataTrigger Binding="{Binding Source={StaticResource AvatarImageIndex}}" Value="38">
																		<Setter Property="Background" Value="{DynamicResource Avatar38}"/>
																	</DataTrigger>
																</Style.Triggers>
															</Style>
														</Border.Style>
													</Border>
												
				<!-- Name User -->
				<TextBlock Text="{DynamicResource UserName}" VerticalAlignment="Top" HorizontalAlignment="Left"  FontSize="35" Style="{DynamicResource TextBlockBaseStyle}"
						   Margin="30,10,0,0" Width="320" TextTrimming="CharacterEllipsis"/>
				<!-- Ligne de séparation -->
				<!-- Logo Settings -->
				<!--	<Image Source="{ThemeFile 'Images/Settings.png'}" Height="90"
					   RenderOptions.BitmapScalingMode="Fant" VerticalAlignment="Top" HorizontalAlignment="Center" Margin="0,0,0,0" /> -->
			</StackPanel>
	<Rectangle Fill="{DynamicResource TextBrush}" Opacity="0.8" Margin="-60,0,-950,0" Width="1728" Height="2" VerticalAlignment="Bottom" HorizontalAlignment="Stretch" />

	</Grid>
	</DataTemplate>

	<!-- Épaisseur pour l'espacement des éléments de section -->
	<Thickness x:Key="SettingsSectionItemSpacing">0,10,10,10</Thickness>

	<!-- Style pour le curseur de section -->
	<Style x:Key="SettingsSectionSlider" TargetType="SliderEx" BasedOn="{StaticResource {x:Type SliderEx}}">
		<Setter Property="Width" Value="300" />
		<Setter Property="Margin" Value="{DynamicResource SettingsSectionItemSpacing}" />
	</Style>

	<!-- Style pour la case à cocher de section -->
	<Style x:Key="SettingsSectionCheckbox" TargetType="CheckBoxEx">
		<!-- Styles et modèles -->
		<Setter Property="Margin" Value="{DynamicResource SettingsSectionItemSpacing}" />
		<Setter Property="FocusVisualStyle" Value="{x:Null}" />
		<Setter Property="Foreground" Value="{DynamicResource TextBrush}" />
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="Margin" Value="0,5,0,5" />
		<Setter Property="Height" Value="60" />
		<Setter Property="SnapsToDevicePixels" Value="True" />
		<Setter Property="HorizontalAlignment" Value="Stretch" />
		<Setter Property="HorizontalContentAlignment" Value="Right" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="CheckBox">
					<Grid Background="{TemplateBinding Background}">
						<Border x:Name="MainBorder" Margin="0" CornerRadius="{DynamicResource Corner}" BorderThickness="3" Opacity="0" Style="{DynamicResource AnimatedBorderBrush}" Tag="False" Visibility="Collapsed" >
						</Border>
						<Border x:Name="FlashMenuBorder" Margin="0" CornerRadius="{DynamicResource Corner}" Style="{DynamicResource AnimatedFlashMenu}" Tag="False" Visibility="Collapsed">
						</Border>
						<Grid Margin="10,0">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="*" />
								<ColumnDefinition Width="Auto" />
							</Grid.ColumnDefinitions>
							<TextBlock x:Name="Text" Style="{DynamicResource TextBlockBaseStyle}"
                                        Foreground="{TemplateBinding Foreground}"
                                        HorizontalAlignment="Left"
                                        VerticalAlignment="Center"
									    Margin="-5,0,0,0"
                                        Grid.Column="0" TextTrimming="WordEllipsis">
								<ContentPresenter RecognizesAccessKey="True" />
							</TextBlock>
							<Border x:Name="Off" Background="Transparent"
								   VerticalAlignment="Center" HorizontalAlignment="Right"
								   Grid.Column="1" CornerRadius="0" Margin="0,0,0,0" Width="70" Height="40">
								<Viewbox>
									<Image Margin="0,0,0,0" VerticalAlignment="Center" HorizontalAlignment="Right"
									  Source="{ThemeFile 'Images/Off.png'}" RenderOptions.BitmapScalingMode="Fant" />
								</Viewbox>
							</Border>
							<Border x:Name="On" Visibility="Collapsed" Background="Transparent"
								VerticalAlignment="Center" HorizontalAlignment="Right"
								Grid.Column="1" CornerRadius="0" Margin="0,0,0,0" Width="70" Height="40">
								<Viewbox>
									<Image Margin="0,0,0,0" VerticalAlignment="Center" HorizontalAlignment="Right"
									  Source="{ThemeFile 'Images/On.png'}" RenderOptions.BitmapScalingMode="Fant" />
								</Viewbox>
							</Border>
						</Grid>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsChecked" Value="True">
							<Setter Property="Visibility" Value="Visible" TargetName="On" />
							<Setter Property="Visibility" Value="Collapsed" TargetName="Off" />
						</Trigger>
						<Trigger Property="IsFocused" Value="True">
							<Setter Property="Tag" Value="True" TargetName="MainBorder" />
							<Setter Property="Tag" Value="True" TargetName="FlashMenuBorder" />
							<Setter Property="Visibility" Value="Visible" TargetName="MainBorder" />
							<Setter Property="Visibility" Value="Visible" TargetName="FlashMenuBorder" />
						</Trigger>
						<Trigger Property="IsMouseOver" Value="True">
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- Style Preview Theme Options -->
	<Style TargetType="Grid" x:Key="ThemeOptionsPreviewImageGridStyle">
		<Setter Property="Margin" Value="-370,0,0,0" />
		<Setter Property="Width" Value="900" />
		<Setter Property="Height" Value="500" />
		<Setter Property="VerticalAlignment" Value="Top" />
		<Setter Property="HorizontalAlignment" Value="Center" />
	</Style>



	<!-- Style pour la liste déroulante de section -->
	<Style x:Key="SettingsSectionCombobox" TargetType="ComboBoxEx" BasedOn="{StaticResource {x:Type ComboBoxEx}}">
		<Setter Property="MinWidth" Value="250" />
		<Setter Property="Margin" Value="{DynamicResource SettingsSectionItemSpacing}" />
	</Style>

	<!-- Style pour le texte de section -->
	<Style x:Key="SettingsSectionText" TargetType="TextBlock" BasedOn="{StaticResource TextBlockBaseStyle}">
		<Setter Property="VerticalAlignment" Value="Center" />
		<Setter Property="HorizontalAlignment" Value="Center" />

	</Style>

	<!-- Modèles de données pour les boutons du menu de réglages -->
	<DataTemplate x:Key="SettingsMenuGeneralButtonTemplate">
		<StackPanel Orientation="Horizontal">
			<!-- Texte du bouton "Général" -->
			<TextBlock Text="{DynamicResource LOCSettingsFSSectionGeneral}" VerticalAlignment="Center"  Margin="5,0,0,0" />
		</StackPanel>
	</DataTemplate>

	<DataTemplate x:Key="SettingsMenuVisualsButtonTemplate">
		<StackPanel Orientation="Horizontal">
			<!-- Texte du bouton "Visuals" -->
			<TextBlock Text="{DynamicResource LOCSettingsFSSectionVisuals}" VerticalAlignment="Center"  Margin="5,0,0,0" />
		</StackPanel>
	</DataTemplate>

	<DataTemplate x:Key="SettingsMenuAudioButtonTemplate">
		<StackPanel Orientation="Horizontal">
			<!-- Texte du bouton "Audio" -->
			<TextBlock Text="{DynamicResource LOCSettingsFSSectionAudio}" VerticalAlignment="Center"  Margin="5,0,0,0" />
		</StackPanel>
	</DataTemplate>

	<DataTemplate x:Key="SettingsMenuThemeOptionsButtonTemplate">
		<StackPanel Orientation="Horizontal">
			<!-- Texte du bouton "Theme Options" -->
			<TextBlock Text="{DynamicResource LOCThemeOptionsSettingsMenu}" VerticalAlignment="Center" />
		</StackPanel>
	</DataTemplate>

	<DataTemplate x:Key="SettingsMenuLayoutButtonTemplate">
		<StackPanel Orientation="Horizontal">
			<!-- Texte du bouton "Layout" -->
			<TextBlock Text="{DynamicResource LOCSettingsFSSectionLayout}" VerticalAlignment="Center"  Margin="5,0,0,0" />
		</StackPanel>
	</DataTemplate>

	<DataTemplate x:Key="SettingsMenuMenusButtonTemplate">
		<StackPanel Orientation="Horizontal">
			<!-- Texte du bouton "Menus" -->
			<TextBlock Text="{DynamicResource LOCSettingsFSSectionMenus}" VerticalAlignment="Center"  Margin="5,0,0,0" />
		</StackPanel>
	</DataTemplate>

	<DataTemplate x:Key="SettingsMenuInputButtonTemplate">
		<StackPanel Orientation="Horizontal">
			<!-- Texte du bouton "Input" -->
			<TextBlock Text="{DynamicResource LOCSettingsFSSection}" VerticalAlignment="Center" Margin="5,0,0,0" />
		</StackPanel>
	</DataTemplate>
</ResourceDictionary>
