<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:pmrk="clr-namespace:Playnite.FullscreenApp.Markup;assembly=Playnite.FullscreenApp">

    <!-- Style pour le cadre du menu principal -->
    <Style x:Key="MainMenuBorder" TargetType="Border">
        <Setter Property="Tag" Value="{DynamicResource BackgroundImageIndex}" />
        <Setter Property="Height" Value="1080" />
        <Setter Property="Width" Value="1920" />
        <Setter Property="CornerRadius" Value="0"/>
        <Setter Property="Margin" Value="0,0,0,0" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="Background" Value="{DynamicResource MainMenu1}"/>
        <Setter Property="RenderTransform">
            <Setter.Value>
                <TranslateTransform X="-1920" />
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <!-- DataTrigger pour changer l'image de fond en fonction de BackgroundImageIndex -->
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Tag}" Value="1">
                <Setter Property="Background" Value="{DynamicResource MainMenu1}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Tag}" Value="2">
                <Setter Property="Background" Value="{DynamicResource MainMenu2}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Tag}" Value="3">
                <Setter Property="Background" Value="{DynamicResource MainMenu3}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Tag}" Value="4">
                <Setter Property="Background" Value="{DynamicResource MainMenu4}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Tag}" Value="5">
                <Setter Property="Background" Value="{DynamicResource MainMenu5}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Tag}" Value="6">
                <Setter Property="Background" Value="{DynamicResource MainMenu6}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Tag}" Value="7">
                <Setter Property="Background" Value="{DynamicResource MainMenu7}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Tag}" Value="8">
                <Setter Property="Background" Value="{DynamicResource MainMenu8}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Tag}" Value="9">
                <Setter Property="Background" Value="{DynamicResource MainMenu9}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Tag}" Value="10">
                <Setter Property="Background" Value="{DynamicResource MainMenu10}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Tag}" Value="11">
                <Setter Property="Background" Value="{DynamicResource MainMenu11}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Tag}" Value="12">
                <Setter Property="Background" Value="{DynamicResource MainMenu12}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Tag}" Value="13">
                <Setter Property="Background" Value="{DynamicResource MainMenu13}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Tag}" Value="14">
                <Setter Property="Background" Value="{DynamicResource MainMenu14}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Tag}" Value="15">
                <Setter Property="Background" Value="{DynamicResource MainMenu15}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Tag}" Value="16">
                <Setter Property="Background" Value="{DynamicResource MainMenu16}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Tag}" Value="17">
                <Setter Property="Background" Value="{DynamicResource MainMenu17}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Tag}" Value="18">
                <Setter Property="Background" Value="{DynamicResource MainMenu18}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Tag}" Value="19">
                <Setter Property="Background" Value="{DynamicResource MainMenu19}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Tag}" Value="20">
                <Setter Property="Background" Value="{DynamicResource MainMenu20}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Tag}" Value="21">
                <Setter Property="Background" Value="{DynamicResource MainMenu21}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Tag}" Value="22">
                <Setter Property="Background" Value="{DynamicResource MainMenu22}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Tag}" Value="23">
                <Setter Property="Background" Value="{DynamicResource MainMenu23}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Tag}" Value="24">
                <Setter Property="Background" Value="{DynamicResource MainMenu24}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Tag}" Value="25">
                <Setter Property="Background" Value="{DynamicResource MainMenu25}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Tag}" Value="26">
                <Setter Property="Background" Value="{DynamicResource MainMenu26}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Tag}" Value="27">
                <Setter Property="Background" Value="{DynamicResource MainMenu27}"/>
            </DataTrigger>

            <EventTrigger RoutedEvent="Window.Loaded">
                <BeginStoryboard>
                    <Storyboard x:Name="ShowMenuStoryboard">
                        <!-- Slide in from left -->
                        <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" From="-1920" To="0" Duration="0:0:0.45">
                            <DoubleAnimation.EasingFunction>
                                <CubicEase EasingMode="EaseOut"/>
                            </DoubleAnimation.EasingFunction>
                        </DoubleAnimation>

                        <!-- Opacité -->
                        <DoubleAnimation Storyboard.TargetProperty="Opacity" From="0" To="1" Duration="0:0:0.35" BeginTime="0:0:0.1"/>
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
        </Style.Triggers>
    </Style>

    <!-- Style pour les boutons du menu principal -->
    <Style x:Key="MainMenuButton" BasedOn="{StaticResource {x:Type ButtonEx}}" TargetType="ButtonEx">
        <Setter Property="Margin" Value="10,10,10,0" />
        <Setter Property="Height" Value="60" />
        <Setter Property="Width" Value="430" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid Background="{TemplateBinding Background}">
                        <Border CornerRadius="{DynamicResource Corner}" Opacity="0.4" Background="Transparent"
                                x:Name="MainBackground"/>
                        <Border x:Name="MainBorder" Margin="-6"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                Style="{DynamicResource AnimatedBorderBrush}" Tag="False"
                                BorderThickness="3" CornerRadius="{DynamicResource Corner}" Visibility="Collapsed" />
                        <TextBlock x:Name="Text" Style="{DynamicResource ButtonTextBlockBaseStyle}"
                                   Foreground="{TemplateBinding Foreground}" FontWeight="SemiBold" FontSize="24"
                                   HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                   VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                   Margin="25,0">
                            <ContentPresenter />
                        </TextBlock>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Name, RelativeSource={RelativeSource Self}}" Value="PART_ButtonKofi"/>
                                <Condition Binding="{PluginSettings Plugin=ThemeOptions, Path=Options[ShowKoFiMenu]}" Value="Collapsed"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Visibility" Value="Collapsed" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Name, RelativeSource={RelativeSource Self}}" Value="PART_ButtonPatreon"/>
                                <Condition Binding="{PluginSettings Plugin=ThemeOptions, Path=Options[ShowParteonMenu]}" Value="Collapsed"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Visibility" Value="Collapsed" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Name, RelativeSource={RelativeSource Self}}" Value="PART_ButtonFeedback"/>
                                <Condition Binding="{PluginSettings Plugin=ThemeOptions, Path=Options[ShowHelpMenu]}" Value="Collapsed"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Visibility" Value="Collapsed" />
                        </MultiDataTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.5" />
                        </Trigger>

                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="Foreground" Value="{DynamicResource TextBrushDark}" />
                            <Setter Property="Tag" Value="True" TargetName="MainBorder" />
                            <Setter Property="Visibility" Value="Visible" TargetName="MainBorder" />
                            <Setter Property="Opacity" Value="1" TargetName="MainBackground" />
                            <Setter Property="Background" Value="White" TargetName="MainBackground" />
                        </Trigger>

                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Visibility" Value="Visible" TargetName="MainBorder" />
                            <Setter Property="Background" Value="White" TargetName="MainBackground" />
                            <Setter Property="Foreground" Value="{DynamicResource TextBrushDark}" />
                            <Setter Property="Opacity" Value="1" TargetName="MainBackground" />
                            <Setter Property="Tag" Value="True" TargetName="MainBorder" />
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="Transparent" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!-- Modèle de l'en-tête du menu principal -->
    <DataTemplate x:Key="MainMenuHeaderTemplate">
        <Grid Margin="10,20,0,20">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="100"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Border RenderOptions.BitmapScalingMode="Fant" Margin="0,0,0,0" CornerRadius="5" Height="60" Width="60" VerticalAlignment="Top" HorizontalAlignment="Center" ClipToBounds="True" >
                <Border.Style>
                    <Style TargetType="Border">
                        <Setter Property="Background" Value="{DynamicResource Avatar99}"/>
                        <Setter Property="Grid.Column" Value="0"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{PluginSettings Plugin=ThemeOptions, Path=Options[AvatarImageIndex]}" Value="1">
                                <Setter Property="Background" Value="{DynamicResource Avatar99}"/>
                            </DataTrigger>
                            <DataTrigger Binding="{PluginSettings Plugin=ThemeOptions, Path=Options[AvatarImageIndex]}" Value="2">
                                <Setter Property="Background" Value="{DynamicResource Avatar2}"/>
                            </DataTrigger>
                            <DataTrigger Binding="{PluginSettings Plugin=ThemeOptions, Path=Options[AvatarImageIndex]}" Value="3">
                                <Setter Property="Background" Value="{DynamicResource Avatar3}"/>
                            </DataTrigger>
                            <DataTrigger Binding="{PluginSettings Plugin=ThemeOptions, Path=Options[AvatarImageIndex]}" Value="4">
                                <Setter Property="Background" Value="{DynamicResource Avatar4}"/>
                            </DataTrigger>
                            <DataTrigger Binding="{PluginSettings Plugin=ThemeOptions, Path=Options[AvatarImageIndex]}" Value="5">
                                <Setter Property="Background" Value="{DynamicResource Avatar5}"/>
                            </DataTrigger>
                            <DataTrigger Binding="{PluginSettings Plugin=ThemeOptions, Path=Options[AvatarImageIndex]}" Value="6">
                                <Setter Property="Background" Value="{DynamicResource Avatar6}"/>
                            </DataTrigger>
                            <DataTrigger Binding="{PluginSettings Plugin=ThemeOptions, Path=Options[AvatarImageIndex]}" Value="7">
                                <Setter Property="Background" Value="{DynamicResource Avatar7}"/>
                            </DataTrigger>
                            <DataTrigger Binding="{PluginSettings Plugin=ThemeOptions, Path=Options[AvatarImageIndex]}" Value="8">
                                <Setter Property="Background" Value="{DynamicResource Avatar8}"/>
                            </DataTrigger>
                            <DataTrigger Binding="{PluginSettings Plugin=ThemeOptions, Path=Options[AvatarImageIndex]}" Value="9">
                                <Setter Property="Background" Value="{DynamicResource Avatar9}"/>
                            </DataTrigger>
                            <DataTrigger Binding="{PluginSettings Plugin=ThemeOptions, Path=Options[AvatarImageIndex]}" Value="10">
                                <Setter Property="Background" Value="{DynamicResource Avatar10}"/>
                            </DataTrigger>
                            <DataTrigger Binding="{PluginSettings Plugin=ThemeOptions, Path=Options[AvatarImageIndex]}" Value="11">
                                <Setter Property="Background" Value="{DynamicResource Avatar11}"/>
                            </DataTrigger>
                            <DataTrigger Binding="{PluginSettings Plugin=ThemeOptions, Path=Options[AvatarImageIndex]}" Value="12">
                                <Setter Property="Background" Value="{DynamicResource Avatar12}"/>
                            </DataTrigger>
                            <DataTrigger Binding="{PluginSettings Plugin=ThemeOptions, Path=Options[AvatarImageIndex]}" Value="13">
                                <Setter Property="Background" Value="{DynamicResource Avatar13}"/>
                            </DataTrigger>
                            <DataTrigger Binding="{PluginSettings Plugin=ThemeOptions, Path=Options[AvatarImageIndex]}" Value="14">
                                <Setter Property="Background" Value="{DynamicResource Avatar14}"/>
                            </DataTrigger>
                            <DataTrigger Binding="{PluginSettings Plugin=ThemeOptions, Path=Options[AvatarImageIndex]}" Value="15">
                                <Setter Property="Background" Value="{DynamicResource Avatar15}"/>
                            </DataTrigger>
                            <DataTrigger Binding="{PluginSettings Plugin=ThemeOptions, Path=Options[AvatarImageIndex]}" Value="16">
                                <Setter Property="Background" Value="{DynamicResource Avatar16}"/>
                            </DataTrigger>
                            <DataTrigger Binding="{PluginSettings Plugin=ThemeOptions, Path=Options[AvatarImageIndex]}" Value="17">
                                <Setter Property="Background" Value="{DynamicResource Avatar17}"/>
                            </DataTrigger>
                            <DataTrigger Binding="{PluginSettings Plugin=ThemeOptions, Path=Options[AvatarImageIndex]}" Value="18">
                                <Setter Property="Background" Value="{DynamicResource Avatar18}"/>
                            </DataTrigger>
                            <DataTrigger Binding="{PluginSettings Plugin=ThemeOptions, Path=Options[AvatarImageIndex]}" Value="19">
                                <Setter Property="Background" Value="{DynamicResource Avatar19}"/>
                            </DataTrigger>
                            <DataTrigger Binding="{PluginSettings Plugin=ThemeOptions, Path=Options[AvatarImageIndex]}" Value="20">
                                <Setter Property="Background" Value="{DynamicResource Avatar20}"/>
                            </DataTrigger>
                            <DataTrigger Binding="{PluginSettings Plugin=ThemeOptions, Path=Options[AvatarImageIndex]}" Value="21">
                                <Setter Property="Background" Value="{DynamicResource Avatar21}"/>
                            </DataTrigger>
                            <DataTrigger Binding="{PluginSettings Plugin=ThemeOptions, Path=Options[AvatarImageIndex]}" Value="22">
                                <Setter Property="Background" Value="{DynamicResource Avatar22}"/>
                            </DataTrigger>
                            <DataTrigger Binding="{PluginSettings Plugin=ThemeOptions, Path=Options[AvatarImageIndex]}" Value="23">
                                <Setter Property="Background" Value="{DynamicResource Avatar23}"/>
                            </DataTrigger>
                            <DataTrigger Binding="{PluginSettings Plugin=ThemeOptions, Path=Options[AvatarImageIndex]}" Value="24">
                                <Setter Property="Background" Value="{DynamicResource Avatar24}"/>
                            </DataTrigger>
                            <DataTrigger Binding="{PluginSettings Plugin=ThemeOptions, Path=Options[AvatarImageIndex]}" Value="25">
                                <Setter Property="Background" Value="{DynamicResource Avatar25}"/>
                            </DataTrigger>
                            <DataTrigger Binding="{PluginSettings Plugin=ThemeOptions, Path=Options[AvatarImageIndex]}" Value="26">
                                <Setter Property="Background" Value="{DynamicResource Avatar26}"/>
                            </DataTrigger>
                            <DataTrigger Binding="{PluginSettings Plugin=ThemeOptions, Path=Options[AvatarImageIndex]}" Value="27">
                                <Setter Property="Background" Value="{DynamicResource Avatar27}"/>
                            </DataTrigger>
                            <DataTrigger Binding="{PluginSettings Plugin=ThemeOptions, Path=Options[AvatarImageIndex]}" Value="28">
                                <Setter Property="Background" Value="{DynamicResource Avatar28}"/>
                            </DataTrigger>
                            <DataTrigger Binding="{PluginSettings Plugin=ThemeOptions, Path=Options[AvatarImageIndex]}" Value="29">
                                <Setter Property="Background" Value="{DynamicResource Avatar29}"/>
                            </DataTrigger>
                            <DataTrigger Binding="{PluginSettings Plugin=ThemeOptions, Path=Options[AvatarImageIndex]}" Value="30">
                                <Setter Property="Background" Value="{DynamicResource Avatar30}"/>
                            </DataTrigger>
                            <DataTrigger Binding="{PluginSettings Plugin=ThemeOptions, Path=Options[AvatarImageIndex]}" Value="31">
                                <Setter Property="Background" Value="{DynamicResource Avatar31}"/>
                            </DataTrigger>
                            <DataTrigger Binding="{PluginSettings Plugin=ThemeOptions, Path=Options[AvatarImageIndex]}" Value="32">
                                <Setter Property="Background" Value="{DynamicResource Avatar32}"/>
                            </DataTrigger>
                            <DataTrigger Binding="{PluginSettings Plugin=ThemeOptions, Path=Options[AvatarImageIndex]}" Value="33">
                                <Setter Property="Background" Value="{DynamicResource Avatar33}"/>
                            </DataTrigger>
                            <DataTrigger Binding="{PluginSettings Plugin=ThemeOptions, Path=Options[AvatarImageIndex]}" Value="34">
                                <Setter Property="Background" Value="{DynamicResource Avatar34}"/>
                            </DataTrigger>
                            <DataTrigger Binding="{PluginSettings Plugin=ThemeOptions, Path=Options[AvatarImageIndex]}" Value="35">
                                <Setter Property="Background" Value="{DynamicResource Avatar35}"/>
                            </DataTrigger>
                            <DataTrigger Binding="{PluginSettings Plugin=ThemeOptions, Path=Options[AvatarImageIndex]}" Value="36">
                                <Setter Property="Background" Value="{DynamicResource Avatar36}"/>
                            </DataTrigger>
                            <DataTrigger Binding="{PluginSettings Plugin=ThemeOptions, Path=Options[AvatarImageIndex]}" Value="37">
                                <Setter Property="Background" Value="{DynamicResource Avatar37}"/>
                            </DataTrigger>
                            <DataTrigger Binding="{PluginSettings Plugin=ThemeOptions, Path=Options[AvatarImageIndex]}" Value="38">
                                <Setter Property="Background" Value="{DynamicResource Avatar38}"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Border.Style>
            </Border>

            <TextBlock Grid.Column="1"
                       Text="{DynamicResource UserName}"
                       HorizontalAlignment="Center"
                       Style="{DynamicResource TextBlockBaseStyle}"
                       FontSize="35"
                       MaxWidth="380"
                       TextTrimming="CharacterEllipsis"
                       VerticalAlignment="Center"/>
        </Grid>
    </DataTemplate>

    <!-- Modèle de bouton pour accéder aux paramètres -->
    <DataTemplate x:Key="MainMenuSettingsButtonTemplate">
        <StackPanel Orientation="Horizontal">
            <TextBlock Text="&#xef3a;" FontFamily="{DynamicResource FontIcoFont}" FontSize="30"
                       VerticalAlignment="Center" HorizontalAlignment="Center" Margin="0,0,30,0"/>
            <TextBlock Text="{DynamicResource LOCSettingsLabel}" VerticalAlignment="Center" />
        </StackPanel>
    </DataTemplate>

    <!-- Modèle de bouton pour mettre à jour la bibliothèque -->
    <DataTemplate x:Key="MainMenuLibUpdateButtonTemplate">
        <StackPanel Orientation="Horizontal">
            <TextBlock Text="&#xefd1;" FontFamily="{DynamicResource FontIcoFont}" FontSize="30"
                       VerticalAlignment="Center" HorizontalAlignment="Center" Margin="0,0,30,0"/>
            <TextBlock Text="{DynamicResource LOCMenuReloadLibrary}" VerticalAlignment="Center" />
        </StackPanel>
    </DataTemplate>

    <!-- Modèle de bouton pour annuler la mise à jour de la bibliothèque -->
    <DataTemplate x:Key="MainMenuCancelLibUpdateButtonTemplate">
        <StackPanel Orientation="Horizontal">
            <TextBlock Text="&#xecb1;" FontFamily="{DynamicResource FontIcoFont}" FontSize="30"
                       VerticalAlignment="Center" HorizontalAlignment="Center" Margin="0,0,30,0"/>
            <TextBlock Text="{DynamicResource LOCMenuCancelLibraryUpdate}" VerticalAlignment="Center" />
        </StackPanel>
    </DataTemplate>

    <!-- Modèle de bouton pour quitter Playnite -->
    <DataTemplate x:Key="MainMenuExitPlayniteButtonTemplate">
        <StackPanel Orientation="Horizontal">
            <TextBlock Text="&#xef16;" FontFamily="{DynamicResource FontIcoFont}" FontSize="30"
                       VerticalAlignment="Center" HorizontalAlignment="Center" Margin="0,0,30,0"/>
            <TextBlock Text="{DynamicResource LOCExitPlaynite}" VerticalAlignment="Center" />
        </StackPanel>
    </DataTemplate>

    <!-- Modèle de bouton pour basculer vers le bureau -->
    <DataTemplate x:Key="MainMenuSwithDesktopButtonTemplate">
        <StackPanel Orientation="Horizontal">
            <TextBlock Text="&#xef1d;" FontFamily="{DynamicResource FontIcoFont}" FontSize="30"
                       VerticalAlignment="Center" HorizontalAlignment="Center" Margin="0,0,30,0"/>
            <TextBlock Text="{DynamicResource LOCBackToDesktopMode}" VerticalAlignment="Center" />
        </StackPanel>
    </DataTemplate>

    <!-- Modèle de bouton pour sélectionner un jeu aléatoire -->
    <DataTemplate x:Key="MainMenuRandomGameButtonTemplate">
        <StackPanel Orientation="Horizontal">
            <TextBlock Text="&#xefcf;" FontFamily="{DynamicResource FontIcoFont}" FontSize="30"
                       VerticalAlignment="Center" HorizontalAlignment="Center" Margin="0,0,30,0"/>
            <TextBlock Text="{DynamicResource LOCMenuSelectRandomGame}" VerticalAlignment="Center" />
        </StackPanel>
    </DataTemplate>

    <!-- Modèle de bouton pour arrêter le système -->
    <DataTemplate x:Key="MainMenuShutdowButtonTemplate">
        <StackPanel Orientation="Horizontal">
            <TextBlock Text="&#xefc4;" FontFamily="{DynamicResource FontIcoFont}" FontSize="30"
                       VerticalAlignment="Center" HorizontalAlignment="Center" Margin="0,0,30,0"/>
            <TextBlock Text="{DynamicResource LOCMenuShutdownSystem}" VerticalAlignment="Center" />
        </StackPanel>
    </DataTemplate>

    <!-- Modèle de bouton pour suspendre le système -->
    <DataTemplate x:Key="MainMenuSuspendButtonTemplate">
        <StackPanel Orientation="Horizontal">
            <TextBlock Text="&#xef9e;" FontFamily="{DynamicResource FontIcoFont}" FontSize="30"
                       VerticalAlignment="Center" HorizontalAlignment="Center" Margin="0,0,30,0"/>
            <TextBlock Text="{DynamicResource LOCMenuSuspendSystem}" VerticalAlignment="Center" />
        </StackPanel>
    </DataTemplate>

    <!-- Modèle de bouton pour hiberner le système -->
    <DataTemplate x:Key="MainMenuHibernateButtonTemplate">
        <StackPanel Orientation="Horizontal">
            <TextBlock Text="&#xefc4;" FontFamily="{DynamicResource FontIcoFont}" FontSize="30"
                       VerticalAlignment="Center" HorizontalAlignment="Center" Margin="0,0,30,0"/>
            <TextBlock Text="{DynamicResource LOCMenuHibernateSystem}" VerticalAlignment="Center" />
        </StackPanel>
    </DataTemplate>

    <!-- Modèle de bouton pour redémarrer le système -->
    <DataTemplate x:Key="MainMenuRestartButtonTemplate">
        <StackPanel Orientation="Horizontal">
            <TextBlock Text="&#xef80;" FontFamily="{DynamicResource FontIcoFont}" FontSize="30"
                       VerticalAlignment="Center" HorizontalAlignment="Center" Margin="0,0,30,0"/>
            <TextBlock Text="{DynamicResource LOCMenuRestartSystem}" VerticalAlignment="Center" />
        </StackPanel>
    </DataTemplate>

    <DataTemplate x:Key="MainMenuMinimizeButtonTemplate">
        <StackPanel Orientation="Horizontal">
            <TextBlock Text="&#128471;" FontFamily="{DynamicResource FontIcoFont}" FontSize="30"
                       VerticalAlignment="Center" HorizontalAlignment="Left" Margin="0,0,30,0"/>
            <TextBlock Text="{DynamicResource LOCMinimize}" VerticalAlignment="Center" />
        </StackPanel>
    </DataTemplate>

    <!-- Modèle de bouton pour accéder à l'aide -->
    <DataTemplate x:Key="MainMenuHelpButtonTemplate">
        <StackPanel Orientation="Horizontal">
            <TextBlock Text="&#xefca;" FontFamily="{DynamicResource FontIcoFont}" FontSize="30"
                       VerticalAlignment="Center" HorizontalAlignment="Center" Margin="0,0,30,0"/>
            <TextBlock Text="{DynamicResource LOCMenuHelpTitle}" VerticalAlignment="Center" />
        </StackPanel>
    </DataTemplate>

    <!-- Modèle de bouton pour supporter sur Patreon -->
    <DataTemplate x:Key="MainMenuPatreonButtonTemplate" >
        <StackPanel Orientation="Horizontal" Focusable="False">
            <TextBlock Text="&#x24;" FontFamily="{DynamicResource FontIcoFont}" FontSize="30"
                       VerticalAlignment="Center" HorizontalAlignment="Center" Margin="0,0,30,0"/>
            <TextBlock Text="{DynamicResource LOCMenuPatreonSupport}" VerticalAlignment="Center" />
        </StackPanel>
    </DataTemplate>

    <!-- Modèle de bouton pour les Clients Externe -->
    <DataTemplate x:Key="MainMenuClientsButtonTemplate">
        <StackPanel Orientation="Horizontal">
            <TextBlock Text="&#xec84;" FontFamily="{DynamicResource FontIcoFont}" FontSize="30"
                       VerticalAlignment="Center" HorizontalAlignment="Left" Margin="0,0,30,0"/>
            <TextBlock Text="{DynamicResource LOCMenuOpenClient}" VerticalAlignment="Center" />
        </StackPanel>
    </DataTemplate>

    <!-- Modèle de bouton pour les Outils -->
    <DataTemplate x:Key="MainMenuToolsButtonTemplate">
        <StackPanel Orientation="Horizontal">
            <TextBlock Text="&#xf013;" FontFamily="{DynamicResource FontIcoFont}" FontSize="30"
                       VerticalAlignment="Center" HorizontalAlignment="Left" Margin="0,0,30,0"/>
            <TextBlock Text="{DynamicResource LOCMenuTools}" VerticalAlignment="Center" />
        </StackPanel>
    </DataTemplate>

    <!-- Modèle de bouton pour les extensions -->
    <DataTemplate x:Key="MainMenuExtensionsButtonTemplate">
        <StackPanel Orientation="Horizontal">
            <TextBlock Text="&#xefc7;" FontFamily="{DynamicResource FontIcoFont}" FontSize="30"
                       VerticalAlignment="Center" HorizontalAlignment="Left" Margin="0,0,30,0"/>
            <TextBlock Text="{DynamicResource LOCExtensions}" VerticalAlignment="Center" />
        </StackPanel>
    </DataTemplate>



</ResourceDictionary>
