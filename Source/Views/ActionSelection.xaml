<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

	<!-- Style du bouton de sélection d'action -->
	<Style x:Key="ActionSelectionButton" BasedOn="{StaticResource {x:Type ButtonEx}}" TargetType="ButtonEx">
		<Setter Property="Margin" Value="0,0,0,5" />
		<!-- Marge inférieure -->
		<Setter Property="Height" Value="40" />
		<!-- Hauteur fixe -->
		<Setter Property="HorizontalAlignment" Value="Stretch" />
		<!-- Alignement horizontal étendu -->
		<Setter Property="HorizontalContentAlignment" Value="Left" />
		<!-- Alignement horizontal à gauche -->
		<Setter Property="VerticalContentAlignment" Value="Center" />
		<!-- Alignement vertical centré -->
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="Button">
					<Grid Background="{TemplateBinding Background}">
						<!-- Bordure principale pour les animations -->
						<Border x:Name="MainBorder" Margin="0,0,0,0" BorderThickness="3" CornerRadius="{DynamicResource Corner}" Opacity="0" Style="{DynamicResource AnimatedBorderBrush}" Tag="False" Visibility="Collapsed" >
						</Border>
						<!-- Bordure de clignotement pour les animations -->
						<Border x:Name="FlashMenuBorder" Margin="5" CornerRadius="{DynamicResource Corner}" Style="{DynamicResource AnimatedFlashMenu}" Tag="False" Visibility="Collapsed">
						</Border>
						<!-- Texte à l'intérieur du bouton -->
						<TextBlock Style="{DynamicResource TextBlockBaseStyle}"
									Margin="10,5,10,0" DockPanel.Dock="Left"
									Foreground="{TemplateBinding Foreground}" TextTrimming="CharacterEllipsis" TextWrapping="Wrap"
									HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
									VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
							<ContentPresenter />
						</TextBlock>
					</Grid>
					<!-- Déclencheurs de la Template -->
					<ControlTemplate.Triggers>
						<!-- Lorsque le bouton est en focus -->
						<Trigger Property="IsFocused" Value="True">
							<Setter Property="Tag" Value="True" TargetName="MainBorder" />
							<Setter Property="Tag" Value="True" TargetName="FlashMenuBorder" />
							<Setter Property="Visibility" Value="Visible" TargetName="MainBorder" />
							<Setter Property="Visibility" Value="Visible" TargetName="FlashMenuBorder" />
						</Trigger>
						<!-- Lorsque la souris survole le bouton -->
						<Trigger Property="IsMouseOver" Value="True">
							<Setter Property="Foreground" Value="{DynamicResource SelectionLightBrush}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- Style du conteneur de sélection d'action -->
	<Style x:Key="ActionSelectionBorder" TargetType="Border">
		<Setter Property="CornerRadius" Value="5" />
		<!-- Coins arrondis -->
		<Setter Property="Padding" Value="10" />
		<!-- Remplissage intérieur -->
		<Setter Property="Background" Value="{DynamicResource ControlBackgroundDarkBrush}" />
		<!-- Fond sombre -->
	</Style>

	<!-- Style du texte d'en-tête de sélection d'action -->
	<Style x:Key="ActionSelectionHeaderText" BasedOn="{StaticResource TextBlockBaseStyle}" TargetType="TextBlock" >
		<Setter Property="VerticalAlignment" Value="Center" />
		<!-- Alignement vertical centré -->
		<Setter Property="HorizontalAlignment" Value="Stretch" />
		<!-- Alignement horizontal étendu -->
		<Setter Property="TextWrapping" Value="Wrap" />
		<!-- Enveloppement du texte -->
		<Setter Property="Padding" Value="15,15,15,10" />
		<!-- Remplissage intérieur -->
		<Setter Property="Margin" Value="0,0,0,10" />
		<!-- Marge inférieure -->
		<Setter Property="Background" Value="{DynamicResource ControlBackgroundDarkBrush}" />
		<!-- Fond sombre -->
	</Style>
</ResourceDictionary>
