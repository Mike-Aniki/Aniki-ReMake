<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:s="clr-namespace:System;assembly=mscorlib"
    xmlns:p="clr-namespace:Playnite;assembly=Playnite"
    xmlns:pbeh="clr-namespace:Playnite.Behaviors;assembly=Playnite"
    xmlns:ctrl="clr-namespace:Playnite.FullscreenApp.Controls;assembly=Playnite.FullscreenApp"
    xmlns:pin="clr-namespace:Playnite.Input;assembly=Playnite"
    xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
    xmlns:prism="clr-namespace:Prism.Interactivity;assembly=Prism.Wpf"
    xmlns:Behaviors="clr-namespace:Microsoft.Xaml.Behaviors;assembly=Microsoft.Xaml.Behaviors"
    xmlns:BehaviorsCore="clr-namespace:Microsoft.Xaml.Behaviors.Core;assembly=Microsoft.Xaml.Behaviors"
    xmlns:BehaviorsMedia="clr-namespace:Microsoft.Xaml.Behaviors.Media;assembly=Microsoft.Xaml.Behaviors"
	xmlns:playnite="clr-namespace:Playnite;assembly=Playnite"
    mc:Ignorable="d">

	<!-- Définition du style pour Main -->
	<Style TargetType="{x:Type Main}">
		<Setter Property="Template">
			<Setter.Value>
				<!-- Définition du modèle de contrôle -->
				<ControlTemplate TargetType="{x:Type Main}">
					<!-- Contenu du contrôle -->
					<Grid x:Name="PART_MainHost"
						  d:DesignWidth="{StaticResource DesignWidth}"
						  d:DesignHeight="{StaticResource DesignHeight}"
						  d:DataContext="{x:Static DesignMainViewModel.DesignIntance}" >
						<Grid.Resources>
							<p:BindingProxy x:Key="MAIN_Commands" Data="{Binding}" />
							<p:BindingProxy x:Key="THEMEOPTIONS_Commands" Data="{Binding Content, ElementName=ThemeOptions_Command}" />
						</Grid.Resources>

						<!-- Style de la grille principale -->
						<Grid.Style>
							<Style TargetType="Grid">
								<Setter Property="Background" Value="Transparent"/>
							</Style>
						</Grid.Style>

						<!-- Fond Noir pour la video d'intro -->
						<Grid Name="IntroVideoBackground" Panel.ZIndex="99" Background="Black" IsHitTestVisible="False">
							<Grid.Style>
								<Style TargetType="Grid">
									<Setter Property="Visibility" Value="Visible"/>
									<Style.Triggers>
										<DataTrigger Binding="{Binding Opacity, ElementName=IntroVideo}" Value="1">
											<DataTrigger.EnterActions>
												<BeginStoryboard>
													<Storyboard>
														<DoubleAnimation
															Storyboard.TargetProperty="Opacity"
															From="1.0" To="0.0" BeginTime="0:0:2" Duration="0:0:2"/>
													</Storyboard>
												</BeginStoryboard>
											</DataTrigger.EnterActions>
											<DataTrigger.ExitActions>
												<BeginStoryboard>
													<Storyboard>
														<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility">
															<DiscreteObjectKeyFrame KeyTime="0:0:2" Value="{x:Static Visibility.Collapsed}"/>
														</ObjectAnimationUsingKeyFrames>
													</Storyboard>
												</BeginStoryboard>
											</DataTrigger.ExitActions>
										</DataTrigger>
									</Style.Triggers>
								</Style>
							</Grid.Style>
						</Grid>

						<ContentControl x:Name="ThemeOptions_GamepadAdd" >
							<ContentControl.Style>
								<Style TargetType="ContentControl">
									<Setter Property="Tag" Value="True"/>
									<Style.Triggers>
										<DataTrigger Binding="{Binding Visibility, ElementName=PART_ElemGameDetails}" Value="Visible">
											<Setter Property="Tag" Value="False"/>
										</DataTrigger>
										<DataTrigger Binding="{Binding Visibility, ElementName=PART_ElemGameStatus}" Value="Visible">
											<Setter Property="Tag" Value="False"/>
										</DataTrigger>
										<DataTrigger Binding="{Binding Visibility, ElementName=AcceuilSettings}" Value="Visible">
											<Setter Property="Tag" Value="False"/>
										</DataTrigger>
										<DataTrigger Binding="{Binding Visibility, ElementName=WrongSettings}" Value="Visible">
											<Setter Property="Tag" Value="False"/>
										</DataTrigger>
										<DataTrigger Binding="{Binding Visibility, ElementName=PART_ElemFilters}" Value="Visible">
											<Setter Property="Tag" Value="False"/>
										</DataTrigger>
										<DataTrigger Binding="{Binding Visibility, ElementName=PART_ContentFilterItems}" Value="Visible">
											<Setter Property="Tag" Value="False"/>
										</DataTrigger>
										<DataTrigger Binding="{Binding Visibility, ElementName=PART_ElemFiltersAdditional}" Value="Visible">
											<Setter Property="Tag" Value="False"/>
										</DataTrigger>

									</Style.Triggers>
								</Style>
							</ContentControl.Style>
							<ContentControl.InputBindings>
								<pin:GameControllerInputBinding
									Button="Start"
									Command="{Binding Content.GameControllerAltCommand, ElementName=ThemeOptions_Command}"
									CommandParameter="{Binding Data.OpenMainMenuCommand, Source={StaticResource MAIN_Commands}}"/>

								<pin:GameControllerInputBinding
									Button="Y"
									Command="{Binding Content.GameControllerAltCommand, ElementName=ThemeOptions_Command}"
									CommandParameter="{Binding Data.OpenGameMenuCommand, Source={StaticResource MAIN_Commands}}"/>

								<pin:GameControllerInputBinding
									Button="Back"
									Command="{Binding Data.Toggle, Source={StaticResource THEMEOPTIONS_Commands}}"
									CommandParameter="ControlCenterButton"/>

								<pin:GameControllerInputBinding
									Button="X"
									Command="{Binding Data.Toggle, Source={StaticResource THEMEOPTIONS_Commands}}"
									CommandParameter="ChangeViewButton"/>

								<pin:GameControllerInputBinding
									Button="LeftStick"
									Command="{Binding Content.GameControllerAltCommand, ElementName=ThemeOptions_Command}"
									CommandParameter="{Binding Data.OpenSearchCommand, Source={StaticResource MAIN_Commands}}"/>

							</ContentControl.InputBindings>
						</ContentControl>




						<!-- Vidéo d'introduction -->
						<Grid Name="IntroVideo" Panel.ZIndex="100">
							<!-- Élément multimédia pour la vidéo -->
							<ContentControl Style="{DynamicResource IntroVideo1}" />
						</Grid>

						<!-- Grille pour vue Hote -->
						<Grid x:Name="PART_ViewHost">
							<Grid.Style>
								<Style TargetType="Grid" >
									<Setter Property="Opacity" Value="1"/>
								</Style>
							</Grid.Style>

							<!-- Définition des lignes -->
							<Grid.RowDefinitions>
								<RowDefinition Height="90" />
								<RowDefinition Height="*" />
								<RowDefinition Height="400" />
								<RowDefinition Height="60" />
								<RowDefinition Height="80" />
							</Grid.RowDefinitions>

							<Grid.ColumnDefinitions>
								<ColumnDefinition>
									<ColumnDefinition.Style>
										<Style TargetType="ColumnDefinition" >
											<Setter Property="Width" Value="Auto"/>
										</Style>
									</ColumnDefinition.Style>
								</ColumnDefinition>
								<ColumnDefinition Width="*" />
								<ColumnDefinition >
									<ColumnDefinition.Style>
										<Style TargetType="ColumnDefinition" >
											<Setter Property="Width" Value="Auto"/>
										</Style>
									</ColumnDefinition.Style>
								</ColumnDefinition>
							</Grid.ColumnDefinitions>



							<Border>
								<Border.Style>
									<Style TargetType="Border">
										<Setter Property="Visibility" Value="Visible"/>
										<Setter Property="Opacity" Value="1"/>
										<Setter Property="Background" Value="{DynamicResource OverlayMenu}"/>
										<Setter Property="Panel.ZIndex" Value="-46"/>
										<Setter Property="Grid.Row" Value="0"/>
										<Setter Property="Grid.RowSpan" Value="4"/>
										<Setter Property="Grid.ColumnSpan" Value="3"/>
										<Style.Triggers>
											<DataTrigger Binding="{Binding ElementName=ChangeViewButton, Path=IsChecked}" Value="False">
												<Setter Property="Visibility" Value="Collapsed"/>
											</DataTrigger>
										</Style.Triggers>
									</Style>
								</Border.Style>
							</Border>

							<!-- Interface -->
							<Border RenderOptions.BitmapScalingMode="Fant">
								<Border.Style>
									<Style TargetType="Border">
										<Setter Property="Tag" Value="{DynamicResource BackgroundImageIndex}" />
										<Setter Property="Visibility" Value="Visible"/>
										<Setter Property="Opacity" Value="1"/>
										<Setter Property="Background" Value="{DynamicResource Interface1}"/>
										<Setter Property="Panel.ZIndex" Value="-47"/>
										<Setter Property="Grid.Row" Value="0"/>
										<Setter Property="Grid.RowSpan" Value="5"/>
										<Setter Property="Grid.ColumnSpan" Value="3"/>
										<Style.Triggers>

											<!-- Ratio 16/9 -->

											<DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Tag}" Value="1">
												<Setter Property="Background" Value="{DynamicResource Interface1}" />
											</DataTrigger>
											<DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Tag}" Value="2">
												<Setter Property="Background" Value="{DynamicResource Interface2}" />
											</DataTrigger>
											<DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Tag}" Value="3">
												<Setter Property="Background" Value="{DynamicResource Interface3}" />
											</DataTrigger>
											<DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Tag}" Value="4">
												<Setter Property="Background" Value="{DynamicResource Interface4}" />
											</DataTrigger>
											<DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Tag}" Value="5">
												<Setter Property="Background" Value="{DynamicResource Interface5}" />
											</DataTrigger>
											<DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Tag}" Value="6">
												<Setter Property="Background" Value="{DynamicResource Interface6}" />
											</DataTrigger>
											<DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Tag}" Value="7">
												<Setter Property="Background" Value="{DynamicResource Interface7}" />
											</DataTrigger>
											<DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Tag}" Value="8">
												<Setter Property="Background" Value="{DynamicResource Interface8}" />
											</DataTrigger>
											<DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Tag}" Value="9">
												<Setter Property="Background" Value="{DynamicResource Interface9}" />
											</DataTrigger>
											<DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Tag}" Value="10">
												<Setter Property="Background" Value="{DynamicResource Interface10}" />
											</DataTrigger>
											<DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Tag}" Value="11">
												<Setter Property="Background" Value="{DynamicResource Interface11}" />
											</DataTrigger>
											<DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Tag}" Value="12">
												<Setter Property="Background" Value="{DynamicResource Interface12}" />
											</DataTrigger>
											<DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Tag}" Value="13">
												<Setter Property="Background" Value="{DynamicResource Interface13}" />
											</DataTrigger>
											<DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Tag}" Value="14">
												<Setter Property="Background" Value="{DynamicResource Interface14}" />
											</DataTrigger>
											<DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Tag}" Value="15">
												<Setter Property="Background" Value="{DynamicResource Interface15}" />
											</DataTrigger>
											<DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Tag}" Value="16">
												<Setter Property="Background" Value="{DynamicResource Interface16}" />
											</DataTrigger>
											<DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Tag}" Value="17">
												<Setter Property="Background" Value="{DynamicResource Interface17}" />
											</DataTrigger>
											<DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Tag}" Value="18">
												<Setter Property="Background" Value="{DynamicResource Interface18}" />
											</DataTrigger>
											<DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Tag}" Value="19">
												<Setter Property="Background" Value="{DynamicResource Interface19}" />
											</DataTrigger>
											<DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Tag}" Value="20">
												<Setter Property="Background" Value="{DynamicResource Interface20}" />
											</DataTrigger>
											<DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Tag}" Value="21">
												<Setter Property="Background" Value="{DynamicResource Interface21}" />
											</DataTrigger>
											<DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Tag}" Value="22">
												<Setter Property="Background" Value="{DynamicResource Interface22}" />
											</DataTrigger>
											<DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Tag}" Value="23">
												<Setter Property="Background" Value="{DynamicResource Interface23}" />
											</DataTrigger>
											<DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Tag}" Value="24">
												<Setter Property="Background" Value="{DynamicResource Interface24}" />
											</DataTrigger>
											<DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Tag}" Value="25">
												<Setter Property="Background" Value="{DynamicResource Interface25}" />
											</DataTrigger>
											<DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Tag}" Value="26">
												<Setter Property="Background" Value="{DynamicResource Interface26}" />
											</DataTrigger>
											<DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Tag}" Value="27">
												<Setter Property="Background" Value="{DynamicResource Interface27}" />
											</DataTrigger>

											<!-- Ratio 16/10 -->

											<MultiDataTrigger>
												<MultiDataTrigger.Conditions>
													<Condition Binding="{Binding ElementName=PART_ViewHost, Path=ActualWidth}" Value="1728"/>
													<Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Tag}" Value="1"/>
												</MultiDataTrigger.Conditions>
												<MultiDataTrigger.Setters>
													<Setter Property="Background" Value="{DynamicResource Interface1610-1}"/>
												</MultiDataTrigger.Setters>
											</MultiDataTrigger>

											<MultiDataTrigger>
												<MultiDataTrigger.Conditions>
													<Condition Binding="{Binding ElementName=PART_ViewHost, Path=ActualWidth}" Value="1728"/>
													<Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Tag}" Value="22"/>
												</MultiDataTrigger.Conditions>
												<MultiDataTrigger.Setters>
													<Setter Property="Background" Value="{DynamicResource Interface1610-2}"/>
												</MultiDataTrigger.Setters>
											</MultiDataTrigger>

											<MultiDataTrigger>
												<MultiDataTrigger.Conditions>
													<Condition Binding="{Binding ElementName=PART_ViewHost, Path=ActualWidth}" Value="1728"/>
													<Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Tag}" Value="3"/>
												</MultiDataTrigger.Conditions>
												<MultiDataTrigger.Setters>
													<Setter Property="Background" Value="{DynamicResource Interface1610-3}"/>
												</MultiDataTrigger.Setters>
											</MultiDataTrigger>

											<MultiDataTrigger>
												<MultiDataTrigger.Conditions>
													<Condition Binding="{Binding ElementName=PART_ViewHost, Path=ActualWidth}" Value="1728"/>
													<Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Tag}" Value="4"/>
												</MultiDataTrigger.Conditions>
												<MultiDataTrigger.Setters>
													<Setter Property="Background" Value="{DynamicResource Interface1610-4}"/>
												</MultiDataTrigger.Setters>
											</MultiDataTrigger>

											<MultiDataTrigger>
												<MultiDataTrigger.Conditions>
													<Condition Binding="{Binding ElementName=PART_ViewHost, Path=ActualWidth}" Value="1728"/>
													<Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Tag}" Value="5"/>
												</MultiDataTrigger.Conditions>
												<MultiDataTrigger.Setters>
													<Setter Property="Background" Value="{DynamicResource Interface1610-5}"/>
												</MultiDataTrigger.Setters>
											</MultiDataTrigger>

											<MultiDataTrigger>
												<MultiDataTrigger.Conditions>
													<Condition Binding="{Binding ElementName=PART_ViewHost, Path=ActualWidth}" Value="1728"/>
													<Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Tag}" Value="6"/>
												</MultiDataTrigger.Conditions>
												<MultiDataTrigger.Setters>
													<Setter Property="Background" Value="{DynamicResource Interface1610-6}"/>
												</MultiDataTrigger.Setters>
											</MultiDataTrigger>

											<MultiDataTrigger>
												<MultiDataTrigger.Conditions>
													<Condition Binding="{Binding ElementName=PART_ViewHost, Path=ActualWidth}" Value="1728"/>
													<Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Tag}" Value="7"/>
												</MultiDataTrigger.Conditions>
												<MultiDataTrigger.Setters>
													<Setter Property="Background" Value="{DynamicResource Interface1610-7}"/>
												</MultiDataTrigger.Setters>
											</MultiDataTrigger>

											<MultiDataTrigger>
												<MultiDataTrigger.Conditions>
													<Condition Binding="{Binding ElementName=PART_ViewHost, Path=ActualWidth}" Value="1728"/>
													<Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Tag}" Value="8"/>
												</MultiDataTrigger.Conditions>
												<MultiDataTrigger.Setters>
													<Setter Property="Background" Value="{DynamicResource Interface1610-8}"/>
												</MultiDataTrigger.Setters>
											</MultiDataTrigger>

											<MultiDataTrigger>
												<MultiDataTrigger.Conditions>
													<Condition Binding="{Binding ElementName=PART_ViewHost, Path=ActualWidth}" Value="1728"/>
													<Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Tag}" Value="9"/>
												</MultiDataTrigger.Conditions>
												<MultiDataTrigger.Setters>
													<Setter Property="Background" Value="{DynamicResource Interface1610-9}"/>
												</MultiDataTrigger.Setters>
											</MultiDataTrigger>

											<MultiDataTrigger>
												<MultiDataTrigger.Conditions>
													<Condition Binding="{Binding ElementName=PART_ViewHost, Path=ActualWidth}" Value="1728"/>
													<Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Tag}" Value="10"/>
												</MultiDataTrigger.Conditions>
												<MultiDataTrigger.Setters>
													<Setter Property="Background" Value="{DynamicResource Interface1610-10}"/>
												</MultiDataTrigger.Setters>
											</MultiDataTrigger>

											<MultiDataTrigger>
												<MultiDataTrigger.Conditions>
													<Condition Binding="{Binding ElementName=PART_ViewHost, Path=ActualWidth}" Value="1728"/>
													<Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Tag}" Value="11"/>
												</MultiDataTrigger.Conditions>
												<MultiDataTrigger.Setters>
													<Setter Property="Background" Value="{DynamicResource Interface1610-11}"/>
												</MultiDataTrigger.Setters>
											</MultiDataTrigger>

											<MultiDataTrigger>
												<MultiDataTrigger.Conditions>
													<Condition Binding="{Binding ElementName=PART_ViewHost, Path=ActualWidth}" Value="1728"/>
													<Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Tag}" Value="12"/>
												</MultiDataTrigger.Conditions>
												<MultiDataTrigger.Setters>
													<Setter Property="Background" Value="{DynamicResource Interface1610-12}"/>
												</MultiDataTrigger.Setters>
											</MultiDataTrigger>

											<MultiDataTrigger>
												<MultiDataTrigger.Conditions>
													<Condition Binding="{Binding ElementName=PART_ViewHost, Path=ActualWidth}" Value="1728"/>
													<Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Tag}" Value="13"/>
												</MultiDataTrigger.Conditions>
												<MultiDataTrigger.Setters>
													<Setter Property="Background" Value="{DynamicResource Interface1610-13}"/>
												</MultiDataTrigger.Setters>
											</MultiDataTrigger>

											<MultiDataTrigger>
												<MultiDataTrigger.Conditions>
													<Condition Binding="{Binding ElementName=PART_ViewHost, Path=ActualWidth}" Value="1728"/>
													<Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Tag}" Value="14"/>
												</MultiDataTrigger.Conditions>
												<MultiDataTrigger.Setters>
													<Setter Property="Background" Value="{DynamicResource Interface1610-14}"/>
												</MultiDataTrigger.Setters>
											</MultiDataTrigger>

											<MultiDataTrigger>
												<MultiDataTrigger.Conditions>
													<Condition Binding="{Binding ElementName=PART_ViewHost, Path=ActualWidth}" Value="1728"/>
													<Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Tag}" Value="15"/>
												</MultiDataTrigger.Conditions>
												<MultiDataTrigger.Setters>
													<Setter Property="Background" Value="{DynamicResource Interface1610-15}"/>
												</MultiDataTrigger.Setters>
											</MultiDataTrigger>

											<MultiDataTrigger>
												<MultiDataTrigger.Conditions>
													<Condition Binding="{Binding ElementName=PART_ViewHost, Path=ActualWidth}" Value="1728"/>
													<Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Tag}" Value="16"/>
												</MultiDataTrigger.Conditions>
												<MultiDataTrigger.Setters>
													<Setter Property="Background" Value="{DynamicResource Interface1610-16}"/>
												</MultiDataTrigger.Setters>
											</MultiDataTrigger>

											<MultiDataTrigger>
												<MultiDataTrigger.Conditions>
													<Condition Binding="{Binding ElementName=PART_ViewHost, Path=ActualWidth}" Value="1728"/>
													<Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Tag}" Value="17"/>
												</MultiDataTrigger.Conditions>
												<MultiDataTrigger.Setters>
													<Setter Property="Background" Value="{DynamicResource Interface1610-17}"/>
												</MultiDataTrigger.Setters>
											</MultiDataTrigger>

											<MultiDataTrigger>
												<MultiDataTrigger.Conditions>
													<Condition Binding="{Binding ElementName=PART_ViewHost, Path=ActualWidth}" Value="1728"/>
													<Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Tag}" Value="18"/>
												</MultiDataTrigger.Conditions>
												<MultiDataTrigger.Setters>
													<Setter Property="Background" Value="{DynamicResource Interface1610-18}"/>
												</MultiDataTrigger.Setters>
											</MultiDataTrigger>

											<MultiDataTrigger>
												<MultiDataTrigger.Conditions>
													<Condition Binding="{Binding ElementName=PART_ViewHost, Path=ActualWidth}" Value="1728"/>
													<Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Tag}" Value="19"/>
												</MultiDataTrigger.Conditions>
												<MultiDataTrigger.Setters>
													<Setter Property="Background" Value="{DynamicResource Interface1610-19}"/>
												</MultiDataTrigger.Setters>
											</MultiDataTrigger>

											<MultiDataTrigger>
												<MultiDataTrigger.Conditions>
													<Condition Binding="{Binding ElementName=PART_ViewHost, Path=ActualWidth}" Value="1728"/>
													<Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Tag}" Value="20"/>
												</MultiDataTrigger.Conditions>
												<MultiDataTrigger.Setters>
													<Setter Property="Background" Value="{DynamicResource Interface1610-20}"/>
												</MultiDataTrigger.Setters>
											</MultiDataTrigger>

											<MultiDataTrigger>
												<MultiDataTrigger.Conditions>
													<Condition Binding="{Binding ElementName=PART_ViewHost, Path=ActualWidth}" Value="1728"/>
													<Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Tag}" Value="21"/>
												</MultiDataTrigger.Conditions>
												<MultiDataTrigger.Setters>
													<Setter Property="Background" Value="{DynamicResource Interface1610-22}"/>
												</MultiDataTrigger.Setters>
											</MultiDataTrigger>

											<MultiDataTrigger>
												<MultiDataTrigger.Conditions>
													<Condition Binding="{Binding ElementName=PART_ViewHost, Path=ActualWidth}" Value="1728"/>
													<Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Tag}" Value="23"/>
												</MultiDataTrigger.Conditions>
												<MultiDataTrigger.Setters>
													<Setter Property="Background" Value="{DynamicResource Interface1610-23}"/>
												</MultiDataTrigger.Setters>
											</MultiDataTrigger>

											<MultiDataTrigger>
												<MultiDataTrigger.Conditions>
													<Condition Binding="{Binding ElementName=PART_ViewHost, Path=ActualWidth}" Value="1728"/>
													<Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Tag}" Value="24"/>
												</MultiDataTrigger.Conditions>
												<MultiDataTrigger.Setters>
													<Setter Property="Background" Value="{DynamicResource Interface1610-24}"/>
												</MultiDataTrigger.Setters>
											</MultiDataTrigger>

											<MultiDataTrigger>
												<MultiDataTrigger.Conditions>
													<Condition Binding="{Binding ElementName=PART_ViewHost, Path=ActualWidth}" Value="1728"/>
													<Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Tag}" Value="25"/>
												</MultiDataTrigger.Conditions>
												<MultiDataTrigger.Setters>
													<Setter Property="Background" Value="{DynamicResource Interface1610-25}"/>
												</MultiDataTrigger.Setters>
											</MultiDataTrigger>

											<MultiDataTrigger>
												<MultiDataTrigger.Conditions>
													<Condition Binding="{Binding ElementName=PART_ViewHost, Path=ActualWidth}" Value="1728"/>
													<Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Tag}" Value="27"/>
												</MultiDataTrigger.Conditions>
												<MultiDataTrigger.Setters>
													<Setter Property="Background" Value="{DynamicResource Interface1610-27}"/>
												</MultiDataTrigger.Setters>
											</MultiDataTrigger>

											<!--	<TextBlock x:Name="Debug" TextAlignment="Right" Foreground="Blue" FontSize="25">
									<TextBlock.Text>
										<MultiBinding StringFormat="{}Host Resolution (Width x Height) = {0} x {1}">
											<Binding ElementName="PART_ViewHost" Path="ActualWidth"/>
										</MultiBinding>
									</TextBlock.Text>
								</TextBlock> -->


											<DataTrigger Binding="{Binding ElementName=PART_ElemGameDetails, Path=Visibility}" Value="Visible">
												<Setter Property="Visibility" Value="Visible"/>
											</DataTrigger>
											<MultiDataTrigger>
												<MultiDataTrigger.Conditions>
													<Condition Binding="{Binding Path=SelectedGame.BackgroundImage}" Value="{x:Null}"/>
													<Condition Binding="{Binding ElementName=ChangeViewButton, Path=IsChecked}" Value="True"/>
												</MultiDataTrigger.Conditions>
												<MultiDataTrigger.Setters>
													<Setter Property="Background" Value="{DynamicResource OverlayMenu}"/>
												</MultiDataTrigger.Setters>
											</MultiDataTrigger>
											<MultiDataTrigger>
												<MultiDataTrigger.Conditions>
													<Condition Binding="{Binding PART_ImageBackground}" Value="{x:Null}"/>
													<Condition Binding="{Binding ElementName=ChangeViewButton, Path=IsChecked}" Value="False"/>
												</MultiDataTrigger.Conditions>
												<Setter Property="Visibility" Value="Visible"/>
											</MultiDataTrigger>
										</Style.Triggers>
									</Style>
								</Border.Style>
							</Border>

							<!-- Audio ControlCenter -->
							<Grid x:Name="Volume" Panel.ZIndex="1" Focusable="True" KeyboardNavigation.TabNavigation="Cycle" KeyboardNavigation.ControlTabNavigation="Cycle" KeyboardNavigation.DirectionalNavigation="Cycle">
								<Grid.InputBindings>
									<pin:GameControllerInputBinding x:Name="CloseController" Button="B" Command="{Binding Content.ChangeProperty, ElementName=ThemeOptions_Command}"	CommandParameter="[Setter ElementName=ButtonAudio, Property=IsChecked, Value=True]" />
									<KeyBinding Key="Back" x:Name="CloseKey" Command="{Binding Content.ChangeProperty, ElementName=ThemeOptions_Command}"	CommandParameter="[Setter ElementName=ButtonAudio, Property=IsChecked, Value=True]" />
								</Grid.InputBindings>
								<Grid.Style>
									<Style TargetType="Grid">
										<Setter Property="Opacity" Value="1"/>
										<Setter Property="VerticalAlignment" Value="Top"/>
										<Setter Property="HorizontalAlignment" Value="Center"/>
										<Setter Property="Grid.Row" Value="0"/>
										<Setter Property="Grid.RowSpan" Value="5"/>
										<Setter Property="Grid.ColumnSpan" Value="3"/>
										<Setter Property="Visibility" Value="Collapsed"/>
										<Setter Property="Margin" Value="0,90,0,0"/>
										<Style.Triggers>
											<MultiDataTrigger>
												<MultiDataTrigger.Conditions>
													<Condition Binding="{Binding ElementName=ControlCenterButton1, Path=IsChecked}" Value="True" />
													<Condition Binding="{Binding ElementName=ButtonAudio, Path=IsChecked}" Value="False" />
												</MultiDataTrigger.Conditions>
												<Setter Property="Visibility" Value="Visible" />
											</MultiDataTrigger>
											<MultiDataTrigger>
												<MultiDataTrigger.Conditions>
													<Condition Binding="{Binding ElementName=ControlCenterButton1, Path=IsChecked}" Value="True" />
													<Condition Binding="{Binding ElementName=ButtonAudio, Path=IsChecked}" Value="False" />
													<Condition Binding="{Binding ElementName=Volume, Path=Visibility}" Value="Collapsed" />
												</MultiDataTrigger.Conditions>
												<MultiDataTrigger.Setters>
													<Setter Property="FocusManager.FocusedElement" Value="{Binding ElementName=ButtonAudio}" />
												</MultiDataTrigger.Setters>
											</MultiDataTrigger>
										</Style.Triggers>
									</Style>
								</Grid.Style>
								<Border	Width="Auto" Background="{DynamicResource OverlayMenu}" CornerRadius="{DynamicResource Corner}" Opacity="0"/>
								<Grid>
									<TextBlock Style="{DynamicResource TextBlockBoldBaseStyle}" HorizontalAlignment="Center" VerticalAlignment="Top" FontSize="30" Opacity="0.8" Text="{DynamicResource LOCSettingsFSSectionAudio}" Margin="20,15,0,0" />
									<StackPanel Margin="0,70,0,20" Orientation="Vertical">
										<Grid Margin="0,20,0,0">
											<Grid.ColumnDefinitions>
												<ColumnDefinition Width="*" />
												<ColumnDefinition Width="*" />
											</Grid.ColumnDefinitions>
											<StackPanel	Grid.Column="0"	HorizontalAlignment="Left" Orientation="Horizontal">
												<TextBlock Style="{DynamicResource TextBlockBaseStyle}" Margin="40,0,20,0" HorizontalAlignment="Left" VerticalAlignment="Center" FontSize="24" Text="{DynamicResource LOCSettingsInterfaceVolume}" />
												<TextBlock Style="{DynamicResource TextBlockBaseStyle}" Margin="0,0,20,0" HorizontalAlignment="Left" VerticalAlignment="Center" FontSize="24" Text="{Settings Fullscreen.InterfaceVolume}" />
											</StackPanel>

											<StackPanel	Grid.Column="1"	HorizontalAlignment="Right"	Orientation="Horizontal">
												<StackPanel.Style>
													<Style TargetType="StackPanel">
														<Style.Triggers>
															<DataTrigger Binding="{Binding ElementName=Volume, Path=Visibility}" Value="Visible">
																<Setter Property="FocusManager.FocusedElement" Value="{Binding ElementName=SliderElement}" />
															</DataTrigger>
														</Style.Triggers>
													</Style>
												</StackPanel.Style>
												<SliderEx x:Name="SliderElement" HorizontalAlignment="Right" VerticalAlignment="Center"	IsSnapToTickEnabled="True" LargeChange="0.1" Maximum="1" Minimum="0"
																				 SmallChange="0.1"	Style="{DynamicResource SettingsSectionSlider}"	TickFrequency="0.1" Value="{Settings Fullscreen.InterfaceVolume, Mode=TwoWay}" />
											</StackPanel>
										</Grid>

										<Grid Margin="0,20,0,0">
											<Grid.ColumnDefinitions>
												<ColumnDefinition Width="*" />
												<ColumnDefinition Width="*" />
											</Grid.ColumnDefinitions>
											<StackPanel	Grid.Column="0"	HorizontalAlignment="Left" Orientation="Horizontal">
												<TextBlock Style="{DynamicResource TextBlockBaseStyle}" Margin="40,0,20,0" HorizontalAlignment="Left" VerticalAlignment="Center" FontSize="24"	Text="{DynamicResource LOCSettingsMusiVolume}" />
												<TextBlock Style="{DynamicResource TextBlockBaseStyle}" Margin="0,0,20,0" HorizontalAlignment="Left" VerticalAlignment="Center"  FontSize="24"  Text="{Settings Fullscreen.BackgroundVolume}" />
											</StackPanel>
											<StackPanel	Grid.Column="1" HorizontalAlignment="Right"	Orientation="Horizontal">
												<SliderEx HorizontalAlignment="Right" VerticalAlignment="Center" IsSnapToTickEnabled="True"	LargeChange="0.10" Maximum="1" Minimum="0"
														  SmallChange="0.10" Style="{DynamicResource SettingsSectionSlider}" TickFrequency="0.10" Value="{Settings Fullscreen.BackgroundVolume, Mode=TwoWay}" />
											</StackPanel>
										</Grid>

									</StackPanel>
								</Grid>
							</Grid>

							<!-- Power ControlCenter -->
							<Grid x:Name="Power" Panel.ZIndex="2" Focusable="True" KeyboardNavigation.TabNavigation="Cycle" KeyboardNavigation.ControlTabNavigation="Cycle" KeyboardNavigation.DirectionalNavigation="Cycle">
								<Grid.InputBindings>
									<pin:GameControllerInputBinding Button="B" Command="{Binding Content.ChangeProperty, ElementName=ThemeOptions_Command}"	CommandParameter="[Setter ElementName=ButtonPower, Property=IsChecked, Value=True]" />
									<KeyBinding Key="Back" Command="{Binding Content.ChangeProperty, ElementName=ThemeOptions_Command}"	CommandParameter="[Setter ElementName=ButtonPower, Property=IsChecked, Value=True]" />
								</Grid.InputBindings>
								<Grid.Style>
									<Style TargetType="Grid">
										<Setter Property="Opacity" Value="1"/>
										<Setter Property="VerticalAlignment" Value="Top"/>
										<Setter Property="HorizontalAlignment" Value="Center"/>
										<Setter Property="Grid.Row" Value="0"/>
										<Setter Property="Grid.RowSpan" Value="5"/>
										<Setter Property="Grid.ColumnSpan" Value="3"/>
										<Setter Property="Visibility" Value="Collapsed"/>
										<Setter Property="Margin" Value="0,10,0,0"/>
										<Style.Triggers>
											<DataTrigger Binding="{Binding ElementName=ButtonPower, Path=IsChecked}" Value="False">
												<Setter Property="Visibility" Value="Visible"/>
											</DataTrigger>

										</Style.Triggers>
									</Style>
								</Grid.Style>
								<Border	Width="Auto" Background="{DynamicResource OverlayMenu}" CornerRadius="{DynamicResource Corner}" Opacity="0"/>
								<Grid>
									<TextBlock Style="{DynamicResource TextBlockBoldBaseStyle}" HorizontalAlignment="Center" VerticalAlignment="Top" FontSize="30" Opacity="0.9" Text="{DynamicResource LOCPowerControlCenter}"/>
									<StackPanel Margin="20,70,0,20" Orientation="Vertical">
										<ButtonEx x:Name="MinimizeCommand" Margin="5,0,5,20" pbeh:FocusBahaviors.OnVisibilityFocus="True" Command="{Binding Content.MainMenu.MinimizeCommand, ElementName=ThemeOptions_Command}" Content="{DynamicResource LOCMinimize}" Style="{DynamicResource ButtonMinimize}" />
										<ButtonEx x:Name="DesktopCommand" Margin="5,0,5,20"   Command="{Binding SwitchToDesktopCommand}" Content="{DynamicResource LOCBackToDesktopMode}" Style="{DynamicResource ButtonDesktop}" />
										<ButtonEx x:Name="ExitCommand" Margin="5,0,5,20" Command="{Binding Content.MainMenu.ExitCommand, ElementName=ThemeOptions_Command}" Content="{DynamicResource LOCExitPlaynite}" Style="{DynamicResource ButtonExit}" />
										<ButtonEx x:Name="RestartCommand" Margin="5,0,5,20" Command="{Binding Content.MainMenu.RestartSystemCommand, ElementName=ThemeOptions_Command}" Content="{DynamicResource LOCMenuRestartSystem}" Style="{DynamicResource ButtonRestart}" />
										<ButtonEx x:Name="ShutdownCommand" Margin="5,0,5,20" Command="{Binding Content.MainMenu.ShutdownSystemCommand, ElementName=ThemeOptions_Command}" Content="{DynamicResource LOCMenuShutdownSystem}" Style="{DynamicResource ButtonShutdow}" />
									</StackPanel>

								</Grid>

							</Grid>

							<!-- ThemeOption ControlCenter -->
							<Grid x:Name="ThemeOpt" Panel.ZIndex="1"  Focusable="True" KeyboardNavigation.TabNavigation="Cycle" KeyboardNavigation.ControlTabNavigation="Cycle" KeyboardNavigation.DirectionalNavigation="Cycle">
								<Grid.InputBindings>
									<pin:GameControllerInputBinding Button="B" Command="{Binding Content.ChangeProperty, ElementName=ThemeOptions_Command}"	CommandParameter="[Setter ElementName=ButtonThemeOption, Property=IsChecked, Value=True]" />
									<KeyBinding Key="Back" Command="{Binding Content.ChangeProperty, ElementName=ThemeOptions_Command}"	CommandParameter="[Setter ElementName=ButtonThemeOption, Property=IsChecked, Value=True]" />
								</Grid.InputBindings>
								<Grid.Style>
									<Style TargetType="Grid">
										<Setter Property="Opacity" Value="1"/>
										<Setter Property="VerticalAlignment" Value="Top"/>
										<Setter Property="HorizontalAlignment" Value="Center"/>
										<Setter Property="Grid.Row" Value="0"/>
										<Setter Property="Grid.RowSpan" Value="5"/>
										<Setter Property="Grid.ColumnSpan" Value="3"/>
										<Setter Property="Visibility" Value="Collapsed"/>
										<Setter Property="Margin" Value="0,90,0,0"/>
										<Style.Triggers>
											<MultiDataTrigger>
												<MultiDataTrigger.Conditions>
													<Condition Binding="{Binding ElementName=ControlCenterButton1, Path=IsChecked}" Value="True" />
													<Condition Binding="{Binding ElementName=ButtonThemeOption, Path=IsChecked}" Value="False" />
												</MultiDataTrigger.Conditions>
												<Setter Property="Visibility" Value="Visible" />
											</MultiDataTrigger>
											<MultiDataTrigger>
												<MultiDataTrigger.Conditions>
													<Condition Binding="{Binding ElementName=ControlCenterButton1, Path=IsChecked}" Value="True" />
													<Condition Binding="{Binding ElementName=ButtonThemeOption, Path=IsChecked}" Value="False" />
													<Condition Binding="{Binding ElementName=ThemeOpt, Path=Visibility}" Value="Collapsed" />
												</MultiDataTrigger.Conditions>
												<MultiDataTrigger.Setters>
													<Setter Property="FocusManager.FocusedElement" Value="{Binding ElementName=ButtonThemeOption}" />
												</MultiDataTrigger.Setters>
											</MultiDataTrigger>
										</Style.Triggers>
									</Style>
								</Grid.Style>
								<Border	Width="Auto" Background="{DynamicResource OverlayMenu}" CornerRadius="{DynamicResource Corner}" Opacity="0"/>
								<Grid>
									<TextBlock Style="{DynamicResource TextBlockBoldBaseStyle}" HorizontalAlignment="Center" VerticalAlignment="Top" FontSize="30" Opacity="0.8" Text="{DynamicResource LOCThemOptsMain}" Margin="20,15,0,0" />
									<StackPanel Margin="0,50,0,20" Orientation="Vertical">

										<Grid Margin="0,20,0,0">
											<Grid.ColumnDefinitions>
												<ColumnDefinition Width="*" />
												<ColumnDefinition Width="*" />
											</Grid.ColumnDefinitions>
											<StackPanel	Grid.Column="0"	HorizontalAlignment="Left" Orientation="Horizontal">
												<TextBlock Style="{DynamicResource TextBlockBaseStyle}" Margin="40,0,20,0" HorizontalAlignment="Left" VerticalAlignment="Center" FontSize="24"	Text="{DynamicResource LOCTrophyOnMainView}" />
											</StackPanel>
											<StackPanel	Grid.Column="1" HorizontalAlignment="Right"	Orientation="Horizontal">
												<CheckBoxEx x:Name="FirstButton" pbeh:FocusBahaviors.OnVisibilityFocus="True" HorizontalAlignment="Right" VerticalAlignment="Center" Style="{DynamicResource SettingsSectionCheckbox}" IsChecked="{PluginSettings Plugin=ThemeOptions, Path=Options[SuccessOnMainMenu], Mode=TwoWay}" />
											</StackPanel>
										</Grid>

										<Grid Margin="0,20,0,0">
											<Grid.ColumnDefinitions>
												<ColumnDefinition Width="*" />
												<ColumnDefinition Width="*" />
											</Grid.ColumnDefinitions>
											<StackPanel	Grid.Column="0"	HorizontalAlignment="Left" Orientation="Horizontal">
												<TextBlock Style="{DynamicResource TextBlockBaseStyle}" Margin="40,0,20,0" HorizontalAlignment="Left" VerticalAlignment="Center" FontSize="24"	Text="{DynamicResource LOCCompletedOnMainMenu}" />
											</StackPanel>
											<StackPanel	Grid.Column="1" HorizontalAlignment="Right"	Orientation="Horizontal">
												<CheckBoxEx HorizontalAlignment="Right" VerticalAlignment="Center" Style="{DynamicResource SettingsSectionCheckbox}" IsChecked="{PluginSettings Plugin=ThemeOptions, Path=Options[CompletedOnMainMenu], Mode=TwoWay}" />
											</StackPanel>
										</Grid>

										<Grid Margin="0,20,0,0">
											<Grid.ColumnDefinitions>
												<ColumnDefinition Width="*" />
												<ColumnDefinition Width="*" />
											</Grid.ColumnDefinitions>
											<StackPanel	Grid.Column="0"	HorizontalAlignment="Left" Orientation="Horizontal">
												<TextBlock Style="{DynamicResource TextBlockBaseStyle}" Margin="40,0,20,0" HorizontalAlignment="Left" VerticalAlignment="Center" FontSize="24"	Text="{DynamicResource LOCAgeRatingOnMainView}" />
											</StackPanel>
											<StackPanel	Grid.Column="1" HorizontalAlignment="Right"	Orientation="Horizontal">
												<CheckBoxEx HorizontalAlignment="Right" VerticalAlignment="Center" Style="{DynamicResource SettingsSectionCheckbox}" IsChecked="{PluginSettings Plugin=ThemeOptions, Path=Options[AgeRatingOnMainScreen], Mode=TwoWay}" />
											</StackPanel>
										</Grid>

										<Grid Margin="0,20,0,0">
											<Grid.ColumnDefinitions>
												<ColumnDefinition Width="*" />
												<ColumnDefinition Width="*" />
											</Grid.ColumnDefinitions>
											<StackPanel	Grid.Column="0"	HorizontalAlignment="Left" Orientation="Horizontal">
												<TextBlock Style="{DynamicResource TextBlockBaseStyle}" Margin="40,0,20,0" HorizontalAlignment="Left" VerticalAlignment="Center" FontSize="24"	Text="{DynamicResource LOCAltInfo}" />
											</StackPanel>
											<StackPanel	Grid.Column="1" HorizontalAlignment="Right"	Orientation="Horizontal">
												<CheckBoxEx HorizontalAlignment="Right" VerticalAlignment="Center" Style="{DynamicResource SettingsSectionCheckbox}" IsChecked="{PluginSettings Plugin=ThemeOptions, Path=Options[AltInfo], Mode=TwoWay}" />
											</StackPanel>
										</Grid>

										<Grid Margin="0,20,0,0">
											<Grid.ColumnDefinitions>
												<ColumnDefinition Width="*" />
												<ColumnDefinition Width="*" />
											</Grid.ColumnDefinitions>
											<StackPanel	Grid.Column="0"	HorizontalAlignment="Left" Orientation="Horizontal">
												<TextBlock Style="{DynamicResource TextBlockBaseStyle}" Margin="40,0,20,0" HorizontalAlignment="Left" VerticalAlignment="Center" FontSize="24"	Text="{DynamicResource LOCSourceLogoOnTopScreen}" />
											</StackPanel>
											<StackPanel	Grid.Column="1" HorizontalAlignment="Right"	Orientation="Horizontal">
												<CheckBoxEx HorizontalAlignment="Right" VerticalAlignment="Center" Style="{DynamicResource SettingsSectionCheckbox}" IsChecked="{PluginSettings Plugin=ThemeOptions, Path=Options[SourceLogoOnTopScreen], Mode=TwoWay}" />
											</StackPanel>
										</Grid>

										<Grid Margin="0,20,0,0">
											<Grid.ColumnDefinitions>
												<ColumnDefinition Width="*" />
												<ColumnDefinition Width="*" />
											</Grid.ColumnDefinitions>
											<StackPanel	Grid.Column="0"	HorizontalAlignment="Left" Orientation="Horizontal">
												<TextBlock Style="{DynamicResource TextBlockBaseStyle}" Margin="40,0,20,0" HorizontalAlignment="Left" VerticalAlignment="Center" FontSize="24"	Text="{DynamicResource LOCCompletionStatusOnGameCover}" />
											</StackPanel>
											<StackPanel	Grid.Column="1" HorizontalAlignment="Right"	Orientation="Horizontal">
												<CheckBoxEx HorizontalAlignment="Right" VerticalAlignment="Center" Style="{DynamicResource SettingsSectionCheckbox}" IsChecked="{PluginSettings Plugin=ThemeOptions, Path=Options[CompletionStatusOnOff], Mode=TwoWay}" />
											</StackPanel>
										</Grid>
									</StackPanel>
								</Grid>
							</Grid>

							<!-- TrailerOption ControlCenter -->
							<Grid x:Name="TrailerOption" Panel.ZIndex="1" Focusable="True" KeyboardNavigation.TabNavigation="Cycle" KeyboardNavigation.ControlTabNavigation="Cycle" KeyboardNavigation.DirectionalNavigation="Cycle">
								<Grid.InputBindings>
									<pin:GameControllerInputBinding Button="B" Command="{Binding Content.ChangeProperty, ElementName=ThemeOptions_Command}"	CommandParameter="[Setter ElementName=ButtonTrailer, Property=IsChecked, Value=True]" />
									<KeyBinding Key="Back" Command="{Binding Content.ChangeProperty, ElementName=ThemeOptions_Command}"	CommandParameter="[Setter ElementName=ButtonTrailer, Property=IsChecked, Value=True]" />
								</Grid.InputBindings>
								<Grid.Style>
									<Style TargetType="Grid">
										<Setter Property="Opacity" Value="1"/>
										<Setter Property="VerticalAlignment" Value="Top"/>
										<Setter Property="HorizontalAlignment" Value="Center"/>
										<Setter Property="Grid.Row" Value="0"/>
										<Setter Property="Grid.RowSpan" Value="5"/>
										<Setter Property="Grid.ColumnSpan" Value="3"/>
										<Setter Property="Visibility" Value="Collapsed"/>
										<Setter Property="Margin" Value="0,90,0,0"/>
										<Style.Triggers>
											<MultiDataTrigger>
												<MultiDataTrigger.Conditions>
													<Condition Binding="{Binding ElementName=ControlCenterButton1, Path=IsChecked}" Value="True" />
													<Condition Binding="{Binding ElementName=ButtonTrailer, Path=IsChecked}" Value="False" />
												</MultiDataTrigger.Conditions>
												<Setter Property="Visibility" Value="Visible" />
											</MultiDataTrigger>
											<MultiDataTrigger>
												<MultiDataTrigger.Conditions>
													<Condition Binding="{Binding ElementName=ControlCenterButton1, Path=IsChecked}" Value="True" />
													<Condition Binding="{Binding ElementName=ButtonTrailer, Path=IsChecked}" Value="False" />
													<Condition Binding="{Binding ElementName=TrailerOption, Path=Visibility}" Value="Collapsed" />
												</MultiDataTrigger.Conditions>
												<MultiDataTrigger.Setters>
													<Setter Property="FocusManager.FocusedElement" Value="{Binding ElementName=ButtonTrailer}" />
												</MultiDataTrigger.Setters>
											</MultiDataTrigger>
										</Style.Triggers>
									</Style>
								</Grid.Style>
								<Border	Width="Auto" Background="{DynamicResource OverlayMenu}" CornerRadius="{DynamicResource Corner}" Opacity="0"/>
								<Grid>
									<TextBlock Style="{DynamicResource TextBlockBoldBaseStyle}" HorizontalAlignment="Center" VerticalAlignment="Top" FontSize="30" Opacity="0.8" Text="{DynamicResource LOCTrailerControlCenter}" Margin="20,15,0,0" />
									<StackPanel Margin="0,50,0,20" Orientation="Vertical">

										<Grid Margin="0,20,0,0">
											<Grid.ColumnDefinitions>
												<ColumnDefinition Width="*" />
												<ColumnDefinition Width="*" />
											</Grid.ColumnDefinitions>
											<StackPanel	Grid.Column="0"	HorizontalAlignment="Left" Orientation="Horizontal">
												<TextBlock Style="{DynamicResource TextBlockBaseStyle}" Margin="40,0,20,0" HorizontalAlignment="Left" VerticalAlignment="Center" FontSize="24"	Text="{DynamicResource LOCTrailerOptionMainCC}" />
											</StackPanel>
											<StackPanel	Grid.Column="1" HorizontalAlignment="Right"	Orientation="Horizontal">
												<CheckBoxEx pbeh:FocusBahaviors.OnVisibilityFocus="True" HorizontalAlignment="Right" VerticalAlignment="Center" Style="{DynamicResource SettingsSectionCheckbox}" IsChecked="{PluginSettings Plugin=ThemeOptions, Path=Options[TrailerOnMainView], Mode=TwoWay}" />
											</StackPanel>
										</Grid>

										<Grid Margin="0,20,0,0">
											<Grid.ColumnDefinitions>
												<ColumnDefinition Width="*" />
												<ColumnDefinition Width="*" />
											</Grid.ColumnDefinitions>
											<StackPanel	Grid.Column="0"	HorizontalAlignment="Left" Orientation="Horizontal">
												<TextBlock Style="{DynamicResource TextBlockBaseStyle}" Margin="40,0,20,0" HorizontalAlignment="Left" VerticalAlignment="Center" FontSize="24"	Text="{DynamicResource LOCTrailerOptionDetailsCC}" />
											</StackPanel>
											<StackPanel	Grid.Column="1" HorizontalAlignment="Right"	Orientation="Horizontal">
												<CheckBoxEx HorizontalAlignment="Right" VerticalAlignment="Center" Style="{DynamicResource SettingsSectionCheckbox}" IsChecked="{PluginSettings Plugin=ThemeOptions, Path=Options[TrailerOnDetailsView], Mode=TwoWay}" />
											</StackPanel>
										</Grid>

										<Grid Margin="0,20,0,0">
											<Grid.ColumnDefinitions>
												<ColumnDefinition Width="*" />
												<ColumnDefinition Width="*" />
											</Grid.ColumnDefinitions>
											<StackPanel	Grid.Column="0"	HorizontalAlignment="Left" Orientation="Vertical">
												<TextBlock Style="{DynamicResource TextBlockBaseStyle}" Margin="40,0,20,0" HorizontalAlignment="Left" VerticalAlignment="Center" FontSize="24"	Text="{DynamicResource LOCMiniTrailerCC}" />
												<TextBlock Style="{DynamicResource TextBlockMiniStyle}" Margin="40,0,20,0" HorizontalAlignment="Left" VerticalAlignment="Center" FontSize="14"	Text="Restart Playnite" />
											</StackPanel>
											<StackPanel	Grid.Column="1" HorizontalAlignment="Right"	Orientation="Horizontal">
												<CheckBoxEx HorizontalAlignment="Right" VerticalAlignment="Center" Style="{DynamicResource SettingsSectionCheckbox}" IsChecked="{PluginSettings Plugin=ThemeOptions, Path=Options[MiniTrailer], Mode=TwoWay}" />
											</StackPanel>

										</Grid>

										<Grid Margin="0,20,0,0">
											<Grid.ColumnDefinitions>
												<ColumnDefinition Width="*" />
												<ColumnDefinition Width="*" />
											</Grid.ColumnDefinitions>
											<StackPanel	Grid.Column="0"	HorizontalAlignment="Left" Orientation="Vertical">
												<TextBlock Style="{DynamicResource TextBlockBaseStyle}" Margin="40,0,20,0" HorizontalAlignment="Left" VerticalAlignment="Center" FontSize="24"	Text="{DynamicResource LOCAlternativCC}" />
											</StackPanel>
											<StackPanel	Grid.Column="1" HorizontalAlignment="Right"	Orientation="Horizontal">
												<CheckBoxEx HorizontalAlignment="Right" VerticalAlignment="Center" Style="{DynamicResource SettingsSectionCheckbox}" IsChecked="{PluginSettings Plugin=ThemeOptions, Path=Options[Alternativ], Mode=TwoWay}" />
											</StackPanel>
										</Grid>



									</StackPanel>
								</Grid>

							</Grid>

							<!--Layout ControlCenter-->
							<Grid x:Name="LayoutOption" Panel.ZIndex="1" Focusable="True" KeyboardNavigation.TabNavigation="Cycle" KeyboardNavigation.ControlTabNavigation="Cycle" KeyboardNavigation.DirectionalNavigation="Cycle">
								<Grid.InputBindings>
									<pin:GameControllerInputBinding Button="B" Command="{Binding Content.ChangeProperty, ElementName=ThemeOptions_Command}"	CommandParameter="[Setter ElementName=ButtonLayout, Property=IsChecked, Value=True]" />
									<KeyBinding Key="Back" Command="{Binding Content.ChangeProperty, ElementName=ThemeOptions_Command}"	CommandParameter="[Setter ElementName=ButtonLayout, Property=IsChecked, Value=True]" />
								</Grid.InputBindings>
								<Grid.Style>
									<Style TargetType="Grid">
										<Setter Property="Opacity" Value="1"/>
										<Setter Property="VerticalAlignment" Value="Top"/>
										<Setter Property="HorizontalAlignment" Value="Center"/>
										<Setter Property="Grid.Row" Value="0"/>
										<Setter Property="Grid.RowSpan" Value="5"/>
										<Setter Property="Grid.ColumnSpan" Value="3"/>
										<Setter Property="Visibility" Value="Collapsed"/>
										<Setter Property="Margin" Value="0,90,0,0"/>
										<Style.Triggers>
											<MultiDataTrigger>
												<MultiDataTrigger.Conditions>
													<Condition Binding="{Binding ElementName=ControlCenterButton1, Path=IsChecked}" Value="True" />
													<Condition Binding="{Binding ElementName=ButtonLayout, Path=IsChecked}" Value="False" />
												</MultiDataTrigger.Conditions>
												<Setter Property="Visibility" Value="Visible" />
											</MultiDataTrigger>
											<MultiDataTrigger>
												<MultiDataTrigger.Conditions>
													<Condition Binding="{Binding ElementName=ControlCenterButton1, Path=IsChecked}" Value="True" />
													<Condition Binding="{Binding ElementName=ButtonLayout, Path=IsChecked}" Value="False" />
													<Condition Binding="{Binding ElementName=LayoutOption, Path=Visibility}" Value="Collapsed" />
												</MultiDataTrigger.Conditions>
												<MultiDataTrigger.Setters>
													<Setter Property="FocusManager.FocusedElement" Value="{Binding ElementName=ButtonLayout}" />
												</MultiDataTrigger.Setters>
											</MultiDataTrigger>
										</Style.Triggers>
									</Style>
								</Grid.Style>
								<Border	Width="Auto" Background="{DynamicResource OverlayMenu}" CornerRadius="{DynamicResource Corner}" Opacity="0"/>
								<Grid>
									<TextBlock Style="{DynamicResource TextBlockBoldBaseStyle}" HorizontalAlignment="Center" VerticalAlignment="Top" FontSize="30" Opacity="0.8" Text="{DynamicResource LOCSettingsLayoutLabel}" Margin="20,15,0,0" />
									<StackPanel Margin="0,70,0,20" Orientation="Vertical">
										<Grid Margin="0,20,0,0">
											<Grid.ColumnDefinitions>
												<ColumnDefinition Width="*" />
												<ColumnDefinition Width="*" />
											</Grid.ColumnDefinitions>
											<StackPanel	Grid.Column="0"	HorizontalAlignment="Left" Orientation="Horizontal">
												<TextBlock Style="{DynamicResource TextBlockBaseStyle}" Margin="40,0,20,0" HorizontalAlignment="Left" VerticalAlignment="Center" FontSize="24" Text="{DynamicResource LOCColumns}" />
												<TextBlock Style="{DynamicResource TextBlockBaseStyle}" Margin="0,0,20,0" HorizontalAlignment="Left" VerticalAlignment="Center" FontSize="24" Text="{Settings Fullscreen.Columns}" />
											</StackPanel>

											<StackPanel	Grid.Column="1"	HorizontalAlignment="Right"	Orientation="Horizontal">
												<StackPanel.Style>
													<Style TargetType="StackPanel">
														<Style.Triggers>
														</Style.Triggers>
													</Style>
												</StackPanel.Style>
												<SliderEx pbeh:FocusBahaviors.OnVisibilityFocus="True" HorizontalAlignment="Right" VerticalAlignment="Center" IsSnapToTickEnabled="True" LargeChange="1" Maximum="10" Minimum="1"
																				 SmallChange="1"	Style="{DynamicResource SettingsSectionSlider}"	TickFrequency="1" Value="{Settings Fullscreen.Columns, Mode=TwoWay}" />
											</StackPanel>
										</Grid>

										<Grid Margin="0,20,0,0">
											<Grid.ColumnDefinitions>
												<ColumnDefinition Width="*" />
												<ColumnDefinition Width="*" />
											</Grid.ColumnDefinitions>
											<StackPanel	Grid.Column="0"	HorizontalAlignment="Left" Orientation="Horizontal">
												<TextBlock Style="{DynamicResource TextBlockBaseStyle}" Margin="40,0,20,0" HorizontalAlignment="Left" VerticalAlignment="Center" FontSize="24"	Text="{DynamicResource LOCSettingsGridItemSpacing}" />
												<TextBlock Style="{DynamicResource TextBlockBaseStyle}" Margin="0,0,20,0" HorizontalAlignment="Left" VerticalAlignment="Center"  FontSize="24"  Text="{Settings FullscreenItemSpacing}" />
											</StackPanel>
											<StackPanel	Grid.Column="1" HorizontalAlignment="Right"	Orientation="Horizontal">
												<SliderEx HorizontalAlignment="Right" VerticalAlignment="Center" IsSnapToTickEnabled="True"	LargeChange="5" Maximum="200" Minimum="0"
														  SmallChange="5" Style="{DynamicResource SettingsSectionSlider}" TickFrequency="5" Value="{Settings FullscreenItemSpacing, Mode=TwoWay}" />
											</StackPanel>
										</Grid>

										<Grid Margin="0,20,0,0">
											<Grid.ColumnDefinitions>
												<ColumnDefinition Width="*" />
												<ColumnDefinition Width="*" />
											</Grid.ColumnDefinitions>
											<StackPanel	Grid.Column="0"	HorizontalAlignment="Left" Orientation="Horizontal">
												<TextBlock Style="{DynamicResource TextBlockBaseStyle}" Margin="40,0,20,0" HorizontalAlignment="Left" VerticalAlignment="Center" FontSize="24"	Text="{DynamicResource LOCRows}" />
												<TextBlock Style="{DynamicResource TextBlockBaseStyle}" Margin="0,0,20,0" HorizontalAlignment="Left" VerticalAlignment="Center"  FontSize="24"  Text="{Settings Fullscreen.Rows}" />
											</StackPanel>
											<StackPanel	Grid.Column="1" HorizontalAlignment="Right"	Orientation="Horizontal">
												<SliderEx HorizontalAlignment="Right" VerticalAlignment="Center" IsSnapToTickEnabled="True"	LargeChange="1" Maximum="10" Minimum="1"
														  SmallChange="1" Style="{DynamicResource SettingsSectionSlider}" TickFrequency="1" Value="{Settings Fullscreen.Rows, Mode=TwoWay}" />
											</StackPanel>
										</Grid>


									</StackPanel>
								</Grid>

							</Grid>

							<!--Details ThemeOptions-->
							<Grid x:Name="DetailsThemeOption" Panel.ZIndex="1" Focusable="True" KeyboardNavigation.TabNavigation="Cycle" KeyboardNavigation.ControlTabNavigation="Cycle" KeyboardNavigation.DirectionalNavigation="Cycle">
								<Grid.InputBindings>
									<pin:GameControllerInputBinding Button="B" Command="{Binding Content.ChangeProperty, ElementName=ThemeOptions_Command}"	CommandParameter="[Setter ElementName=ButtonThemeOptionDetails, Property=IsChecked, Value=True]" />
									<KeyBinding Key="Back" Command="{Binding Content.ChangeProperty, ElementName=ThemeOptions_Command}"	CommandParameter="[Setter ElementName=ButtonThemeOptionDetails, Property=IsChecked, Value=True]" />
								</Grid.InputBindings>
								<Grid.Style>
									<Style TargetType="Grid">
										<Setter Property="Opacity" Value="1"/>
										<Setter Property="VerticalAlignment" Value="Top"/>
										<Setter Property="HorizontalAlignment" Value="Center"/>
										<Setter Property="Grid.Row" Value="0"/>
										<Setter Property="Grid.RowSpan" Value="5"/>
										<Setter Property="Grid.ColumnSpan" Value="3"/>
										<Setter Property="Visibility" Value="Collapsed"/>
										<Setter Property="Margin" Value="0,90,0,0"/>
										<Style.Triggers>
											<MultiDataTrigger>
												<MultiDataTrigger.Conditions>
													<Condition Binding="{Binding ElementName=ControlCenterButton1, Path=IsChecked}" Value="True" />
													<Condition Binding="{Binding ElementName=ButtonThemeOptionDetails, Path=IsChecked}" Value="False" />
												</MultiDataTrigger.Conditions>
												<Setter Property="Visibility" Value="Visible" />
											</MultiDataTrigger>
											<MultiDataTrigger>
												<MultiDataTrigger.Conditions>
													<Condition Binding="{Binding ElementName=ControlCenterButton1, Path=IsChecked}" Value="True" />
													<Condition Binding="{Binding ElementName=ButtonThemeOptionDetails, Path=IsChecked}" Value="False" />
													<Condition Binding="{Binding ElementName=DetailsThemeOption, Path=Visibility}" Value="Collapsed" />
												</MultiDataTrigger.Conditions>
												<MultiDataTrigger.Setters>
													<Setter Property="FocusManager.FocusedElement" Value="{Binding ElementName=ButtonThemeOptionDetails}" />
												</MultiDataTrigger.Setters>
											</MultiDataTrigger>
										</Style.Triggers>
									</Style>
								</Grid.Style>
								<Border	Width="Auto" Background="{DynamicResource OverlayMenu}" CornerRadius="{DynamicResource Corner}" Opacity="0"/>
								<Grid>
									<TextBlock Style="{DynamicResource TextBlockBoldBaseStyle}" HorizontalAlignment="Center" VerticalAlignment="Top" FontSize="30" Opacity="0.8" Text="{DynamicResource LOCThemOptsDetails}" Margin="20,10,0,0" />
									<StackPanel Margin="0,70,0,20" Orientation="Vertical">
										<Grid Margin="0,20,0,0">
											<Grid.ColumnDefinitions>
												<ColumnDefinition Width="*" />
												<ColumnDefinition Width="*" />
											</Grid.ColumnDefinitions>
											<StackPanel	Grid.Column="0"	HorizontalAlignment="Left" Orientation="Horizontal">
												<TextBlock Style="{DynamicResource TextBlockBaseStyle}" Margin="40,0,20,0" HorizontalAlignment="Left" VerticalAlignment="Center" FontSize="24"	Text="{DynamicResource LOCFeaturesSteam}" />
											</StackPanel>
											<StackPanel	Grid.Column="1" HorizontalAlignment="Right"	Orientation="Horizontal">
												<CheckBoxEx pbeh:FocusBahaviors.OnVisibilityFocus="True" HorizontalAlignment="Right" VerticalAlignment="Center" Style="{DynamicResource SettingsSectionCheckbox}" IsChecked="{PluginSettings Plugin=ThemeOptions, Path=Options[FeaturesSteam], Mode=TwoWay}" />
											</StackPanel>
										</Grid>

										<Grid Margin="0,20,0,0">
											<Grid.ColumnDefinitions>
												<ColumnDefinition Width="*" />
												<ColumnDefinition Width="*" />
											</Grid.ColumnDefinitions>
											<StackPanel	Grid.Column="0"	HorizontalAlignment="Left" Orientation="Horizontal">
												<TextBlock Style="{DynamicResource TextBlockBaseStyle}" Margin="40,0,20,0" HorizontalAlignment="Left" VerticalAlignment="Center" FontSize="24"	Text="{DynamicResource LOCNoHLTBDetails}" />
											</StackPanel>
											<StackPanel	Grid.Column="1" HorizontalAlignment="Right"	Orientation="Horizontal">
												<CheckBoxEx HorizontalAlignment="Right" VerticalAlignment="Center" Style="{DynamicResource SettingsSectionCheckbox}" IsChecked="{PluginSettings Plugin=ThemeOptions, Path=Options[NoHLTBDetails], Mode=TwoWay}" />
											</StackPanel>
										</Grid>

										<Grid Margin="0,20,0,0">
											<Grid.ColumnDefinitions>
												<ColumnDefinition Width="*" />
												<ColumnDefinition Width="*" />
											</Grid.ColumnDefinitions>
											<StackPanel	Grid.Column="0"	HorizontalAlignment="Left" Orientation="Horizontal">
												<TextBlock Style="{DynamicResource TextBlockBaseStyle}" Margin="40,0,20,0" HorizontalAlignment="Left" VerticalAlignment="Center" FontSize="24"	Text="{DynamicResource LOCNoGenreDetails}" />
											</StackPanel>
											<StackPanel	Grid.Column="1" HorizontalAlignment="Right"	Orientation="Horizontal">
												<CheckBoxEx HorizontalAlignment="Right" VerticalAlignment="Center" Style="{DynamicResource SettingsSectionCheckbox}" IsChecked="{PluginSettings Plugin=ThemeOptions, Path=Options[NoGenreDetails], Mode=TwoWay}" />
											</StackPanel>
										</Grid>

										<Grid Margin="0,20,0,0">
											<Grid.ColumnDefinitions>
												<ColumnDefinition Width="*" />
												<ColumnDefinition Width="*" />
											</Grid.ColumnDefinitions>
											<StackPanel	Grid.Column="0"	HorizontalAlignment="Left" Orientation="Horizontal">
												<TextBlock Style="{DynamicResource TextBlockBaseStyle}" Margin="40,0,20,0" HorizontalAlignment="Left" VerticalAlignment="Center" FontSize="24"	Text="{DynamicResource LOCLocalClock}" />
											</StackPanel>
											<StackPanel	Grid.Column="1" HorizontalAlignment="Right"	Orientation="Horizontal">
												<CheckBoxEx HorizontalAlignment="Right" VerticalAlignment="Center" Style="{DynamicResource SettingsSectionCheckbox}" IsChecked="{PluginSettings Plugin=ThemeOptions, Path=Options[LocalClock], Mode=TwoWay}" />
											</StackPanel>
										</Grid>


									</StackPanel>
								</Grid>

							</Grid>


							<!-- Control Center -->
							<Grid x:Name="ControlCenter" Focusable="False" Panel.ZIndex="1" Width="{Binding ElementName=PART_ViewHost, Path=ActualWidth}"  KeyboardNavigation.TabNavigation="Cycle" KeyboardNavigation.ControlTabNavigation="Cycle" KeyboardNavigation.DirectionalNavigation="Cycle">
								<Grid.InputBindings>
									<pin:GameControllerInputBinding Button="B" Command="{Binding Content.ChangeProperty, ElementName=ThemeOptions_Command}" CommandParameter="[Setter ElementName=ControlCenterButton, Property=IsChecked, Value=False]"/>
									<KeyBinding Key="Down" Command="{Binding Content.ChangeProperty, ElementName=ThemeOptions_Command}"	CommandParameter="[Setter ElementName=ControlCenterButton, Property=IsChecked, Value=False]" />
								</Grid.InputBindings>
								<Grid.Style>
									<Style TargetType="Grid">
										<Setter Property="Opacity" Value="1"/>
										<Setter Property="VerticalAlignment" Value="Top"/>
										<Setter Property="HorizontalAlignment" Value="Center"/>
										<Setter Property="Grid.Row" Value="0"/>
										<Setter Property="Grid.RowSpan" Value="5"/>
										<Setter Property="Grid.ColumnSpan" Value="5"/>
										<Setter Property="Visibility" Value="Collapsed"/>
										<Setter Property="Margin" Value="0,0,-20,0"/>
										<Style.Triggers>
											<MultiDataTrigger>
												<MultiDataTrigger.Conditions>
													<Condition Binding="{Binding ElementName=ControlCenterButton, Path=IsChecked}" Value="True" />
													<Condition Binding="{Binding ElementName=ChangeViewButton, Path=IsChecked}" Value="True" />
												</MultiDataTrigger.Conditions>
												<MultiDataTrigger.Setters>
													<Setter Property="Visibility" Value="Visible"/>
												</MultiDataTrigger.Setters>
												<MultiDataTrigger.EnterActions>
													<BeginStoryboard>
														<Storyboard>
															<ThicknessAnimation Storyboard.TargetProperty="Margin" Duration="0:0:0.3" From="0,-200,0,0">
																<ThicknessAnimation.EasingFunction>
																	<CubicEase EasingMode="EaseOut"/>
																</ThicknessAnimation.EasingFunction>
															</ThicknessAnimation>
														</Storyboard>
													</BeginStoryboard>
												</MultiDataTrigger.EnterActions>
												<MultiDataTrigger.ExitActions>
													<BeginStoryboard>
														<Storyboard>
															<ThicknessAnimation Storyboard.TargetProperty="Margin" Duration="0:0:0.3" To="0,-200,0,0">
																<ThicknessAnimation.EasingFunction>
																	<CubicEase EasingMode="EaseOut"/>
																</ThicknessAnimation.EasingFunction>
															</ThicknessAnimation>
														</Storyboard>
													</BeginStoryboard>
												</MultiDataTrigger.ExitActions>
											</MultiDataTrigger>
										</Style.Triggers>
									</Style>
								</Grid.Style>

								<Border Background="Transparent" Opacity="0.8" Height="70"/>

								<StackPanel Panel.ZIndex="100" Orientation="Horizontal" HorizontalAlignment="Center">

									<CheckBoxEx x:Name="ControlCenterButton1" pbeh:FocusBahaviors.OnVisibilityFocus="True" Focusable="True" VerticalAlignment="Center" Margin="30,0,30,0" Height="40"
													Width="40" Style="{DynamicResource ControlCenterStyle}" Grid.Column="5"  IsChecked="{Binding ElementName=ControlCenterButton, Path=IsChecked}">
										<CheckBoxEx.Content>
											<Grid>
												<Border CornerRadius="5" Height="40" Width="40" VerticalAlignment="Center"
														HorizontalAlignment="Center" ClipToBounds="True">
												</Border>
											</Grid>
										</CheckBoxEx.Content>
									</CheckBoxEx>

									<CheckBoxEx x:Name="ButtonThemeOption" Focusable="True" VerticalAlignment="Center" Margin="30,0,30,0" Height="40" ToolTip="{DynamicResource LOCThemOptsMain}"
													Width="40" Style="{DynamicResource OptionButtonMain}" Grid.Column="5" IsChecked="True">
										<CheckBoxEx.Content>
											<Grid>
												<Border CornerRadius="5" Height="40" Width="40" VerticalAlignment="Center"
														HorizontalAlignment="Center" ClipToBounds="True">
												</Border>
											</Grid>
										</CheckBoxEx.Content>
									</CheckBoxEx>

									<CheckBoxEx x:Name="ButtonThemeOptionDetails" Focusable="True" VerticalAlignment="Center" Margin="30,0,30,0" Height="40" ToolTip="{DynamicResource LOCThemOptsDetails}"
													Width="40" Style="{DynamicResource ThemOptButtonDet}" Grid.Column="5" IsChecked="True">
										<CheckBoxEx.Content>
											<Grid>
												<Border CornerRadius="5" Height="40" Width="40" VerticalAlignment="Center"
														HorizontalAlignment="Center" ClipToBounds="True">
												</Border>
											</Grid>
										</CheckBoxEx.Content>
									</CheckBoxEx>

									<CheckBoxEx x:Name="ButtonTrailer" Focusable="True" VerticalAlignment="Center" Margin="30,0,30,0" Height="40" ToolTip="{DynamicResource LOCTrailerControlCenter}"
													Width="40" Style="{DynamicResource TrailerButtonMain}" Grid.Column="5" IsChecked="True">
										<CheckBoxEx.Content>
											<Grid>
												<Border CornerRadius="5" Height="40" Width="40" VerticalAlignment="Center"
														HorizontalAlignment="Center" ClipToBounds="True">
												</Border>
											</Grid>
										</CheckBoxEx.Content>
									</CheckBoxEx>

									<ButtonEx x:Name="PART_ButtonFilter" VerticalAlignment="Center" ToolTip="{DynamicResource LOCMenuViewFilterPanel}"
											 Margin="30,0,30,0" Height="40" Width="40" Style="{DynamicResource ButtonAvatar}" Grid.Column="7">
										<ButtonEx.Content>
											<Grid>
												<Border CornerRadius="2" Height="40" Width="40" VerticalAlignment="Center" HorizontalAlignment="Center"
														ClipToBounds="True" >
													<Border.Background>
														<ImageBrush RenderOptions.BitmapScalingMode="Fant" ImageSource="{ThemeFile 'Images/Buttons/Filter.png'}"
																	Stretch="UniformToFill"/>
													</Border.Background>
												</Border>
											</Grid>
										</ButtonEx.Content>
									</ButtonEx>

									<ButtonEx x:Name="PART_ButtonSearch" VerticalAlignment="Center" ToolTip="{DynamicResource LOCSearchLabel}"
											 Margin="30,0,30,0" Height="40" Width="40" Style="{DynamicResource ButtonAvatar}" Grid.Column="7">
										<ButtonEx.Content>
											<Grid>
												<Border CornerRadius="2" Height="40" Width="40" VerticalAlignment="Center" HorizontalAlignment="Center"
														ClipToBounds="True" >
													<Border.Background>
														<ImageBrush RenderOptions.BitmapScalingMode="Fant" ImageSource="{ThemeFile 'Images/Buttons/Search.png'}"
																	Stretch="UniformToFill"/>
													</Border.Background>
												</Border>
											</Grid>
										</ButtonEx.Content>
									</ButtonEx>

									<CheckBoxEx x:Name="ButtonController" Focusable="True" VerticalAlignment="Center" Margin="30,0,30,0" Height="40"
													Width="40" Style="{DynamicResource ControllerButtonMain}" Grid.Column="5"
													ToolTip="{DynamicResource LOCControllerControlCenter}" IsChecked="{PluginSettings Plugin=ThemeOptions, Path=Options[ButtonControllerVisibleByDefault], Mode=TwoWay}">
										<CheckBoxEx.Content>
											<Grid>
												<Border CornerRadius="5" Height="40" Width="40" VerticalAlignment="Center"
														HorizontalAlignment="Center" ClipToBounds="True">
												</Border>
											</Grid>
										</CheckBoxEx.Content>
									</CheckBoxEx>

									<CheckBoxEx x:Name="ButtonAudio" Focusable="True" VerticalAlignment="Center" Margin="30,0,30,0" Height="40" ToolTip="{DynamicResource LOCAudioControlCenter}"
													Width="40" Style="{DynamicResource VolumerButtonMain}" Grid.Column="5" IsChecked="True">
										<CheckBoxEx.Content>
											<Grid>
												<Border CornerRadius="5" Height="40" Width="40" VerticalAlignment="Center"
														HorizontalAlignment="Center" ClipToBounds="True">
												</Border>
											</Grid>
										</CheckBoxEx.Content>
									</CheckBoxEx>

									<CheckBoxEx x:Name="ButtonLayout" Focusable="True" VerticalAlignment="Center" Margin="30,0,30,0" Height="40" ToolTip="{DynamicResource LOCSettingsLayoutLabel}"
													Width="40" Style="{DynamicResource LayoutButtonMain}" Grid.Column="5" IsChecked="True">
										<CheckBoxEx.Content>
											<Grid>
												<Border CornerRadius="5" Height="40" Width="40" VerticalAlignment="Center"
														HorizontalAlignment="Center" ClipToBounds="True">
												</Border>
											</Grid>
										</CheckBoxEx.Content>
									</CheckBoxEx>




								</StackPanel>
							</Grid>

							<Grid FocusVisualStyle="{x:Null}" Panel.ZIndex="1">
								<Grid.Style>
									<Style TargetType="Grid">
										<Setter Property="Opacity" Value="0"/>
										<Setter Property="VerticalAlignment" Value="Stretch"/>
										<Setter Property="Background" Value="Transparent"/>
										<Setter Property="Grid.Row" Value="0"/>
										<Setter Property="Grid.ColumnSpan" Value="3"/>
										<Style.Triggers>
											<DataTrigger Binding="{Binding ElementName=PART_ElemGameDetails, Path=Visibility}" Value="Visible">
												<Setter Property="Focusable" Value="False"/>
												<Setter Property="Visibility" Value="Collapsed"/>
											</DataTrigger>
											<DataTrigger Binding="{Binding ElementName=ControlCenter, Path=Visibility}" Value="Visible">
												<Setter Property="Visibility" Value="Collapsed"/>
											</DataTrigger>
											<DataTrigger Binding="{Binding ElementName=PART_MainHost, Path=Visibility}" Value="Visible">
												<DataTrigger.EnterActions>
													<BeginStoryboard>
														<Storyboard>
															<DoubleAnimation Storyboard.TargetProperty="Opacity" BeginTime="0:0:0.1" Duration="0:0:1.5" To="1" />
														</Storyboard>
													</BeginStoryboard>
												</DataTrigger.EnterActions>
											</DataTrigger>
										</Style.Triggers>
									</Style>
								</Grid.Style>

								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="50" />
									<ColumnDefinition Width="Auto" />
									<ColumnDefinition Width="*" />
									<ColumnDefinition Width="Auto" />
									<ColumnDefinition Width="Auto" />
									<ColumnDefinition Width="Auto" />
									<ColumnDefinition Width="Auto" />
									<ColumnDefinition Width="Auto" />
									<ColumnDefinition Width="Auto" />
									<ColumnDefinition Width="Auto" />
									<ColumnDefinition Width="Auto" />
									<ColumnDefinition Width="20" />
								</Grid.ColumnDefinitions>

								<Grid Grid.Column="2" Grid.Row="0" HorizontalAlignment="Right">
									<Grid.Style>
										<Style TargetType="Grid">
											<Style.Triggers>
												<DataTrigger Binding="{Binding ElementName=PART_ElemGameDetails, Path=Visibility}" Value="Visible">
													<Setter Property="Visibility" Value="Collapsed"/>
												</DataTrigger>
											</Style.Triggers>
										</Style>
									</Grid.Style>
									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="*" />
										<ColumnDefinition Width="Auto" />
										<ColumnDefinition Width="Auto" />
										<ColumnDefinition Width="Auto" />
										<ColumnDefinition Width="Auto" />
										<ColumnDefinition Width="Auto" />
										<ColumnDefinition Width="Auto" />
									</Grid.ColumnDefinitions>

									<!-- Battery -->
									<ContentControl x:Name="PART_ElemBatteryStatus" Focusable="False" FontSize="30"
													VerticalAlignment="Center" Margin="10,-5,-5,0"
													Grid.Column="2">
										<ContentControl.Style>
											<Style TargetType="ContentControl">
												<Setter Property="Foreground" Value="{DynamicResource TextBrush}" />
												<Style.Triggers>
													<DataTrigger Binding="{Binding PowerStatus.Charge}" Value="Critical">
														<Setter Property="Content">
															<Setter.Value>
																<Image Source="{ThemeFile 'Images/Buttons/Battery_Critical.png'}" RenderOptions.BitmapScalingMode="Fant" Height="30"/>
															</Setter.Value>
														</Setter>
														<Setter Property="Foreground" Value="Red" />
													</DataTrigger>
													<DataTrigger Binding="{Binding PowerStatus.Charge}" Value="Low">
														<Setter Property="Content">
															<Setter.Value>
																<Image Source="{ThemeFile 'Images/Buttons/Battery_Low.png'}" RenderOptions.BitmapScalingMode="Fant" Height="30"/>
															</Setter.Value>
														</Setter>
													</DataTrigger>
													<DataTrigger Binding="{Binding PowerStatus.Charge}" Value="Medium">
														<Setter Property="Content">
															<Setter.Value>
																<Image Source="{ThemeFile 'Images/Buttons/Battery_Medium.png'}" RenderOptions.BitmapScalingMode="Fant" Height="30"/>
															</Setter.Value>
														</Setter>
													</DataTrigger>
													<DataTrigger Binding="{Binding PowerStatus.Charge}" Value="High">
														<Setter Property="Content">
															<Setter.Value>
																<Image Source="{ThemeFile 'Images/Buttons/Battery_Full.png'}" RenderOptions.BitmapScalingMode="Fant" Height="30"/>
															</Setter.Value>
														</Setter>
													</DataTrigger>
													<DataTrigger Binding="{Binding PowerStatus.IsCharging}" Value="True">
														<Setter Property="Content">
															<Setter.Value>
																<Image Source="{ThemeFile 'Images/Buttons/Battery_Charging.png'}" RenderOptions.BitmapScalingMode="Fant" Height="30"/>
															</Setter.Value>
														</Setter>
													</DataTrigger>
												</Style.Triggers>
											</Style>
										</ContentControl.Style>
									</ContentControl>
									<TextBlock x:Name="PART_TextBatteryPercentage" Style="{DynamicResource TextBlockBoldBaseStyle}" Foreground="#F6F6F6"
											   VerticalAlignment="Center" Margin="20,-10,0,0" FontSize="26"  Grid.Column="1" >
									</TextBlock>


									<ButtonEx x:Name="NowPlay"
											  Command="{PluginSettings Plugin=NowPlaying, Path=OpenDialog}"
											  Padding="4,4,4,4"
											  Grid.Column="0" >
										<ButtonEx.Style>
											<Style TargetType="ButtonEx" BasedOn="{StaticResource ButtonContext}">
												<Setter Property="Visibility" Value="Visible" />
												<Style.Triggers>
													<DataTrigger Binding="{PluginStatus Plugin=NowPlaying_db4e7ade-57fb-426c-8392-60e2347a0209, Status=Installed}" Value="False">
														<Setter Property="Visibility" Value="Collapsed" />
													</DataTrigger>
													<DataTrigger Binding="{PluginSettings Plugin=NowPlaying, Path=IsGameRunning}" Value="False">
														<Setter Property="Visibility" Value="Collapsed" />
													</DataTrigger>
												</Style.Triggers>
											</Style>
										</ButtonEx.Style>

										<StackPanel Orientation="Horizontal" VerticalAlignment="Center" HorizontalAlignment="Left">
											<Image Width="32"
												   Height="32"
												   Source="{PluginSettings Plugin=NowPlaying, Path=RunningGame.IconPath}"
												   Margin="10,5,10,5"/>
											<StackPanel Orientation="Vertical">

												<TextBlock x:Name="NowPlaying_Game"
														   Style="{DynamicResource TextBlockBoldBaseStyle}"
														   Text="{PluginSettings Plugin=NowPlaying, Path=RunningGame.GameName}"
														   FontSize="16"
														   Margin="10,0,10,0"
														   TextTrimming="WordEllipsis"
														   MaxWidth="250"/>
												<StackPanel Orientation="Horizontal">
													<TextBlock x:Name="NowPlaying_Title"
															   Style="{DynamicResource TextBlockBaseStyle}"
															   Text="{DynamicResource LOCNowPlayingNP}"
															   FontSize="16"
															   Margin="10,0,5,0"/>
													<TextBlock x:Name="SessionLength"
														   Style="{DynamicResource TextBlockBaseStyle}"
														   Text="{PluginSettings Plugin=NowPlaying, Path=SessionLength}"
														   FontSize="15"
															   VerticalAlignment="Bottom"
														   Margin="0,0,10,0"/>

												</StackPanel>
											</StackPanel>
										</StackPanel>
									</ButtonEx>

									<!-- Clock -->
									<TextBlock x:Name="PART_TextClock"
											   Style="{DynamicResource TextBlockBaseStyle}"
											   Foreground="#F6F6F6"
											   VerticalAlignment="Center"
											   Margin="25,-10,0,0"
											   FontSize="26"
											   Grid.Column="3">


									</TextBlock>
									<Grid.Effect>
										<DropShadowEffect ShadowDepth="2" Color="Black" BlurRadius="3" RenderingBias="Performance" Opacity="0.8"/>
									</Grid.Effect>
								</Grid>

								<!-- Completed Game -->
								<Grid  Grid.Row="0" Grid.Column="2" HorizontalAlignment="Right" VerticalAlignment="Top" CacheMode="BitmapCache" >
									<Grid.Style>
										<Style TargetType="Grid">
											<Setter Property="Margin" Value="0,0,300,0"/>
											<Setter Property="Visibility" Value="Collapsed" />
											<Setter Property="RenderTransform">
												<Setter.Value>
													<TranslateTransform x:Name="CompletedGameTransform" />
												</Setter.Value>
											</Setter>
											<Style.Triggers>

												<MultiDataTrigger>
													<MultiDataTrigger.Conditions>
														<Condition Binding="{PluginSettings Plugin=ThemeOptions, Path=Options[CompletedOnMainMenu]}" Value="True"/>
														<Condition Binding="{PluginSettings Plugin=ThemeOptions, Path=Options[AltInfo]}" Value="False"/>
														<Condition Binding="{Binding ElementName=NowPlay, Path=Visibility}" Value="Collapsed"/>
														<Condition Binding="{Binding ElementName=PART_ElemGameDetails, Path=Visibility}" Value="Collapsed"/>
														<Condition Binding="{PluginSettings Plugin=ThemeOptions, Path=Options[PerformanceMode]}" Value="False"/>
													</MultiDataTrigger.Conditions>
													<Setter Property="Visibility" Value="Visible"/>
													<Setter Property="Opacity" Value="0.9" />
													<MultiDataTrigger.EnterActions>
														<BeginStoryboard>
															<Storyboard>
																<DoubleAnimation Storyboard.TargetProperty="RenderTransform.Y" From="-60" To="0" Duration="0:0:1.5" >
																	<DoubleAnimation.EasingFunction>
																		<SineEase EasingMode="EaseInOut" />
																	</DoubleAnimation.EasingFunction>
																</DoubleAnimation>
															</Storyboard>
														</BeginStoryboard>
													</MultiDataTrigger.EnterActions>
												</MultiDataTrigger>


												<MultiDataTrigger>
													<MultiDataTrigger.Conditions>
														<Condition	Binding="{PluginSettings Plugin=ThemeOptions, Path=Options[PerformanceMode]}" Value="True"/>
														<Condition Binding="{PluginSettings Plugin=ThemeOptions, Path=Options[CompletedOnMainMenu]}" Value="True"/>
														<Condition Binding="{Binding ElementName=PART_ElemGameDetails, Path=Visibility}" Value="Collapsed"/>
														<Condition Binding="{PluginSettings Plugin=ThemeOptions, Path=Options[AltInfo]}" Value="False"/>
													</MultiDataTrigger.Conditions>
													<Setter Property="Visibility" Value="Visible"/>
													<Setter Property="Opacity" Value="0.9" />
												</MultiDataTrigger>




												<DataTrigger Binding="{Binding ElementName=ChangeViewButton, Path=IsChecked}" Value="False">
													<Setter Property="Visibility" Value="Collapsed"/>
												</DataTrigger>
												<DataTrigger Binding="{Binding ElementName=PART_ElemGameDetails, Path=Visibility}" Value="Visible">
													<Setter Property="Visibility" Value="Collapsed"/>
												</DataTrigger>

											</Style.Triggers>
										</Style>
									</Grid.Style>
									<Border Background="{DynamicResource OverlayMenu}" BorderThickness="0" BorderBrush="White" FocusVisualStyle="{x:Null}" CornerRadius="{DynamicResource Corner}" Opacity="0.99" Margin="0,-50,0,0" MinWidth="150" Width="Auto" Height="100">
										<StackPanel Orientation="Horizontal" Grid.Column="8" Margin="10,60,20,0" VerticalAlignment="Center" HorizontalAlignment="Center">
											<ListBoxEx x:Name="GamePlatineLogic" Visibility="Visible" Width="0" VirtualizingPanel.VirtualizationMode="Recycling" VirtualizingPanel.IsVirtualizing="True"
																 Margin="0" SelectionMode="Multiple"
																 Background="Transparent"
																 FocusVisualStyle="{x:Null}"
																 BorderThickness="0" ScrollViewer.CanContentScroll="False"
																 IsSynchronizedWithCurrentItem="False"
																 ItemContainerStyle="{DynamicResource PlatineLogicStyle}">
												<ListBoxEx.Style>
													<Style TargetType="ListBoxEx">
														<Setter Property="ItemsControl.ItemsSource" Value="{Binding ElementName=PART_ListGameItems, Path=ItemsSource}"/>
														<Setter Property="Template">
															<Setter.Value>
																<ControlTemplate TargetType="{x:Type ListBoxEx}">
																	<ScrollViewer CanContentScroll="False" HorizontalScrollBarVisibility="Disabled">
																		<VirtualizingStackPanel x:Name="StackPanel" IsItemsHost="True" Orientation="Horizontal" HorizontalAlignment="Left"/>
																	</ScrollViewer>
																</ControlTemplate>
															</Setter.Value>
														</Setter>

													</Style>
												</ListBoxEx.Style>
											</ListBoxEx>
											<StackPanel Orientation="Horizontal" Margin="0,0,0,10" VerticalAlignment="Center" HorizontalAlignment="Center">
												<Image x:Name="Check" Source="{ThemeFile 'Images/Completed.png'}" Margin="0,0,5,5" RenderOptions.BitmapScalingMode="Fant" Height="26" Width="26" HorizontalAlignment="Center" VerticalAlignment="Center">
													<Image.Effect>
														<DropShadowEffect ShadowDepth="2" Color="Black" BlurRadius="2" RenderingBias="Performance" Opacity="0.8"/>
													</Image.Effect>
												</Image>
												<TextBlock Text="{Binding ElementName=GamePlatineLogic, Path=SelectedItems.Count}" Style="{DynamicResource TextBlockBoldBaseStyle}" FontSize="24"
															VerticalAlignment="Center" HorizontalAlignment="Center" Margin="0,0,0,5"/>
												<TextBlock Text="/" Style="{DynamicResource TextBlockBoldBaseStyle}" FontSize="24"
															VerticalAlignment="Center" HorizontalAlignment="Center" Margin="2,0,0,5"/>
												<TextBlock Text="{Binding ElementName=PART_ListGameItems, Path=Items.Count}" Style="{DynamicResource TextBlockBoldBaseStyle}" FontSize="24"
															VerticalAlignment="Center" HorizontalAlignment="Center" Margin="2,0,0,5"/>
											</StackPanel>
										</StackPanel>
										<Border.Effect>
											<DropShadowEffect ShadowDepth="2" Color="Black"
											RenderingBias="Performance" BlurRadius="5" Opacity="0.8"/>
										</Border.Effect>
									</Border>
								</Grid>

								<!--Trophée-->
								<Grid  Grid.Row="0" Grid.Column="2" HorizontalAlignment="Left" VerticalAlignment="Top" Tag="{PluginSettings Plugin=SuccessStory, Path=HasData}">
									<Grid.Style>
										<Style TargetType="Grid">
											<Setter Property="Visibility" Value="Collapsed" />
											<Setter Property="Margin" Value="300,0,0,0"/>
											<Setter Property="RenderTransform">
												<Setter.Value>
													<TranslateTransform x:Name="TrophéeTransform" />
												</Setter.Value>
											</Setter>
											<Style.Triggers>
												<MultiDataTrigger>
													<MultiDataTrigger.Conditions>
														<Condition	Binding="{PluginSettings Plugin=ThemeOptions, Path=Options[PerformanceMode]}" Value="False"/>
														<Condition Binding="{PluginSettings Plugin=ThemeOptions, Path=Options[AltInfo]}" Value="False"/>
														<Condition Binding="{PluginSettings Plugin=ThemeOptions, Path=Options[SuccessOnMainMenu]}" Value="True"/>
														<Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Tag}" Value="True"/>
														<Condition Binding="{Binding ElementName=PART_ElemGameDetails, Path=Visibility}" Value="Collapsed"/>
													</MultiDataTrigger.Conditions>
													<Setter Property="Visibility" Value="Visible"/>
													<Setter Property="Opacity" Value="0.9" />
													<MultiDataTrigger.EnterActions>
														<BeginStoryboard>
															<Storyboard>
																<DoubleAnimation Storyboard.TargetProperty="RenderTransform.Y" From="-60" To="0" Duration="0:0:1.5" >
																	<DoubleAnimation.EasingFunction>
																		<SineEase EasingMode="EaseInOut" />
																	</DoubleAnimation.EasingFunction>
																</DoubleAnimation>
															</Storyboard>
														</BeginStoryboard>
													</MultiDataTrigger.EnterActions>
												</MultiDataTrigger>

												<MultiDataTrigger>
													<MultiDataTrigger.Conditions>
														<Condition	Binding="{PluginSettings Plugin=ThemeOptions, Path=Options[PerformanceMode]}" Value="True"/>
														<Condition Binding="{PluginSettings Plugin=ThemeOptions, Path=Options[AltInfo]}" Value="False"/>
														<Condition Binding="{PluginSettings Plugin=ThemeOptions, Path=Options[SuccessOnMainMenu]}" Value="True"/>
														<Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Tag}" Value="True"/>
														<Condition Binding="{Binding ElementName=PART_ElemGameDetails, Path=Visibility}" Value="Collapsed"/>
													</MultiDataTrigger.Conditions>
													<Setter Property="Visibility" Value="Visible"/>
													<Setter Property="Opacity" Value="0.9" />
												</MultiDataTrigger>

												<DataTrigger Binding="{Binding ElementName=ChangeViewButton, Path=IsChecked}" Value="False">
													<Setter Property="Visibility" Value="Collapsed"/>
												</DataTrigger>


												<DataTrigger Binding="{Binding ElementName=PART_ElemGameDetails, Path=Visibility}" Value="Visible">
													<Setter Property="Visibility" Value="Collapsed"/>
												</DataTrigger>
											</Style.Triggers>
										</Style>
									</Grid.Style>
									<Border Background="{DynamicResource OverlayMenu}" BorderThickness="0" BorderBrush="White" FocusVisualStyle="{x:Null}" CornerRadius="{DynamicResource Corner}" Opacity="0.99" Margin="0,-50,0,0" Width="160" Height="100">
										<StackPanel Orientation="Horizontal" VerticalAlignment="Center" HorizontalAlignment="Center">

											<Image RenderOptions.BitmapScalingMode="Fant" Source="{ThemeFile 'Images/Trophy.png'}"
												   Height="35" Width="35" VerticalAlignment="Center" Opacity="1" HorizontalAlignment="Right" Margin="5,50,10,10">
												<Image.Style>
													<Style TargetType="Image">
														<Setter Property="Visibility" Value="Visible"/>
														<Style.Triggers>
															<DataTrigger Binding="{PluginSettings Plugin=SuccessStory, Path=Percent}" Value="100">
																<Setter Property="Visibility" Value="Collapsed"/>
															</DataTrigger>
														</Style.Triggers>
													</Style>
												</Image.Style>
												<Image.Effect>
													<DropShadowEffect ShadowDepth="2" Color="Black" BlurRadius="2" RenderingBias="Performance" Opacity="0.8"/>
												</Image.Effect>
											</Image>

											<Image x:Name="TrophyPlatine" Source="{ThemeFile 'Images/platinum.png'}"
													 RenderOptions.BitmapScalingMode="Fant" Height="35" Width="35"
													 VerticalAlignment="Center" Opacity="1" HorizontalAlignment="Right" Margin="5,50,10,10" >
												<Image.Style>
													<Style TargetType="Image">
														<Setter Property="Visibility" Value="Collapsed"/>
														<Style.Triggers>
															<DataTrigger Binding="{PluginSettings Plugin=SuccessStory, Path=Percent}" Value="100">
																<Setter Property="Visibility" Value="Visible"/>
															</DataTrigger>
														</Style.Triggers>
													</Style>
												</Image.Style>
												<Image.Effect>
													<DropShadowEffect ShadowDepth="2" Color="Black" BlurRadius="2" RenderingBias="Performance" Opacity="0.8"/>
												</Image.Effect>
											</Image>

											<TextBlock Text="{PluginSettings Plugin=SuccessStory, Path=Unlocked, FallbackValue='-'}"
													   Style="{DynamicResource TextBlockBoldBaseStyle}"
													   FontSize="26"
													   Margin="0,50,0,10" />
											<TextBlock Text="/"
													   Style="{DynamicResource TextBlockBoldBaseStyle}"
													   FontSize="26"
													   Margin="2,50,2,10" />
											<TextBlock Text="{PluginSettings Plugin=SuccessStory, Path=Total, FallbackValue='-'}"
													   Style="{DynamicResource TextBlockBoldBaseStyle}"
													   FontSize="26"
													   Margin="0,50,0,10" />
										</StackPanel>
										<Border.Effect>
											<DropShadowEffect ShadowDepth="2" Color="Black"
											RenderingBias="Performance" BlurRadius="5" Opacity="0.8"/>
										</Border.Effect>
									</Border>
								</Grid>

								<!-- Button -->
								<Grid Grid.Column="1" Grid.Row="0" HorizontalAlignment="Center">

									<Border Background="{DynamicResource OverlayMenu}" CornerRadius="{DynamicResource Corner}" Opacity="0.8" Margin="-20,0,-30,0" Width="Auto" Height="70">
										<Border.Style>
											<Style TargetType="Border">
												<Style.Triggers>
													<DataTrigger Binding="{Binding Path=IsChecked, ElementName=ChangeViewButton}" Value="False">
														<Setter Property="Visibility" Value="Collapsed"/>
													</DataTrigger>
													<DataTrigger Binding="{Binding ElementName=PART_ElemGameDetails, Path=Visibility}" Value="Visible">
														<Setter Property="Visibility" Value="Collapsed"/>
													</DataTrigger>
												</Style.Triggers>
											</Style>
										</Border.Style>
									</Border>

									<StackPanel Orientation="Horizontal">

										<ButtonEx x:Name="PART_ButtonMainMenu" VerticalAlignment="Center"
												  Margin="20,0,20,0" Height="40" Width="40" Style="{DynamicResource ButtonAvatar}" Grid.Column="2">
											<ButtonEx.Content>
												<Grid>
													<Border RenderOptions.BitmapScalingMode="Fant" CornerRadius="5" Height="45" Width="45" VerticalAlignment="Center" HorizontalAlignment="Center" ClipToBounds="True" >
														<Border.Style>
															<Style TargetType="Border">
																<Setter Property="Background" Value="{DynamicResource Avatar1}"/>
																<Style.Triggers>
																	<DataTrigger Binding="{PluginSettings Plugin=ThemeOptions, Path=Options[AvatarImageIndex]}" Value="1">
																		<Setter Property="Background" Value="{DynamicResource Avatar1}"/>
																	</DataTrigger>
																	<DataTrigger Binding="{PluginSettings Plugin=ThemeOptions, Path=Options[AvatarImageIndex]}" Value="2">
																		<Setter Property="Background" Value="{DynamicResource Avatar2}"/>
																	</DataTrigger>
																	<DataTrigger Binding="{PluginSettings Plugin=ThemeOptions, Path=Options[AvatarImageIndex]}" Value="3">
																		<Setter Property="Background" Value="{DynamicResource Avatar3}"/>
																	</DataTrigger>
																	<DataTrigger Binding="{PluginSettings Plugin=ThemeOptions, Path=Options[AvatarImageIndex]}" Value="4">
																		<Setter Property="Background" Value="{DynamicResource Avatar4}"/>
																	</DataTrigger>
																	<DataTrigger Binding="{PluginSettings Plugin=ThemeOptions, Path=Options[AvatarImageIndex]}" Value="5">
																		<Setter Property="Background" Value="{DynamicResource Avatar5}"/>
																	</DataTrigger>
																	<DataTrigger Binding="{PluginSettings Plugin=ThemeOptions, Path=Options[AvatarImageIndex]}" Value="6">
																		<Setter Property="Background" Value="{DynamicResource Avatar6}"/>
																	</DataTrigger>
																	<DataTrigger Binding="{PluginSettings Plugin=ThemeOptions, Path=Options[AvatarImageIndex]}" Value="7">
																		<Setter Property="Background" Value="{DynamicResource Avatar7}"/>
																	</DataTrigger>
																	<DataTrigger Binding="{PluginSettings Plugin=ThemeOptions, Path=Options[AvatarImageIndex]}" Value="8">
																		<Setter Property="Background" Value="{DynamicResource Avatar8}"/>
																	</DataTrigger>
																	<DataTrigger Binding="{PluginSettings Plugin=ThemeOptions, Path=Options[AvatarImageIndex]}" Value="9">
																		<Setter Property="Background" Value="{DynamicResource Avatar9}"/>
																	</DataTrigger>
																	<DataTrigger Binding="{PluginSettings Plugin=ThemeOptions, Path=Options[AvatarImageIndex]}" Value="10">
																		<Setter Property="Background" Value="{DynamicResource Avatar10}"/>
																	</DataTrigger>
																	<DataTrigger Binding="{PluginSettings Plugin=ThemeOptions, Path=Options[AvatarImageIndex]}" Value="11">
																		<Setter Property="Background" Value="{DynamicResource Avatar11}"/>
																	</DataTrigger>
																	<DataTrigger Binding="{PluginSettings Plugin=ThemeOptions, Path=Options[AvatarImageIndex]}" Value="12">
																		<Setter Property="Background" Value="{DynamicResource Avatar12}"/>
																	</DataTrigger>
																	<DataTrigger Binding="{PluginSettings Plugin=ThemeOptions, Path=Options[AvatarImageIndex]}" Value="13">
																		<Setter Property="Background" Value="{DynamicResource Avatar13}"/>
																	</DataTrigger>
																	<DataTrigger Binding="{PluginSettings Plugin=ThemeOptions, Path=Options[AvatarImageIndex]}" Value="14">
																		<Setter Property="Background" Value="{DynamicResource Avatar14}"/>
																	</DataTrigger>
																	<DataTrigger Binding="{PluginSettings Plugin=ThemeOptions, Path=Options[AvatarImageIndex]}" Value="15">
																		<Setter Property="Background" Value="{DynamicResource Avatar15}"/>
																	</DataTrigger>
																	<DataTrigger Binding="{PluginSettings Plugin=ThemeOptions, Path=Options[AvatarImageIndex]}" Value="16">
																		<Setter Property="Background" Value="{DynamicResource Avatar16}"/>
																	</DataTrigger>
																	<DataTrigger Binding="{PluginSettings Plugin=ThemeOptions, Path=Options[AvatarImageIndex]}" Value="17">
																		<Setter Property="Background" Value="{DynamicResource Avatar17}"/>
																	</DataTrigger>
																	<DataTrigger Binding="{PluginSettings Plugin=ThemeOptions, Path=Options[AvatarImageIndex]}" Value="18">
																		<Setter Property="Background" Value="{DynamicResource Avatar18}"/>
																	</DataTrigger>
																	<DataTrigger Binding="{PluginSettings Plugin=ThemeOptions, Path=Options[AvatarImageIndex]}" Value="19">
																		<Setter Property="Background" Value="{DynamicResource Avatar19}"/>
																	</DataTrigger>
																	<DataTrigger Binding="{PluginSettings Plugin=ThemeOptions, Path=Options[AvatarImageIndex]}" Value="20">
																		<Setter Property="Background" Value="{DynamicResource Avatar20}"/>
																	</DataTrigger>
																	<DataTrigger Binding="{PluginSettings Plugin=ThemeOptions, Path=Options[AvatarImageIndex]}" Value="21">
																		<Setter Property="Background" Value="{DynamicResource Avatar21}"/>
																	</DataTrigger>
																	<DataTrigger Binding="{PluginSettings Plugin=ThemeOptions, Path=Options[AvatarImageIndex]}" Value="22">
																		<Setter Property="Background" Value="{DynamicResource Avatar22}"/>
																	</DataTrigger>
																	<DataTrigger Binding="{PluginSettings Plugin=ThemeOptions, Path=Options[AvatarImageIndex]}" Value="23">
																		<Setter Property="Background" Value="{DynamicResource Avatar23}"/>
																	</DataTrigger>
																	<DataTrigger Binding="{PluginSettings Plugin=ThemeOptions, Path=Options[AvatarImageIndex]}" Value="24">
																		<Setter Property="Background" Value="{DynamicResource Avatar24}"/>
																	</DataTrigger>
																	<DataTrigger Binding="{PluginSettings Plugin=ThemeOptions, Path=Options[AvatarImageIndex]}" Value="25">
																		<Setter Property="Background" Value="{DynamicResource Avatar25}"/>
																	</DataTrigger>
																	<DataTrigger Binding="{PluginSettings Plugin=ThemeOptions, Path=Options[AvatarImageIndex]}" Value="26">
																		<Setter Property="Background" Value="{DynamicResource Avatar26}"/>
																	</DataTrigger>
																	<DataTrigger Binding="{PluginSettings Plugin=ThemeOptions, Path=Options[AvatarImageIndex]}" Value="27">
																		<Setter Property="Background" Value="{DynamicResource Avatar27}"/>
																	</DataTrigger>
																	<DataTrigger Binding="{PluginSettings Plugin=ThemeOptions, Path=Options[AvatarImageIndex]}" Value="28">
																		<Setter Property="Background" Value="{DynamicResource Avatar28}"/>
																	</DataTrigger>
																	<DataTrigger Binding="{PluginSettings Plugin=ThemeOptions, Path=Options[AvatarImageIndex]}" Value="29">
																		<Setter Property="Background" Value="{DynamicResource Avatar29}"/>
																	</DataTrigger>
																	<DataTrigger Binding="{PluginSettings Plugin=ThemeOptions, Path=Options[AvatarImageIndex]}" Value="30">
																		<Setter Property="Background" Value="{DynamicResource Avatar30}"/>
																	</DataTrigger>
																	<DataTrigger Binding="{PluginSettings Plugin=ThemeOptions, Path=Options[AvatarImageIndex]}" Value="31">
																		<Setter Property="Background" Value="{DynamicResource Avatar31}"/>
																	</DataTrigger>
																	<DataTrigger Binding="{PluginSettings Plugin=ThemeOptions, Path=Options[AvatarImageIndex]}" Value="32">
																		<Setter Property="Background" Value="{DynamicResource Avatar32}"/>
																	</DataTrigger>
																	<DataTrigger Binding="{PluginSettings Plugin=ThemeOptions, Path=Options[AvatarImageIndex]}" Value="33">
																		<Setter Property="Background" Value="{DynamicResource Avatar33}"/>
																	</DataTrigger>
																	<DataTrigger Binding="{PluginSettings Plugin=ThemeOptions, Path=Options[AvatarImageIndex]}" Value="34">
																		<Setter Property="Background" Value="{DynamicResource Avatar34}"/>
																	</DataTrigger>
																	<DataTrigger Binding="{PluginSettings Plugin=ThemeOptions, Path=Options[AvatarImageIndex]}" Value="35">
																		<Setter Property="Background" Value="{DynamicResource Avatar35}"/>
																	</DataTrigger>
																	<DataTrigger Binding="{PluginSettings Plugin=ThemeOptions, Path=Options[AvatarImageIndex]}" Value="36">
																		<Setter Property="Background" Value="{DynamicResource Avatar36}"/>
																	</DataTrigger>
																	<DataTrigger Binding="{PluginSettings Plugin=ThemeOptions, Path=Options[AvatarImageIndex]}" Value="37">
																		<Setter Property="Background" Value="{DynamicResource Avatar37}"/>
																	</DataTrigger>
																	<DataTrigger Binding="{PluginSettings Plugin=ThemeOptions, Path=Options[AvatarImageIndex]}" Value="38">
																		<Setter Property="Background" Value="{DynamicResource Avatar38}"/>
																	</DataTrigger>
																	<DataTrigger Binding="{PluginSettings Plugin=ThemeOptions, Path=IsInstalled}" Value="False">
																		<Setter Property="Panel.ZIndex" Value="100" />
																		<Setter Property="Visibility" Value="Visible"/>
																		<Setter Property="Grid.Row" Value="0"/>
																		<Setter Property="Grid.Column" Value="1"/>
																		<Setter Property="Grid.RowSpan" Value="1"/>
																		<Setter Property="Grid.ColumnSpan" Value="2"/>
																		<Setter Property="Height" Value="60"/>
																		<Setter Property="Width" Value="60"/>
																		<Setter Property="VerticalAlignment" Value="Bottom"/>
																		<Setter Property="HorizontalAlignment" Value="Center"/>
																	</DataTrigger>
																</Style.Triggers>
															</Style>
														</Border.Style>
													</Border>
												</Grid>
											</ButtonEx.Content>
										</ButtonEx>

										<ButtonEx x:Name="PART_ButtonProgramUpdate" VerticalAlignment="Center"
												Margin="20,0,20,0" Height="40" Width="40" Style="{DynamicResource ButtonAvatar}" Grid.Column="1">
											<ButtonEx.Content>
												<TextBlock Text="&#xef08;" FontFamily="{StaticResource FontIcoFont}"
														   HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="White"
														   FontSize="32" />
											</ButtonEx.Content>
										</ButtonEx>

										<CheckBoxEx x:Name="ControlCenterButton" Focusable="True" VerticalAlignment="Center" Margin="20,0,20,0" Height="40" ToolTip="{DynamicResource LOCCompletionStatusOnGameCover}"
														Width="40" Style="{DynamicResource ControlCenterStyle}" Grid.Column="3">
											<CheckBoxEx.Content>
												<Grid>
													<Border CornerRadius="5" Height="40" Width="40" VerticalAlignment="Center"
															HorizontalAlignment="Center" ClipToBounds="True">
													</Border>
												</Grid>
											</CheckBoxEx.Content>
										</CheckBoxEx>

										<CheckBoxEx x:Name="ChangeViewButton" Margin="20,0,20,0" Height="40" Width="40"
													IsChecked="{Settings Fullscreen.HorizontalLayout, Mode=TwoWay}"
													Style="{DynamicResource ChangeViewButton}" Grid.Column="4" />

										<ButtonEx x:Name="PART_ButtonNotifications" VerticalAlignment="Center"
												  Margin="20,0,20,0" Height="40" Width="40" Focusable="True" Grid.Column="5" HorizontalAlignment="Center" >
											<Button.Content>
												<Grid>
													<TextBlock Text="&#xeea3;" FontFamily="{StaticResource FontIcoFont}"
															   HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="34" Foreground="White" />
													<TextBlock Text="&#xec3e;" FontFamily="{StaticResource FontIcoFont}" Foreground="White" HorizontalAlignment="Right" VerticalAlignment="Bottom" FontSize="12" Margin="20,0,-4,24" />

												</Grid>
											</Button.Content>
											<Button.Style>
												<Style TargetType="Button" BasedOn="{StaticResource ButtonAvatar}">
													<Style.Triggers>
														<DataTrigger Binding="{Api Notifications.Count}" Value="0">
															<Setter Property="Visibility" Value="Collapsed"/>
														</DataTrigger>
													</Style.Triggers>
												</Style>
											</Button.Style>
										</ButtonEx>

										<CheckBoxEx x:Name="ButtonPower" Focusable="True" VerticalAlignment="Center" Margin="20,0,20,0" Height="40"	Width="40" Style="{DynamicResource PowerButtonMain}" Grid.Column="6"  IsChecked="True">
											<CheckBoxEx.Content>
												<Grid>
													<Border CornerRadius="5" Height="40" Width="40" VerticalAlignment="Center"
															HorizontalAlignment="Center" ClipToBounds="True">
													</Border>
												</Grid>
											</CheckBoxEx.Content>
										</CheckBoxEx>

										<StackPanel.Effect>
											<DropShadowEffect ShadowDepth="2" Color="Black" BlurRadius="3" RenderingBias="Performance" Opacity="0.8"/>
										</StackPanel.Effect>
									</StackPanel>

									<Grid.RenderTransform>
										<TransformGroup>
											<TranslateTransform x:Name="TopBarShift" Y="0"/>
											<ScaleTransform x:Name="TopBarScale" ScaleX="1" ScaleY="1"/>
										</TransformGroup>
									</Grid.RenderTransform>

									<Grid.Style>
										<Style TargetType="Grid">
											<Setter Property="Grid.Row" Value="0"/>
											<Setter Property="Grid.Column" Value="1"/>
											<Setter Property="Grid.RowSpan" Value="1"/>
											<Setter Property="Grid.ColumnSpan" Value="2"/>
											<Setter Property="Effect">
												<Setter.Value>
													<DropShadowEffect ShadowDepth="2" BlurRadius="0"  Opacity="0.5" Color="#FF000000"/>
												</Setter.Value>
											</Setter>
											<Style.Triggers>
												<!-- Animation quand le focus quitte la barre -->
												<MultiDataTrigger>
													<MultiDataTrigger.Conditions>
														<Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsKeyboardFocusWithin}" Value="False"/>
														<Condition Binding="{Binding Path=IsChecked, ElementName=ChangeViewButton}" Value="True"/>
														<Condition Binding="{PluginSettings Plugin=ThemeOptions, Path=Options[PerformanceMode]}" Value="False"/>
													</MultiDataTrigger.Conditions>
													<MultiDataTrigger.EnterActions>
														<BeginStoryboard>
															<Storyboard>
																<DoubleAnimation Storyboard.TargetProperty="(RenderTransform).(TransformGroup.Children)[0].(TranslateTransform.Y)"
																				 To="-200" Duration="0:0:0.35">
																	<DoubleAnimation.EasingFunction>
																		<CubicEase EasingMode="EaseInOut"/>
																	</DoubleAnimation.EasingFunction>
																</DoubleAnimation>
																<DoubleAnimation Storyboard.TargetProperty="Opacity"
																				 To="0" Duration="0:0:0.20"/>
															</Storyboard>
														</BeginStoryboard>
													</MultiDataTrigger.EnterActions>
													<!-- Animation quand le focus revient -->
													<MultiDataTrigger.ExitActions>
														<BeginStoryboard>
															<Storyboard>
																<DoubleAnimation Storyboard.TargetProperty="(RenderTransform).(TransformGroup.Children)[0].(TranslateTransform.Y)"
																				From="-230" To="0" Duration="0:0:0.5">
																	<DoubleAnimation.EasingFunction>
																		<BackEase Amplitude="0.5" EasingMode="EaseOut"/>
																	</DoubleAnimation.EasingFunction>
																</DoubleAnimation>

																<DoubleAnimation Storyboard.TargetProperty="(RenderTransform).(TransformGroup.Children)[1].(ScaleTransform.ScaleX)"
																				 From="0.96" To="1" Duration="0:0:0.4" BeginTime="0:0:0.05"/>

																<DoubleAnimation Storyboard.TargetProperty="(RenderTransform).(TransformGroup.Children)[1].(ScaleTransform.ScaleY)"
																				 From="0.96" To="1" Duration="0:0:0.4" BeginTime="0:0:0.05"/>

																<DoubleAnimation Storyboard.TargetProperty="Opacity"
																				 From="0" To="1" Duration="0:0:0.3" BeginTime="0:0:0.1"/>
															</Storyboard>
														</BeginStoryboard>
													</MultiDataTrigger.ExitActions>
												</MultiDataTrigger>

												<!-- Si option "toujours visible" activée -->
												<MultiDataTrigger>
													<MultiDataTrigger.Conditions>
														<Condition Binding="{PluginSettings Plugin=ThemeOptions, Path=Options[TopButtonAlwaysVisible]}" Value="True"/>
														<Condition Binding="{PluginSettings Plugin=ThemeOptions, Path=Options[PerformanceMode]}" Value="False"/>
													</MultiDataTrigger.Conditions>
													<MultiDataTrigger.EnterActions>
														<BeginStoryboard>
															<Storyboard>
																<DoubleAnimation Storyboard.TargetProperty="(RenderTransform).(TransformGroup.Children)[0].(TranslateTransform.Y)"
																				 To="0" Duration="0:0:0"/>
																<DoubleAnimation Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0"/>
															</Storyboard>
														</BeginStoryboard>
													</MultiDataTrigger.EnterActions>
													<MultiDataTrigger.ExitActions>
														<BeginStoryboard>
															<Storyboard>
																<DoubleAnimation Storyboard.TargetProperty="(RenderTransform).(TransformGroup.Children)[0].(TranslateTransform.Y)"
																				 To="0" Duration="0:0:0"/>
																<DoubleAnimation Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0"/>
															</Storyboard>
														</BeginStoryboard>
													</MultiDataTrigger.ExitActions>
												</MultiDataTrigger>

												<MultiDataTrigger>
													<MultiDataTrigger.Conditions>
														<Condition Binding="{PluginSettings Plugin=ThemeOptions, Path=Options[PerformanceMode]}" Value="True"/>
													</MultiDataTrigger.Conditions>
													<MultiDataTrigger.EnterActions>
														<BeginStoryboard>
															<Storyboard>
																<DoubleAnimation Storyboard.TargetProperty="(RenderTransform).(TransformGroup.Children)[0].(TranslateTransform.Y)"
																				 To="0" Duration="0:0:0"/>
																<DoubleAnimation Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0"/>
															</Storyboard>
														</BeginStoryboard>
													</MultiDataTrigger.EnterActions>
													<MultiDataTrigger.ExitActions>
														<BeginStoryboard>
															<Storyboard>
																<DoubleAnimation Storyboard.TargetProperty="(RenderTransform).(TransformGroup.Children)[0].(TranslateTransform.Y)"
																				 To="0" Duration="0:0:0"/>
																<DoubleAnimation Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0"/>
															</Storyboard>
														</BeginStoryboard>
													</MultiDataTrigger.ExitActions>
												</MultiDataTrigger>

												<!-- Cacher si accueil + wrong ne sont pas cochés -->
												<MultiDataTrigger>
													<MultiDataTrigger.Conditions>
														<Condition Binding="{Binding ElementName=Acceuil, Path=IsChecked}" Value="False" />
														<Condition Binding="{Binding ElementName=Wrong, Path=IsChecked}" Value="False" />
													</MultiDataTrigger.Conditions>
													<MultiDataTrigger.Setters>
														<Setter Property="Visibility" Value="Collapsed"/>
													</MultiDataTrigger.Setters>
												</MultiDataTrigger>

												<!-- Afficher si Accueil ou pas -->
												<DataTrigger Binding="{Binding Source={StaticResource AcceuilOrNot}}" Value="False">
													<Setter Property="Visibility" Value="Visible"/>
												</DataTrigger>

												<!-- Cacher si ControlCenter est visible -->
												<DataTrigger Binding="{Binding ElementName=ControlCenter, Path=Visibility}" Value="Visible">
													<Setter Property="Visibility" Value="Collapsed"/>
												</DataTrigger>

											</Style.Triggers>
										</Style>
									</Grid.Style>
								</Grid>
							</Grid>

							<!--BackgroundControlCenter-->
							<Grid x:Name="BackgroundControlCenter" FocusVisualStyle="{x:Null}"
									  Width="{Binding ElementName=PART_ViewHost, Path=ActualWidth}"
									  Height="{Binding ElementName=PART_ViewHost, Path=ActualHeight}" >
								<Grid.Style>
									<Style TargetType="Grid">
										<Setter Property="Background" Value="#40000000"/>
										<Setter Property="Opacity" Value="1"/>
										<Setter Property="VerticalAlignment" Value="Top"/>
										<Setter Property="HorizontalAlignment" Value="Center"/>
										<Setter Property="Grid.Row" Value="0"/>
										<Setter Property="Grid.RowSpan" Value="5"/>
										<Setter Property="Grid.ColumnSpan" Value="5"/>
										<Setter Property="Visibility" Value="Collapsed"/>
										<Style.Triggers>
											<DataTrigger Binding="{Binding ElementName=ControlCenter, Path=Visibility}" Value="Visible">
												<Setter Property="Visibility" Value="Visible"/>
											</DataTrigger>
										</Style.Triggers>
									</Style>
								</Grid.Style>
								<Image x:Name="NoBackgroundImage1" Source="{ThemeFile 'Images/ShadowBackground/ControlCenter.png'}" Stretch="UniformToFill" RenderOptions.BitmapScalingMode="Fant" >
									<Image.Style>
										<Style TargetType="Image">
											<Setter Property="Margin" Value="0,-200,0,0"/>
											<Style.Triggers>
												<!-- Trigger pour la propriété IsChecked -->
												<DataTrigger Binding="{Binding ElementName=ControlCenterButton, Path=IsChecked}" Value="True">
													<Setter Property="Visibility" Value="Visible"/>
													<DataTrigger.EnterActions>
														<BeginStoryboard>
															<Storyboard>
																<!-- Animation pour faire descendre la marge -->
																<ThicknessAnimation Storyboard.TargetProperty="Margin" Duration="0:0:0.3" From="0,-200,0,0" To="0,0,0,0">
																	<ThicknessAnimation.EasingFunction>
																		<CubicEase EasingMode="EaseOut"/>
																	</ThicknessAnimation.EasingFunction>
																</ThicknessAnimation>
															</Storyboard>
														</BeginStoryboard>
													</DataTrigger.EnterActions>
													<DataTrigger.ExitActions>
														<BeginStoryboard>
															<Storyboard>
																<!-- Animation pour restaurer la marge -->
																<ThicknessAnimation Storyboard.TargetProperty="Margin" Duration="0:0:0.3" To="0,-200,0,0">
																	<ThicknessAnimation.EasingFunction>
																		<CubicEase EasingMode="EaseOut"/>
																	</ThicknessAnimation.EasingFunction>
																</ThicknessAnimation>
															</Storyboard>
														</BeginStoryboard>
													</DataTrigger.ExitActions>
												</DataTrigger>
											</Style.Triggers>
										</Style>
									</Image.Style>
								</Image>
							</Grid>

							<!--BackgroundControlCenter2-->
							<Grid x:Name="BackgroundOptionCenter" FocusVisualStyle="{x:Null}"
								  Width="{Binding ElementName=PART_ViewHost, Path=ActualWidth}"
								  Height="{Binding ElementName=PART_ViewHost, Path=ActualHeight}" >
								<Grid.Style>
									<Style TargetType="Grid">
										<Setter Property="Background" Value="#60000000"/>
										<Setter Property="Opacity" Value="1"/>
										<Setter Property="VerticalAlignment" Value="Top"/>
										<Setter Property="HorizontalAlignment" Value="Center"/>
										<Setter Property="Grid.Row" Value="0"/>
										<Setter Property="Grid.RowSpan" Value="5"/>
										<Setter Property="Grid.ColumnSpan" Value="5"/>
										<Setter Property="Visibility" Value="Collapsed"/>
										<Style.Triggers>
											<MultiDataTrigger>
												<MultiDataTrigger.Conditions>
													<Condition Binding="{Binding ElementName=Power, Path=Visibility}" Value="Visible"/>
													<Condition Binding="{Binding ElementName=ChangeViewButton, Path=IsChecked}" Value="False"/>
												</MultiDataTrigger.Conditions>
												<MultiDataTrigger.Setters>
													<Setter Property="Visibility" Value="Visible"/>
													<Setter Property="Panel.ZIndex" Value="1"/>
												</MultiDataTrigger.Setters>
												<MultiDataTrigger.EnterActions>
													<BeginStoryboard>
														<Storyboard>
															<!-- Animation pour faire descendre la marge -->
															<ThicknessAnimation Storyboard.TargetProperty="Margin" Duration="0:0:0.3" From="0,-200,0,0" To="0,0,0,0">
																<ThicknessAnimation.EasingFunction>
																	<CubicEase EasingMode="EaseOut"/>
																</ThicknessAnimation.EasingFunction>
															</ThicknessAnimation>
														</Storyboard>
													</BeginStoryboard>
												</MultiDataTrigger.EnterActions>
												<MultiDataTrigger.ExitActions>
													<BeginStoryboard>
														<Storyboard>
															<!-- Animation pour restaurer la marge -->
															<ThicknessAnimation Storyboard.TargetProperty="Margin" Duration="0:0:0.3" To="0,-200,0,0">
																<ThicknessAnimation.EasingFunction>
																	<CubicEase EasingMode="EaseOut"/>
																</ThicknessAnimation.EasingFunction>
															</ThicknessAnimation>
														</Storyboard>
													</BeginStoryboard>
												</MultiDataTrigger.ExitActions>
											</MultiDataTrigger>

											<DataTrigger Binding="{Binding ElementName=Power, Path=Visibility}" Value="Visible">
												<Setter Property="Visibility" Value="Visible"/>
												<DataTrigger.EnterActions>
													<BeginStoryboard>
														<Storyboard>
															<!-- Animation pour faire descendre la marge -->
															<ThicknessAnimation Storyboard.TargetProperty="Margin" Duration="0:0:0.3" From="0,-200,0,0" To="0,0,0,0">
																<ThicknessAnimation.EasingFunction>
																	<CubicEase EasingMode="EaseOut"/>
																</ThicknessAnimation.EasingFunction>
															</ThicknessAnimation>
														</Storyboard>
													</BeginStoryboard>
												</DataTrigger.EnterActions>
												<DataTrigger.ExitActions>
													<BeginStoryboard>
														<Storyboard>
															<!-- Animation pour restaurer la marge -->
															<ThicknessAnimation Storyboard.TargetProperty="Margin" Duration="0:0:0.3" To="0,-200,0,0">
																<ThicknessAnimation.EasingFunction>
																	<CubicEase EasingMode="EaseOut"/>
																</ThicknessAnimation.EasingFunction>
															</ThicknessAnimation>
														</Storyboard>
													</BeginStoryboard>
												</DataTrigger.ExitActions>
											</DataTrigger>

											<DataTrigger Binding="{Binding ElementName=Volume, Path=Visibility}" Value="Visible">
												<Setter Property="Visibility" Value="Visible"/>
												<DataTrigger.EnterActions>
													<BeginStoryboard>
														<Storyboard>
															<!-- Animation pour faire descendre la marge -->
															<ThicknessAnimation Storyboard.TargetProperty="Margin" Duration="0:0:0.3" From="0,-200,0,0" To="0,0,0,0">
																<ThicknessAnimation.EasingFunction>
																	<CubicEase EasingMode="EaseOut"/>
																</ThicknessAnimation.EasingFunction>
															</ThicknessAnimation>
														</Storyboard>
													</BeginStoryboard>
												</DataTrigger.EnterActions>
												<DataTrigger.ExitActions>
													<BeginStoryboard>
														<Storyboard>
															<!-- Animation pour restaurer la marge -->
															<ThicknessAnimation Storyboard.TargetProperty="Margin" Duration="0:0:0.3" To="0,-200,0,0">
																<ThicknessAnimation.EasingFunction>
																	<CubicEase EasingMode="EaseOut"/>
																</ThicknessAnimation.EasingFunction>
															</ThicknessAnimation>
														</Storyboard>
													</BeginStoryboard>
												</DataTrigger.ExitActions>
											</DataTrigger>

											<DataTrigger Binding="{Binding ElementName=ThemeOpt, Path=Visibility}" Value="Visible">
												<Setter Property="Visibility" Value="Visible"/>
												<DataTrigger.EnterActions>
													<BeginStoryboard>
														<Storyboard>
															<!-- Animation pour faire descendre la marge -->
															<ThicknessAnimation Storyboard.TargetProperty="Margin" Duration="0:0:0.3" From="0,-200,0,0" To="0,0,0,0">
																<ThicknessAnimation.EasingFunction>
																	<CubicEase EasingMode="EaseOut"/>
																</ThicknessAnimation.EasingFunction>
															</ThicknessAnimation>
														</Storyboard>
													</BeginStoryboard>
												</DataTrigger.EnterActions>
												<DataTrigger.ExitActions>
													<BeginStoryboard>
														<Storyboard>
															<!-- Animation pour restaurer la marge -->
															<ThicknessAnimation Storyboard.TargetProperty="Margin" Duration="0:0:0.3" To="0,-200,0,0">
																<ThicknessAnimation.EasingFunction>
																	<CubicEase EasingMode="EaseOut"/>
																</ThicknessAnimation.EasingFunction>
															</ThicknessAnimation>
														</Storyboard>
													</BeginStoryboard>
												</DataTrigger.ExitActions>
											</DataTrigger>

											<DataTrigger Binding="{Binding ElementName=TrailerOption, Path=Visibility}" Value="Visible">
												<Setter Property="Visibility" Value="Visible"/>
												<DataTrigger.EnterActions>
													<BeginStoryboard>
														<Storyboard>
															<!-- Animation pour faire descendre la marge -->
															<ThicknessAnimation Storyboard.TargetProperty="Margin" Duration="0:0:0.3" From="0,-200,0,0" To="0,0,0,0">
																<ThicknessAnimation.EasingFunction>
																	<CubicEase EasingMode="EaseOut"/>
																</ThicknessAnimation.EasingFunction>
															</ThicknessAnimation>
														</Storyboard>
													</BeginStoryboard>
												</DataTrigger.EnterActions>
												<DataTrigger.ExitActions>
													<BeginStoryboard>
														<Storyboard>
															<!-- Animation pour restaurer la marge -->
															<ThicknessAnimation Storyboard.TargetProperty="Margin" Duration="0:0:0.3" To="0,-200,0,0">
																<ThicknessAnimation.EasingFunction>
																	<CubicEase EasingMode="EaseOut"/>
																</ThicknessAnimation.EasingFunction>
															</ThicknessAnimation>
														</Storyboard>
													</BeginStoryboard>
												</DataTrigger.ExitActions>
											</DataTrigger>

											<DataTrigger Binding="{Binding ElementName=LayoutOption, Path=Visibility}" Value="Visible">
												<Setter Property="Visibility" Value="Visible"/>
												<DataTrigger.EnterActions>
													<BeginStoryboard>
														<Storyboard>
															<!-- Animation pour faire descendre la marge -->
															<ThicknessAnimation Storyboard.TargetProperty="Margin" Duration="0:0:0.3" From="0,-200,0,0" To="0,0,0,0">
																<ThicknessAnimation.EasingFunction>
																	<CubicEase EasingMode="EaseOut"/>
																</ThicknessAnimation.EasingFunction>
															</ThicknessAnimation>
														</Storyboard>
													</BeginStoryboard>
												</DataTrigger.EnterActions>
												<DataTrigger.ExitActions>
													<BeginStoryboard>
														<Storyboard>
															<!-- Animation pour restaurer la marge -->
															<ThicknessAnimation Storyboard.TargetProperty="Margin" Duration="0:0:0.3" To="0,-200,0,0">
																<ThicknessAnimation.EasingFunction>
																	<CubicEase EasingMode="EaseOut"/>
																</ThicknessAnimation.EasingFunction>
															</ThicknessAnimation>
														</Storyboard>
													</BeginStoryboard>
												</DataTrigger.ExitActions>
											</DataTrigger>

											<DataTrigger Binding="{Binding ElementName=DetailsThemeOption, Path=Visibility}" Value="Visible">
												<Setter Property="Visibility" Value="Visible"/>
												<DataTrigger.EnterActions>
													<BeginStoryboard>
														<Storyboard>
															<!-- Animation pour faire descendre la marge -->
															<ThicknessAnimation Storyboard.TargetProperty="Margin" Duration="0:0:0.3" From="0,-200,0,0" To="0,0,0,0">
																<ThicknessAnimation.EasingFunction>
																	<CubicEase EasingMode="EaseOut"/>
																</ThicknessAnimation.EasingFunction>
															</ThicknessAnimation>
														</Storyboard>
													</BeginStoryboard>
												</DataTrigger.EnterActions>
												<DataTrigger.ExitActions>
													<BeginStoryboard>
														<Storyboard>
															<!-- Animation pour restaurer la marge -->
															<ThicknessAnimation Storyboard.TargetProperty="Margin" Duration="0:0:0.3" To="0,-200,0,0">
																<ThicknessAnimation.EasingFunction>
																	<CubicEase EasingMode="EaseOut"/>
																</ThicknessAnimation.EasingFunction>
															</ThicknessAnimation>
														</Storyboard>
													</BeginStoryboard>
												</DataTrigger.ExitActions>
											</DataTrigger>

										</Style.Triggers>
									</Style>
								</Grid.Style>
								<Image x:Name="NoBackgroundImage2" Source="{ThemeFile 'Images/ShadowBackground/ControlCenter2.png'}" Stretch="UniformToFill" RenderOptions.BitmapScalingMode="Fant" >
									<Image.Style>
										<Style TargetType="Image">
											<Setter Property="Margin" Value="0,-200,0,0"/>
											<Style.Triggers>


											</Style.Triggers>
										</Style>
									</Image.Style>
								</Image>
							</Grid>


							<!--Wallpaper Grid-->

							<Grid x:Name="BackgroundImageGrid" FocusVisualStyle="{x:Null}" Panel.ZIndex="-46" RenderTransformOrigin="0.5,1">
								<Grid.RenderTransform>
									<ScaleTransform x:Name="BgZoomTransform" ScaleX="1" ScaleY="1"/>
								</Grid.RenderTransform>
								<Grid.Effect>
									<BlurEffect x:Name="BackgroundBlur" Radius="0"/>
								</Grid.Effect>

								<Grid.Style>
									<Style TargetType="Grid">
										<Setter Property="Visibility" Value="Visible"/>
										<Setter Property="Opacity" Value="1"/>
										<Setter Property="VerticalAlignment" Value="Top"/>
										<Setter Property="HorizontalAlignment" Value="Center"/>
										<Setter Property="Grid.Row" Value="0"/>
										<Setter Property="Grid.RowSpan" Value="4"/>
										<Setter Property="Grid.ColumnSpan" Value="3"/>
										<Setter Property="Margin" Value="0,0,0,-90"/>
										<Style.Triggers>
											<DataTrigger Binding="{Settings Fullscreen.EnableMainBackgroundImage}" Value="False">
												<Setter Property="Visibility" Value="Collapsed"/>
											</DataTrigger>
											<DataTrigger Binding="{Binding ElementName=PART_ImageBackground, Path=Source}" Value="{x:Null}">
												<Setter Property="Visibility" Value="Collapsed"/>
											</DataTrigger>
											<DataTrigger Binding="{Binding ElementName=BackgroundChanger, Path=Visibility}" Value="Visible">
												<Setter Property="Visibility" Value="Collapsed"/>
											</DataTrigger>
											<MultiDataTrigger>
												<MultiDataTrigger.Conditions>
													<Condition Binding="{Binding ElementName=BottomBar, Path=IsKeyboardFocusWithin}" Value="True"/>
													<Condition Binding="{PluginSettings Plugin=ThemeOptions, Path=Options[BottomBarVisible]}" Value="True"/>
													<Condition Binding="{PluginSettings Plugin=ThemeOptions, Path=Options[PerformanceMode]}" Value="False"/>
												</MultiDataTrigger.Conditions>
												<!-- Quand on va sur la barre du bas -->
												<MultiDataTrigger.EnterActions>
													<BeginStoryboard>
														<Storyboard>
															<ThicknessAnimation Storyboard.TargetProperty="Margin" From="0,0,0,-90" To="0,0,0,0" Duration="0:0:0.45" AccelerationRatio="0.3" DecelerationRatio="0.7"/>
														</Storyboard>
													</BeginStoryboard>
												</MultiDataTrigger.EnterActions>
												<MultiDataTrigger.ExitActions>
													<BeginStoryboard>
														<Storyboard>
															<ThicknessAnimation Storyboard.TargetProperty="Margin" From="0,0,0,0" To="0,0,0,-90" Duration="0:0:0.55" AccelerationRatio="0.2" DecelerationRatio="0.6"/>
														</Storyboard>
													</BeginStoryboard>
												</MultiDataTrigger.ExitActions>
											</MultiDataTrigger>

											<MultiDataTrigger>
												<MultiDataTrigger.Conditions>
													<Condition Binding="{Binding ElementName=BottomBar, Path=IsKeyboardFocusWithin}" Value="True"/>
													<Condition Binding="{PluginSettings Plugin=ThemeOptions, Path=Options[BottomBarVisible]}" Value="True"/>
													<Condition Binding="{PluginSettings Plugin=ThemeOptions, Path=Options[CinematicFocusEffect]}" Value="True"/>
													<Condition Binding="{PluginSettings Plugin=ThemeOptions, Path=Options[PerformanceMode]}" Value="False"/>
												</MultiDataTrigger.Conditions>
												<MultiDataTrigger.EnterActions>
													<BeginStoryboard>
														<Storyboard>
															<DoubleAnimation Storyboard.TargetProperty="Opacity" To="0.9" Duration="0:0:0.6" AccelerationRatio="0.2" DecelerationRatio="0.8"/>
															<DoubleAnimation Storyboard.TargetProperty="(RenderTransform).(ScaleTransform.ScaleX)" To="1.05" Duration="0:0:0.6" AccelerationRatio="0.2" DecelerationRatio="0.8"/>
															<DoubleAnimation Storyboard.TargetProperty="(RenderTransform).(ScaleTransform.ScaleY)" To="1.05" Duration="0:0:0.6" AccelerationRatio="0.2" DecelerationRatio="0.8"/>
															<DoubleAnimation Storyboard.TargetProperty="(Effect).(BlurEffect.Radius)" To="5" Duration="0:0:0.6" AccelerationRatio="0.2" DecelerationRatio="0.8"/>
														</Storyboard>
													</BeginStoryboard>
												</MultiDataTrigger.EnterActions>
												<MultiDataTrigger.ExitActions>
													<BeginStoryboard>
														<Storyboard>
															<DoubleAnimation Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.8" AccelerationRatio="0.4" DecelerationRatio="0.6"/>
															<DoubleAnimation Storyboard.TargetProperty="(RenderTransform).(ScaleTransform.ScaleX)" To="1" Duration="0:0:0.8" AccelerationRatio="0.2" DecelerationRatio="0.8"/>
															<DoubleAnimation Storyboard.TargetProperty="(RenderTransform).(ScaleTransform.ScaleY)" To="1" Duration="0:0:0.8" AccelerationRatio="0.2" DecelerationRatio="0.8" />
															<DoubleAnimation Storyboard.TargetProperty="(Effect).(BlurEffect.Radius)" To="0" Duration="0:0:0.8" AccelerationRatio="0.4" DecelerationRatio="0.6"/>
														</Storyboard>
													</BeginStoryboard>
												</MultiDataTrigger.ExitActions>
											</MultiDataTrigger>

											<MultiDataTrigger>
												<MultiDataTrigger.Conditions>
													<Condition Binding="{PluginSettings Plugin=ThemeOptions, Path=Options[BottomBarVisible]}" Value="False"/>
												</MultiDataTrigger.Conditions>
												<Setter Property="Margin" Value="0,0,0,0"/>
											</MultiDataTrigger>

											<!-- NoBarMode -->
											<MultiDataTrigger>
												<MultiDataTrigger.Conditions>
													<Condition Binding="{Binding ElementName=PART_ElemGameDetails, Path=Visibility}" Value="Collapsed"/>
													<Condition Binding="{PluginSettings Plugin=ThemeOptions, Path=Options[NoBarMode]}" Value="False"/>
													<Condition Binding="{PluginSettings Plugin=ThemeOptions, Path=Options[BottomBarVisible]}" Value="True"/>
												</MultiDataTrigger.Conditions>
												<Setter Property="Margin" Value="0,0,0,-90"/>
											</MultiDataTrigger>

											<MultiDataTrigger>
												<MultiDataTrigger.Conditions>
													<Condition Binding="{Binding ElementName=PART_ElemGameDetails, Path=Visibility}" Value="Collapsed"/>
													<Condition Binding="{PluginSettings Plugin=ThemeOptions, Path=Options[PerformanceMode]}" Value="True"/>
												</MultiDataTrigger.Conditions>
												<Setter Property="Margin" Value="0,0,0,0"/>
											</MultiDataTrigger>


											<!-- View Change -->
											<MultiDataTrigger>
												<MultiDataTrigger.Conditions>
													<Condition Binding="{Binding ElementName=ChangeViewButton, Path=IsChecked}" Value="False"/>
												</MultiDataTrigger.Conditions>
												<Setter Property="Visibility" Value="Collapsed"/>
											</MultiDataTrigger>
											<DataTrigger Binding="{Binding ElementName=ChangeViewButton, Path=IsChecked}" Value="True">
												<Setter Property="Visibility" Value="Visible"/>
											</DataTrigger>

										</Style.Triggers>
									</Style>
								</Grid.Style>

								<!--No Background Changer-->

								<FadeImage x:Name="PART_ImageBackground" RenderOptions.BitmapScalingMode="Fant" RenderTransformOrigin="0.5,1" >
									<FadeImage.Style>
										<Style TargetType="FadeImage" >
											<Setter Property="Visibility" Value="Visible"/>
											<Setter Property="Stretch" Value="UniformToFill"/>
											<Setter Property="HorizontalAlignment" Value="Center"/>
											<Setter Property="VerticalAlignment" Value="Top"/>
											<Setter Property="RenderTransform">
												<Setter.Value>
													<ScaleTransform ScaleX="1" ScaleY="1" />
												</Setter.Value>
											</Setter>
											<Style.Triggers>
												<DataTrigger Binding="{Binding ElementName=ImageBackgroundChanger, Path=Visibility}" Value="Visible">
													<Setter Property="Visibility" Value="Collapsed"/>
												</DataTrigger>
												<DataTrigger Binding="{PluginSettings Plugin=ThemeOptions, Path=Options[SteamBanner]}" Value="True">
													<Setter Property="Stretch" Value="Uniform"/>
												</DataTrigger>
												<DataTrigger Binding="{PluginSettings Plugin=ThemeOptions, Path=Options[SteamBanner]}" Value="False">
													<Setter Property="Stretch" Value="UniformToFill"/>
												</DataTrigger>
												<DataTrigger Binding="{Binding Items.Count, ElementName=PART_ListGameItems}" Value="0">
													<Setter Property="Visibility" Value="Collapsed" />
													<Setter Property="Opacity" Value="0" />
												</DataTrigger>
												<DataTrigger Binding="{PluginSettings Plugin=ThemeOptions, Path=Options[AnimationBackground]}" Value="True">
													<DataTrigger.EnterActions>
														<BeginStoryboard>
															<Storyboard RepeatBehavior="Forever" AutoReverse="True">
																<!-- Animation de margin pour simuler un zoom -->
																<DoubleAnimation Storyboard.TargetProperty="RenderTransform.ScaleX" From="1.0" To="1.09" Duration="0:0:35">
																	<DoubleAnimation.EasingFunction>
																		<PowerEase EasingMode="EaseInOut" Power="2"/>
																	</DoubleAnimation.EasingFunction>
																</DoubleAnimation>
																<DoubleAnimation Storyboard.TargetProperty="RenderTransform.ScaleY" From="1.0" To="1.09" Duration="0:0:35">
																	<DoubleAnimation.EasingFunction>
																		<PowerEase EasingMode="EaseInOut" Power="2"/>
																	</DoubleAnimation.EasingFunction>
																</DoubleAnimation>
															</Storyboard>
														</BeginStoryboard>
													</DataTrigger.EnterActions>
												</DataTrigger>
											</Style.Triggers>
										</Style>
									</FadeImage.Style>
								</FadeImage>

								<!--Background Changer-->

								<FadeImage x:Name="ImageBackgroundChanger" Grid.RowSpan="3" HorizontalAlignment="Center" VerticalAlignment="Top" RenderTransformOrigin="0.5,1">
									<FadeImage.Source>
										<PriorityBinding>
											<Binding ElementName="VideoBackgroundChanger" Path="MediaElement.Source" />
											<Binding ElementName="BackgroundChanger_PluginBackgroundImage" Path="Content.Source" />
										</PriorityBinding>
									</FadeImage.Source>
									<FadeImage.Style>
										<Style TargetType="FadeImage" >
											<Setter Property="Visibility" Value="Collapsed"/>
											<Setter Property="Stretch" Value="UniformToFill"/>
											<Setter Property="HorizontalAlignment" Value="Center"/>
											<Setter Property="VerticalAlignment" Value="Top"/>
											<Setter Property="RenderTransform">
												<Setter.Value>
													<ScaleTransform ScaleX="1" ScaleY="1" />
												</Setter.Value>
											</Setter>
											<Style.Triggers>
												<MultiDataTrigger>
													<MultiDataTrigger.Conditions>
														<Condition Binding="{PluginSettings Plugin=BackgroundChanger, Path=EnableBackgroundImage}" Value="True"/>
														<Condition Binding="{PluginStatus Plugin=playnite-backgroundchanger-plugin, Status=Installed}" Value="True"/>
													</MultiDataTrigger.Conditions>
													<Setter Property="Visibility" Value="Visible"/>
												</MultiDataTrigger>
												<DataTrigger Binding="{PluginSettings Plugin=ThemeOptions, Path=Options[SteamBanner]}" Value="True">
													<Setter Property="Stretch" Value="Uniform"/>
												</DataTrigger>
												<DataTrigger Binding="{PluginSettings Plugin=ThemeOptions, Path=Options[SteamBanner]}" Value="False">
													<Setter Property="Stretch" Value="UniformToFill"/>
												</DataTrigger>
												<DataTrigger Binding="{Binding Items.Count, ElementName=PART_ListGameItems}" Value="0">
													<Setter Property="Visibility" Value="Collapsed" />
													<Setter Property="Opacity" Value="0" />
												</DataTrigger>
												<DataTrigger Binding="{PluginSettings Plugin=ThemeOptions, Path=Options[AnimationBackground]}" Value="True">
													<DataTrigger.EnterActions>
														<BeginStoryboard>
															<Storyboard RepeatBehavior="Forever" AutoReverse="True">
																<!-- Animation de margin pour simuler un zoom -->
																<DoubleAnimation Storyboard.TargetProperty="RenderTransform.ScaleX" From="1.0" To="1.09" Duration="0:0:35">
																	<DoubleAnimation.EasingFunction>
																		<PowerEase EasingMode="EaseInOut" Power="2"/>
																	</DoubleAnimation.EasingFunction>
																</DoubleAnimation>
																<DoubleAnimation Storyboard.TargetProperty="RenderTransform.ScaleY" From="1.0" To="1.09" Duration="0:0:35">
																	<DoubleAnimation.EasingFunction>
																		<PowerEase EasingMode="EaseInOut" Power="2"/>
																	</DoubleAnimation.EasingFunction>
																</DoubleAnimation>
															</Storyboard>
														</BeginStoryboard>
													</DataTrigger.EnterActions>
												</DataTrigger>
											</Style.Triggers>
										</Style>
									</FadeImage.Style>
								</FadeImage>

								<!--No Background-->

								<Grid x:Name="NoBackground" FocusVisualStyle="{x:Null}" Panel.ZIndex="-46" >
									<Grid.Style>
										<Style TargetType="Grid">
											<Setter Property="Background" Value="Black"/>
											<Setter Property="Opacity" Value="1"/>
											<Setter Property="VerticalAlignment" Value="Top"/>
											<Setter Property="HorizontalAlignment" Value="Center"/>
											<Setter Property="Grid.Row" Value="0"/>
											<Setter Property="Grid.RowSpan" Value="4"/>
											<Setter Property="Grid.ColumnSpan" Value="3"/>
											<Setter Property="Visibility" Value="Collapsed"/>
											<Style.Triggers>
												<MultiDataTrigger>
													<MultiDataTrigger.Conditions>
														<Condition Binding="{Binding ElementName=ChangeViewButton, Path=IsChecked}" Value="True"/>
														<Condition Binding="{Binding ElementName=PART_ImageBackground, Path=Source}" Value="{x:Null}"/>
														<Condition Binding="{Settings Fullscreen.EnableMainBackgroundImage}" Value="True"/>
													</MultiDataTrigger.Conditions>
													<Setter Property="Visibility" Value="Visible"/>
												</MultiDataTrigger>
											</Style.Triggers>
										</Style>
									</Grid.Style>
									<Image x:Name="NoBackgroundImage" Source="{ThemeFile 'Images/ShadowBackground/NoBackground.png'}" Stretch="UniformToFill" RenderOptions.BitmapScalingMode="Fant" />
								</Grid>


								<!--Video Background Changer-->

								<MediaElement x:Name="VideoBackgroundChanger" Stretch="UniformToFill" MediaElementBehaviors.Repeat="True" Grid.Row="0" Grid.RowSpan="4" Grid.ColumnSpan="3" HorizontalAlignment="Right" VerticalAlignment="Top" Panel.ZIndex="-46" >
									<MediaElement.Style>
										<Style TargetType="MediaElement">
											<Setter Property="MediaElement.Source" Value="{Binding ElementName=BackgroundChanger_PluginBackgroundImage, Path=Content.Source, NotifyOnTargetUpdated=True}"/>
											<Setter Property="LoadedBehavior" Value="Manual"/>
											<Setter Property="UnloadedBehavior" Value="Stop"/>
											<Setter Property="IsMuted" Value="True"/>
											<Setter Property="Opacity" Value="0"/>
											<Setter Property="Visibility" Value="Collapsed" />
											<Style.Triggers>
												<MultiDataTrigger>
													<MultiDataTrigger.Conditions>
														<Condition Binding="{PluginStatus Plugin=playnite-backgroundchanger-plugin, Status=Installed}" Value="True"/>
														<Condition Binding="{PluginSettings Plugin=BackgroundChanger, Path=EnableImageAnimatedBackground}" Value="True"/>
														<Condition Binding="{PluginSettings Plugin=BackgroundChanger, Path=BackgroundIsVideo}" Value="True"/>													
													</MultiDataTrigger.Conditions>
													<MultiDataTrigger.Setters>
														<Setter Property="LoadedBehavior" Value="Play"/>
														<Setter Property="Opacity" Value="1" />
														<Setter Property="Visibility" Value="Visible" />
													</MultiDataTrigger.Setters>
												</MultiDataTrigger>
												<DataTrigger Binding="{Binding ElementName=VideoBackgroundChanger, Path=Visibility}" Value="Collapsed">
													<Setter Property="MediaElement.Source" Value=" "/>
												</DataTrigger>
												<DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=IsActive}"
														 Value="False">
													<Setter Property="Source" Value=""/>
												</DataTrigger>
												<Trigger Property="Visibility" Value="Collapsed">
													<Setter Property="Source" Value=""/>
												</Trigger>
												<MultiDataTrigger>
													<MultiDataTrigger.Conditions>
														<Condition Binding="{Binding ElementName=ChangeViewButton, Path=IsChecked}" Value="False"/>
													</MultiDataTrigger.Conditions>
													<Setter Property="Visibility" Value="Collapsed" />
												</MultiDataTrigger>
												<MultiDataTrigger>
													<MultiDataTrigger.Conditions>
														<Condition Binding="{Binding ElementName=AcceuilSettings, Path=Visibility}" Value="Visible"/>
													</MultiDataTrigger.Conditions>
													<Setter Property="Visibility" Value="Collapsed" />
												</MultiDataTrigger>
											</Style.Triggers>
										</Style>
									</MediaElement.Style>
								</MediaElement>

								<!--Animation de Login -->

								<Grid>
									<Border Style="{StaticResource AnimatedFlashConnexion}" Tag="{Binding ElementName=Acceuil, Path=IsChecked}">
										<Grid>
											<Grid.Style>
												<Style TargetType="Grid">
													<Setter Property="Opacity" Value="1"/>
													<Setter Property="Background" Value="{DynamicResource OverlayMenu}"/>
													<Style.Triggers>
														<DataTrigger Binding="{Binding ElementName=Acceuil, Path=IsChecked}" Value="True">
															<Setter Property="Background" Value="{DynamicResource OverlayMenu}"/>
															<DataTrigger.EnterActions>
																<BeginStoryboard>
																	<Storyboard>
																		<DoubleAnimation
																			Storyboard.TargetProperty="Opacity"
																			From="1" To="0" BeginTime="0:0:0" Duration="0:0:0.9"/>
																	</Storyboard>
																</BeginStoryboard>
															</DataTrigger.EnterActions>
														</DataTrigger>
														<DataTrigger Binding="{Binding Source={StaticResource AcceuilOrNot}}" Value="False">
															<Setter Property="Visibility" Value="Collapsed"/>
														</DataTrigger>
													</Style.Triggers>
												</Style>
											</Grid.Style>
										</Grid>
									</Border>
								</Grid>


								<!-- Shadow Background -->
								<Border x:Name="ShadowBackground" Grid.Row="0" Grid.RowSpan="4" Grid.ColumnSpan="3" Panel.ZIndex="1" Opacity="{DynamicResource ShadeOpacity}">
									<Border.Background>
										<ImageBrush ImageSource="{ThemeFile 'Images/ShadowBackground/Shade.png'}"
													Stretch="Fill"
													RenderOptions.BitmapScalingMode="Fant" />
									</Border.Background>
									<Border.Style>
										<Style TargetType="Border">

											<Style.Triggers>
												<DataTrigger Binding="{PluginSettings Plugin=ThemeOptions, Path=Options[SteamBanner]}" Value="True">
													<Setter Property="Background">
														<Setter.Value>
															<ImageBrush ImageSource="{ThemeFile 'Images/ShadowBackground/ShadeSteamhero.png'}"
																		RenderOptions.BitmapScalingMode="Fant"
																		Stretch="Fill"/>
														</Setter.Value>
													</Setter>
												</DataTrigger>

												<MultiDataTrigger>
													<MultiDataTrigger.Conditions>
														<Condition Binding="{Binding ElementName=TrailerTrigger, Path=Opacity}" Value="1"/>
														<Condition Binding="{Binding ElementName=ChangeViewButton, Path=IsChecked}" Value="True"/>
														<Condition Binding="{PluginSettings Plugin=ThemeOptions, Path=Options[TrailerOnMainView]}" Value="True"/>
														<Condition Binding="{Binding ElementName=PART_ViewHost, Path=ActualWidth}" Value="1728" />
														<Condition Binding="{PluginSettings Plugin=ExtraMetadataLoader, Path=NewContextVideoAvailable}" Value="True"/>
														<Condition Binding="{PluginSettings Plugin=ExtraMetadataLoader, Path=IsVideoPlaying}" Value="True"/>
														<Condition Binding="{Binding ElementName=ExtraMetadataLoader_VideoLoaderControl_NoControls_Sound, Path=Opacity}" Value="1"/>

													</MultiDataTrigger.Conditions>
													<Setter Property="Background">
														<Setter.Value>
															<ImageBrush ImageSource="{ThemeFile 'Images/ShadowBackground/Trailer16-10.png'}"
																		RenderOptions.BitmapScalingMode="Fant"
																		Stretch="Fill"/>
														</Setter.Value>
													</Setter>
												</MultiDataTrigger>

												<DataTrigger Binding="{Binding ElementName=PART_MainHost, Path=Visibility}" Value="Visible">
													<Setter Property="Opacity" Value="{DynamicResource ShadeOpacity}"/>
												</DataTrigger>
												<DataTrigger Binding="{Binding ElementName=ChangeViewButton, Path=IsChecked}" Value="False">
													<Setter Property="Visibility" Value="Collapsed"/>
												</DataTrigger>
												<DataTrigger Binding="{Binding ElementName=PART_ElemGameDetails, Path=Visibility}" Value="Visible">
													<Setter Property="Visibility" Value="Collapsed"/>
												</DataTrigger>
												<DataTrigger Binding="{PluginSettings Plugin=ThemeOptions, Path=Options[BottomBarVisible]}" Value="False">
													<Setter Property="Grid.RowSpan" Value="4"/>
												</DataTrigger>

											</Style.Triggers>
										</Style>
									</Border.Style>
								</Border>

							</Grid>

							<ContentControl x:Name="BackgroundChanger_PluginBackgroundImage" Grid.Row="0" Grid.RowSpan="4" Grid.ColumnSpan="3" Width="1" Height="1"
											HorizontalAlignment="Center" VerticalAlignment="Bottom" Visibility="Collapsed" Opacity="0"/>


							<!--Trailer-->
							<Border x:Name="TrailerContainer" Grid.Column="0" Grid.ColumnSpan="5" Grid.Row="0" Grid.RowSpan="4" Panel.ZIndex="-1"
								VerticalAlignment="Top" HorizontalAlignment="Stretch" Background="Black" >
								<Border.Style>
									<Style TargetType="Border">
										<Setter Property="Opacity" Value="0"/>
										<Style.Triggers>
											<MultiDataTrigger>
												<MultiDataTrigger.Conditions>
													<Condition Binding="{Binding ElementName=TrailerTrigger, Path=Opacity}" Value="1"/>
													<Condition Binding="{Binding ElementName=ChangeViewButton, Path=IsChecked}" Value="True"/>
													<Condition Binding="{PluginSettings Plugin=ThemeOptions, Path=Options[TrailerOnMainView]}" Value="True"/>
												</MultiDataTrigger.Conditions>
												<Setter Property="Visibility" Value="Visible" />
											</MultiDataTrigger>
											<MultiDataTrigger>
												<MultiDataTrigger.Conditions>
													<Condition Binding="{Binding ElementName=TrailerTrigger, Path=Opacity}" Value="1"/>
													<Condition Binding="{Binding ElementName=ChangeViewButton, Path=IsChecked}" Value="True"/>
													<Condition Binding="{PluginSettings Plugin=ThemeOptions, Path=Options[TrailerOnMainView]}" Value="True"/>
												</MultiDataTrigger.Conditions>
												<MultiDataTrigger.EnterActions>
													<BeginStoryboard>
														<Storyboard>
															<DoubleAnimation Storyboard.TargetProperty="Opacity" BeginTime="0:0:2" Duration="0:0:1"
															From="0" To="1"/>
														</Storyboard>
													</BeginStoryboard>
												</MultiDataTrigger.EnterActions>
												<MultiDataTrigger.ExitActions>
													<BeginStoryboard>
														<Storyboard>
															<DoubleAnimation Storyboard.TargetProperty="Opacity" Duration="0:0:0" From="1" To="0"/>
														</Storyboard>
													</BeginStoryboard>
												</MultiDataTrigger.ExitActions>
											</MultiDataTrigger>
											<MultiDataTrigger>
												<MultiDataTrigger.Conditions>
													<Condition Binding="{Binding ElementName=BottomBar, Path=IsKeyboardFocusWithin}" Value="False"/>
													<Condition Binding="{PluginSettings Plugin=ThemeOptions, Path=Options[BottomBarVisible]}" Value="True"/>

												</MultiDataTrigger.Conditions>
												<MultiDataTrigger.EnterActions>
													<BeginStoryboard>
														<Storyboard>
															<ThicknessAnimation Storyboard.TargetProperty="Margin" Duration="0:0:0.8" From="0,0,0,0" To="0,0,0,-90"
																				DecelerationRatio="0.3" AccelerationRatio="0.7" />
														</Storyboard>
													</BeginStoryboard>
												</MultiDataTrigger.EnterActions>
												<MultiDataTrigger.ExitActions>
													<BeginStoryboard>
														<Storyboard>
															<ThicknessAnimation Storyboard.TargetProperty="Margin" Duration="0:0:0.6" From="0,0,0,-90" To="0,0,0,0"
																				AccelerationRatio="0.3" DecelerationRatio="0.7" />
														</Storyboard>
													</BeginStoryboard>
												</MultiDataTrigger.ExitActions>
											</MultiDataTrigger>
										</Style.Triggers>
									</Style>
								</Border.Style>
								<ContentControl x:Name="ExtraMetadataLoader_VideoLoaderControl_NoControls_Sound" Focusable="False" Panel.ZIndex="-46"  >
									<ContentControl.Style>
										<Style TargetType="ContentControl">
											<Setter Property="HorizontalAlignment" Value="Center" />
											<Setter Property="Opacity" Value="0" />
											<Setter Property="Visibility" Value="Collapsed" />
											<Setter Property="Background" Value="Black" />

											<Style.Triggers>
												<MultiDataTrigger>
													<MultiDataTrigger.Conditions>
														<Condition Binding="{Binding ElementName=TrailerTrigger, Path=Opacity}" Value="1"/>
														<Condition Binding="{PluginSettings Plugin=ThemeOptions, Path=Options[TrailerOnMainView]}" Value="True"/>
														<Condition Binding="{PluginSettings Plugin=ExtraMetadataLoader, Path=NewContextVideoAvailable}" Value="True"/>
													</MultiDataTrigger.Conditions>
													<Setter Property="ItemsControl.Visibility" Value="Visible" />
												</MultiDataTrigger>
												<MultiDataTrigger>
													<MultiDataTrigger.Conditions>
														<Condition Binding="{Binding ElementName=TrailerTrigger, Path=Opacity}" Value="1"/>
														<Condition Binding="{PluginSettings Plugin=ThemeOptions, Path=Options[TrailerOnMainView]}" Value="True"/>
														<Condition Binding="{PluginSettings Plugin=ExtraMetadataLoader, Path=NewContextVideoAvailable}" Value="True"/>
														<Condition Binding="{PluginSettings Plugin=ExtraMetadataLoader, Path=IsVideoPlaying}" Value="True"/>
													</MultiDataTrigger.Conditions>
													<MultiDataTrigger.EnterActions>
														<BeginStoryboard>
															<Storyboard>
																<DoubleAnimation Storyboard.TargetProperty="Opacity" BeginTime="0:0:1" Duration="0:0:1" From="0" To="1"/>
															</Storyboard>
														</BeginStoryboard>
													</MultiDataTrigger.EnterActions>
													<MultiDataTrigger.ExitActions>
														<BeginStoryboard>
															<Storyboard>
																<DoubleAnimation Storyboard.TargetProperty="Opacity" Duration="0:0:0" From="1" To="0"/>
															</Storyboard>
														</BeginStoryboard>
													</MultiDataTrigger.ExitActions>
												</MultiDataTrigger>
												<MultiDataTrigger>
													<MultiDataTrigger.Conditions>
														<Condition Binding="{Binding ElementName=ChangeViewButton, Path=IsChecked}" Value="True"/>
														<Condition Binding="{PluginSettings Plugin=ThemeOptions, Path=Options[TrailerOnMainView]}" Value="True"/>
													</MultiDataTrigger.Conditions>
													<Setter Property="ContentControl.OpacityMask">
														<Setter.Value>
															<ImageBrush ImageSource="{ThemeFile 'Images/ShadowBackground/TrailerMask.png'}" RenderOptions.BitmapScalingMode="Fant" Stretch="Fill"/>
														</Setter.Value>
													</Setter>
												</MultiDataTrigger>
												<DataTrigger Binding="{Binding ElementName=PART_ElemGameDetails, Path=Visibility}" Value="Visible">
													<Setter Property="Visibility" Value="Collapsed" />
												</DataTrigger>
												<MultiDataTrigger>
													<MultiDataTrigger.Conditions>
														<Condition Binding="{Binding ElementName=ChangeViewButton, Path=IsChecked}" Value="False"/>
													</MultiDataTrigger.Conditions>
													<Setter Property="Visibility" Value="Collapsed" />
												</MultiDataTrigger>
											</Style.Triggers>
										</Style>
									</ContentControl.Style>
								</ContentControl>
							</Border >

							<!--Info Alternatif -->
							<Grid  Grid.Row="0" Grid.RowSpan="5" Grid.ColumnSpan="3" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="0,0,-40,-50" >
								<Grid.Style>
									<Style TargetType="Grid">
										<Setter Property="Visibility" Value="Collapsed" />
										<Setter Property="RenderTransform">
											<Setter.Value>
												<TranslateTransform x:Name="InfoAlternatifTransform" />
											</Setter.Value>
										</Setter>
										<Setter Property="Effect">
											<Setter.Value>
												<DropShadowEffect ShadowDepth="2" RenderingBias="Performance" Opacity="0.8" Color="Black" />
											</Setter.Value>
										</Setter>
										<Style.Triggers>
											<DataTrigger Binding="{Binding ElementName=PART_ElemGameDetails, Path=Visibility}" Value="Visible">
												<Setter Property="Visibility" Value="Collapsed" />
											</DataTrigger>
											<MultiDataTrigger>
												<MultiDataTrigger.Conditions>
													<Condition Binding="{Binding ElementName=ChangeViewButton, Path=IsChecked}" Value="False"/>
												</MultiDataTrigger.Conditions>
												<Setter Property="Visibility" Value="Collapsed" />
											</MultiDataTrigger>

											<MultiDataTrigger>
												<MultiDataTrigger.Conditions>
													<Condition Binding="{Binding ElementName=Id, Path=Opacity}" Value="1"/>
													<Condition Binding="{PluginSettings Plugin=ThemeOptions, Path=Options[AltInfo]}" Value="True"/>
													<Condition Binding="{Binding ElementName=ChangeViewButton, Path=IsChecked}" Value="True"/>
													<Condition Binding="{Binding ElementName=PART_ElemGameDetails, Path=Visibility}" Value="Collapsed"/>
													<Condition Binding="{PluginSettings Plugin=ThemeOptions, Path=Options[PerformanceMode]}" Value="False"/>
												</MultiDataTrigger.Conditions>
												<MultiDataTrigger.EnterActions>
													<BeginStoryboard>
														<Storyboard>
															<DoubleAnimation Storyboard.TargetProperty="Opacity" BeginTime="0:0:2" Duration="0:0:0.1" To="0.8"/>
															<DoubleAnimation Storyboard.TargetProperty="RenderTransform.X" BeginTime="0:0:2" From="180" To="0" Duration="0:0:1.5" >
																<DoubleAnimation.EasingFunction>
																	<SineEase EasingMode="EaseOut" />
																</DoubleAnimation.EasingFunction>
															</DoubleAnimation>
														</Storyboard>
													</BeginStoryboard>
												</MultiDataTrigger.EnterActions>
												<MultiDataTrigger.ExitActions>
													<BeginStoryboard>
														<Storyboard>
															<DoubleAnimation Storyboard.TargetProperty="Opacity" Duration="0:0:0" To="0"/>
														</Storyboard>
													</BeginStoryboard>
												</MultiDataTrigger.ExitActions>
												<Setter Property="Visibility" Value="Visible"/>
											</MultiDataTrigger>
										</Style.Triggers>
									</Style>
								</Grid.Style>

								<Border MinWidth="80" MaxHeight="1805" CornerRadius="{DynamicResource Corner}" Margin="0,0,32,20" Background="{DynamicResource OverlayMenu}">
									<Border.Style>
										<Style TargetType="Border">
											<Setter Property="Visibility" Value="Visible"/>
											<Style.Triggers>
											</Style.Triggers>
										</Style>
									</Border.Style>

									<StackPanel Orientation="Vertical">


										<StackPanel Orientation="Horizontal" Margin="0,10,0,10">
											<StackPanel.Style>
												<Style TargetType="StackPanel">
													<Setter Property="Visibility" Value="Collapsed"/>
													<Style.Triggers>
														<DataTrigger Binding="{PluginSettings Plugin=SuccessStory, Path=HasData}" Value="True">
															<Setter  Property="Visibility" Value="Visible"/>
														</DataTrigger>
													</Style.Triggers>
												</Style>
											</StackPanel.Style>
											<Image Margin="14,0,0,0" VerticalAlignment="Center" HorizontalAlignment="Left"
																		   Source="{ThemeFile 'Images/Trophy.png'}" Height="22" RenderOptions.BitmapScalingMode="Fant" />
											<TextBlock Margin="14,0,2,2" Text="{PluginSettings Plugin=SuccessStory, Path=Unlocked, FallbackValue='-'}" VerticalAlignment="Center" HorizontalAlignment="Left" Style="{DynamicResource TextBlockBoldBaseStyle}" FontSize="22" />
											<TextBlock Margin="2,0,2,2" Text="/" VerticalAlignment="Center" HorizontalAlignment="Left" Style="{DynamicResource TextBlockBoldBaseStyle}" FontSize="22" />
											<TextBlock Margin="2,0,14,2" Text="{PluginSettings Plugin=SuccessStory, Path=Total, FallbackValue='-'}" VerticalAlignment="Center" HorizontalAlignment="Left" Style="{DynamicResource TextBlockBoldBaseStyle}" FontSize="22" />


										</StackPanel>

										<StackPanel Orientation="Horizontal" Margin="0,10,0,10">
											<StackPanel.Style>
												<Style TargetType="StackPanel">
													<Setter Property="Visibility" Value="Collapsed"/>
													<Style.Triggers>
														<DataTrigger Binding="{PluginSettings Plugin=SuccessStory, Path=HasData}" Value="True">
															<Setter  Property="Visibility" Value="Visible"/>
														</DataTrigger>
													</Style.Triggers>
												</Style>
											</StackPanel.Style>
											<Image Margin="14,0,0,0" VerticalAlignment="Center" HorizontalAlignment="Left"
																		   Source="{ThemeFile 'Images/Completed.png'}" Height="22" RenderOptions.BitmapScalingMode="Fant" />
											<TextBlock Margin="14,0,16,2" Text="{PluginSettings Plugin=SuccessStory, Path=Percent, StringFormat={}{0}%}" VerticalAlignment="Center" HorizontalAlignment="Left" Style="{DynamicResource TextBlockBoldBaseStyle}" FontSize="22" />
										</StackPanel>

										<StackPanel Orientation="Horizontal" Margin="0,10,0,10" Tag="{Binding SelectedGame.Playtime, Converter={StaticResource PlayTimeToStringConverter}}">
											<StackPanel.Style>
												<Style TargetType="StackPanel">
													<Setter Property="Visibility" Value="Visible" />
													<Style.Triggers>
														<DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Tag}" Value="">
															<Setter Property="Visibility" Value="Collapsed" />
														</DataTrigger>
													</Style.Triggers>
												</Style>
											</StackPanel.Style>
											<Image Margin="14,0,0,0" VerticalAlignment="Center" HorizontalAlignment="Left"
																		   Source="{ThemeFile 'Images/HLTB.png'}" Height="22" RenderOptions.BitmapScalingMode="Fant" />
											<TextBlock Margin="14,0,16,2" Text="{Binding SelectedGame.Playtime, Converter={StaticResource PlayTimeToStringConverter}}" VerticalAlignment="Center" HorizontalAlignment="Left" Style="{DynamicResource TextBlockBoldBaseStyle}" FontSize="22" />
										</StackPanel>

										<StackPanel Orientation="Horizontal" Margin="0,10,0,10" Tag="{Binding SelectedGame.InstallSize, Converter={StaticResource NullableUlongBytesSizeToStringConverter}, ConverterParameter=' / '}">
											<StackPanel.Style>
												<Style TargetType="StackPanel">
													<Setter Property="Visibility" Value="Visible" />
													<Style.Triggers>
														<DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Tag}" Value="">
															<Setter Property="Visibility" Value="Collapsed" />
														</DataTrigger>
													</Style.Triggers>
												</Style>
											</StackPanel.Style>
											<Image Margin="14,0,0,0" VerticalAlignment="Center" HorizontalAlignment="Left"
																		   Source="{ThemeFile 'Images/Hdd.png'}" Height="22" RenderOptions.BitmapScalingMode="Fant" />
											<TextBlock Margin="14,0,16,2" Text="{Binding SelectedGame.InstallSize, Converter={StaticResource NullableUlongBytesSizeToStringConverter}, ConverterParameter=' / '}" VerticalAlignment="Center" HorizontalAlignment="Left" Style="{DynamicResource TextBlockBoldBaseStyle}" FontSize="22" />
										</StackPanel>

										<StackPanel Orientation="Horizontal" Margin="0,10,0,10">
											<StackPanel.Style>
												<Style TargetType="StackPanel">
													<Setter Property="Visibility" Value="Visible" />
													<Style.Triggers>
														<DataTrigger Binding="{Binding ElementName=Genres, Path=Text}" Value="">
															<Setter Property="Visibility" Value="Collapsed"/>
														</DataTrigger>
													</Style.Triggers>
												</Style>
											</StackPanel.Style>
											<Image Margin="14,0,0,0" VerticalAlignment="Center" HorizontalAlignment="Left"
																		   Source="{ThemeFile 'Images/gamepad.png'}" Height="22" RenderOptions.BitmapScalingMode="Fant" />
											<TextBlock x:Name="Genres" Margin="14,0,16,2" Text="{Binding SelectedGame.Genres[0]}" VerticalAlignment="Center" HorizontalAlignment="Left" Style="{DynamicResource TextBlockBoldBaseStyle}" FontSize="22" />
										</StackPanel>

										<StackPanel Orientation="Horizontal" Margin="0,10,0,10" Tag="{Binding SelectedGame.AgeRatings, Converter={StaticResource ListToStringConverter}}">

											<StackPanel.Style>
												<Style TargetType="StackPanel">
													<Setter Property="Visibility" Value="Visible" />
													<Style.Triggers>
														<DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Tag}" Value="">
															<Setter Property="Visibility" Value="Collapsed" />
														</DataTrigger>
													</Style.Triggers>
												</Style>
											</StackPanel.Style>
											<ItemsControlEx ItemsSource="{Binding SelectedGame.AgeRatings}"
											  IsTabStop="False" IsEnabled="False" Focusable="False">

												<ItemsControlEx.ItemTemplate>
													<DataTemplate>
														<Grid HorizontalAlignment="Right" VerticalAlignment="Center">
															<Grid.ColumnDefinitions>
																<ColumnDefinition Width="auto" />
															</Grid.ColumnDefinitions>
															<Border x:Name="RatingIcon" Background="Transparent" CornerRadius="0" Height="22" Width="auto" Margin="16,5,0,0" Visibility="Visible">
																<Image x:Name="RatingIconImage" Grid.Column="0"  RenderOptions.BitmapScalingMode="Fant" SnapsToDevicePixels="True"  Source="{ThemeFileBinding Name, PathFormat='Icons/AgeRating/Alt/{0}.png.'}" />
															</Border>
														</Grid>

														<DataTemplate.Triggers>
															<DataTrigger Binding="{Binding ElementName=RatingIconImage, Path=Source}" Value="{x:Null}">
																<Setter Property="Visibility" Value="Collapsed"/>
															</DataTrigger>
														</DataTemplate.Triggers>
													</DataTemplate>
												</ItemsControlEx.ItemTemplate>
											</ItemsControlEx>
											<TextBlock Margin="5,0,16,2" Text="{Binding SelectedGame.AgeRatings, Converter={StaticResource ListToStringConverter}}" VerticalAlignment="Center" HorizontalAlignment="Left" Style="{DynamicResource TextBlockBoldBaseStyle}" FontSize="22" />

										</StackPanel>
										<StackPanel.Effect>
											<DropShadowEffect ShadowDepth="1" Color="Black"
												RenderingBias="Performance" BlurRadius="2" Opacity="0.3"/>
										</StackPanel.Effect>
									</StackPanel>
								</Border>
							</Grid>

							<!-- Logo -->
							<StackPanel x:Name="LogoContainer" Orientation="Horizontal" Panel.ZIndex="-45" CacheMode="BitmapCache" UseLayoutRounding="True" SnapsToDevicePixels="True">
								<StackPanel.RenderTransform>
									<TransformGroup>
										<ScaleTransform x:Name="LogoScaleTransform" ScaleX="1" ScaleY="1" />
										<TranslateTransform x:Name="LogoTranslateTransform" />
									</TransformGroup>
								</StackPanel.RenderTransform>
								<StackPanel.Style>
									<Style TargetType="StackPanel">
										<Setter Property="Opacity" Value="0"/>
										<Setter Property="Visibility" Value="Visible"/>
										<Setter Property="Margin" Value="150,130,0,0"/>
										<Setter Property="HorizontalAlignment" Value="Left"/>
										<Setter Property="VerticalAlignment" Value="Center"/>
										<Setter Property="Grid.Row" Value="1"/>
										<Setter Property="Grid.ColumnSpan" Value="3"/>
										<Style.Triggers>
											<MultiDataTrigger>
												<MultiDataTrigger.Conditions>
													<Condition Binding="{Binding ElementName=Id, Path=Opacity}" Value="1"/>
													<Condition Binding="{PluginSettings Plugin=ThemeOptions, Path=Options[LogoAnimation]}" Value="True"/>
													<Condition Binding="{PluginSettings Plugin=ThemeOptions, Path=Options[PerformanceMode]}" Value="False"/>
												</MultiDataTrigger.Conditions>
												<MultiDataTrigger.EnterActions>
													<BeginStoryboard>
														<Storyboard FillBehavior="HoldEnd">
															<!-- Opacité -->
															<DoubleAnimation Storyboard.TargetProperty="Opacity" From="0" To="0.6" Duration="0:0:0.5"/>
															<DoubleAnimation Storyboard.TargetProperty="Opacity" From="0.6" To="1" Duration="0:0:3" />
															<!-- Translation -->
															<DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[1].(TranslateTransform.X)"
																			 From="-1300" To="0" Duration="0:0:2.5">
																<DoubleAnimation.EasingFunction>
																	<SineEase EasingMode="EaseInOut"/>
																</DoubleAnimation.EasingFunction>
															</DoubleAnimation>

															<!-- Zoom (Scale X) -->
															<DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)"
																			 From="0.70" To="1" Duration="0:0:3.5" >
																<DoubleAnimation.EasingFunction>
																	<BackEase Amplitude="0.3" EasingMode="EaseOut"/>
																</DoubleAnimation.EasingFunction>
															</DoubleAnimation>

															<!-- Zoom (Scale Y) -->
															<DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)"
																			 From="0.70" To="1" Duration="0:0:3.5" >
																<DoubleAnimation.EasingFunction>
																	<BackEase Amplitude="0.3" EasingMode="EaseOut"/>
																</DoubleAnimation.EasingFunction>
															</DoubleAnimation>
														</Storyboard>
													</BeginStoryboard>
												</MultiDataTrigger.EnterActions>
											</MultiDataTrigger>
											<MultiDataTrigger>
												<MultiDataTrigger.Conditions>
													<Condition Binding="{Binding ElementName=PART_ElemGameDetails, Path=Visibility}" Value="Collapsed" />
													<Condition Binding="{PluginSettings Plugin=ThemeOptions, Path=Options[LogoAnimation]}" Value="True"/>
													<Condition Binding="{PluginSettings Plugin=ThemeOptions, Path=Options[PerformanceMode]}" Value="False"/>
												</MultiDataTrigger.Conditions>
												<MultiDataTrigger.EnterActions>
													<BeginStoryboard>
														<Storyboard  FillBehavior="Stop">
															<DoubleAnimation Storyboard.TargetProperty="Opacity" Duration="0:0:1" To="0"/>

															<DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[1].(TranslateTransform.X)"
																			 From="-70" To="0" Duration="0:0:1" >
																<DoubleAnimation.EasingFunction>
																	<CubicEase EasingMode="EaseInOut"/>
																</DoubleAnimation.EasingFunction>
															</DoubleAnimation>

															<DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[1].(TranslateTransform.Y)"
																			 From="-120" To="0" Duration="0:0:1">
																<DoubleAnimation.EasingFunction>
																	<CubicEase EasingMode="EaseInOut"/>
																</DoubleAnimation.EasingFunction>
															</DoubleAnimation>

														</Storyboard>
													</BeginStoryboard>
												</MultiDataTrigger.EnterActions>
											</MultiDataTrigger>

											<DataTrigger Binding="{Binding ElementName=PART_ElemGameDetails, Path=Visibility}" Value="Visible" >
												<DataTrigger.EnterActions>
													<BeginStoryboard>
														<Storyboard>
															<DoubleAnimation Storyboard.TargetProperty="Opacity" Duration="0:0:0" To="0" />
														</Storyboard>
													</BeginStoryboard>
												</DataTrigger.EnterActions>
											</DataTrigger>
											<DataTrigger Binding="{Binding ElementName=PART_ElemGameDetails, Path=Visibility}" Value="Collapsed" >
												<DataTrigger.EnterActions>
													<BeginStoryboard>
														<Storyboard>
															<DoubleAnimation Storyboard.TargetProperty="Opacity" Duration="0:0:0" To="1" />
														</Storyboard>
													</BeginStoryboard>
												</DataTrigger.EnterActions>
											</DataTrigger>
											<DataTrigger Binding="{Binding Items.Count, ElementName=PART_ListGameItems}" Value="0">
												<Setter Property="Visibility" Value="Collapsed" />
											</DataTrigger>
											<DataTrigger Binding="{Binding ElementName=PART_ElemGameDetails, Path=Visibility}" Value="Visible">
												<Setter Property="Visibility" Value="Collapsed" />
											</DataTrigger>
											<DataTrigger Binding="{Binding ElementName=Id, Path=Opacity}" Value="1">
												<Setter Property="Visibility" Value="Visible" />
											</DataTrigger>
											<MultiDataTrigger>
												<MultiDataTrigger.Conditions>
													<Condition Binding="{Binding ElementName=ChangeViewButton, Path=IsChecked}" Value="False"/>
												</MultiDataTrigger.Conditions>
												<Setter Property="Visibility" Value="Collapsed"/>
											</MultiDataTrigger>
										</Style.Triggers>
									</Style>
								</StackPanel.Style>
								<StackPanel>
									<ContentControl x:Name="ExtraMetadataLoader_LogoLoaderControl">
										<ContentControl.Style>
											<Style TargetType="ContentControl">
												<Setter Property="MaxWidth" Value="600"/>
												<Setter Property="MaxHeight" Value="320"/>
												<Setter Property="HorizontalAlignment" Value="Left"/>
												<Setter Property="VerticalAlignment" Value="Center"/>
												<Setter Property="Effect">
													<Setter.Value>
														<DropShadowEffect ShadowDepth="2" Opacity="0.6" RenderingBias="Performance" />
													</Setter.Value>
												</Setter>
												<Style.Triggers>
													<DataTrigger Binding="{Binding ElementName=LogoTrigger, Path=Opacity}" Value="1">
														<Setter Property="Visibility" Value="Visible"/>
													</DataTrigger>
													<DataTrigger Binding="{Binding ElementName=ChangeViewButton, Path=IsChecked}" Value="False">
														<Setter Property="Visibility" Value="Collapsed"/>
													</DataTrigger>
													<DataTrigger Binding="{PluginSettings Plugin=ExtraMetadataLoader, Path=IsLogoAvailable}" Value="False">
														<Setter Property="Visibility" Value="Collapsed" />
													</DataTrigger>
													<DataTrigger Binding="{Binding ElementName=PART_ElemGameDetails, Path=Visibility}" Value="Visible">
														<Setter Property="Visibility" Value="Collapsed" />
													</DataTrigger>
													<MultiDataTrigger>
														<MultiDataTrigger.Conditions>
															<Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Opacity}" Value="1"/>
														</MultiDataTrigger.Conditions>
													</MultiDataTrigger>
													<MultiDataTrigger>
														<MultiDataTrigger.Conditions>
															<Condition Binding="{Binding ElementName=Id, Path=Opacity}" Value="1"/>
															<Condition Binding="{PluginSettings Plugin=ThemeOptions, Path=Options[LogoAnimation]}" Value="False"/>
														</MultiDataTrigger.Conditions>
														<MultiDataTrigger.Setters>
															<Setter Property="Opacity" Value="1" />
														</MultiDataTrigger.Setters>

													</MultiDataTrigger>
												</Style.Triggers>
											</Style>
										</ContentControl.Style>
									</ContentControl>
								</StackPanel>
							</StackPanel>

							<!-- Filtre Bottom Bar-->
							<Grid x:Name="BottomBar">
								<Grid.RenderTransform>
									<TransformGroup>
										<TranslateTransform x:Name="BottomBarTransform" />
									</TransformGroup>
								</Grid.RenderTransform>
								<Grid.Style>
									<Style TargetType="Grid" >
										<Setter Property="Opacity" Value="1"/>
										<Setter Property="HorizontalAlignment" Value="Center"/>
										<Setter Property="Grid.Row" Value="4"/>
										<Setter Property="Grid.ColumnSpan" Value="3"/>
										<Setter Property="Effect">
											<Setter.Value>
												<DropShadowEffect ShadowDepth="2" BlurRadius="0" RenderingBias="Performance" Opacity="1" Color="Black" />
											</Setter.Value>
										</Setter>
										<Style.Triggers>
											<DataTrigger Binding="{Binding ElementName=PART_ElemGameDetails, Path=Visibility}" Value="Visible">
												<Setter Property="Focusable" Value="False"/>
												<Setter Property="Visibility" Value="Collapsed"/>
											</DataTrigger>

											<MultiDataTrigger>
												<MultiDataTrigger.Conditions>
													<!-- Condition 1: Focus is not within the Grid -->
													<Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsKeyboardFocusWithin}" Value="False"/>
													<!-- Condition 2: chanveviewbutton is not checked -->
													<Condition Binding="{Binding Path=IsChecked, ElementName=ChangeViewButton}" Value="True"/>
													<Condition Binding="{PluginSettings Plugin=ThemeOptions, Path=Options[BottomBarVisible]}" Value="True"/>
													<Condition Binding="{PluginSettings Plugin=ThemeOptions, Path=Options[PerformanceMode]}" Value="False"/>
												</MultiDataTrigger.Conditions>
												<MultiDataTrigger.EnterActions>
													<BeginStoryboard>
														<Storyboard>
															<!-- Define the animation for when the focus is not within the Grid -->
															<DoubleAnimation Storyboard.TargetProperty="Opacity" Duration="0:0:0.45" From="1" To="0" />
															<DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(TranslateTransform.Y)" From="0" To="90" Duration="0:0:0.45">
																<DoubleAnimation.EasingFunction>
																	<CubicEase EasingMode="EaseInOut" />
																</DoubleAnimation.EasingFunction>
															</DoubleAnimation>
														</Storyboard>
													</BeginStoryboard>
												</MultiDataTrigger.EnterActions>
												<MultiDataTrigger.ExitActions>
													<BeginStoryboard>
														<Storyboard>
															<!-- Define the animation for when the focus returns within the Grid -->
															<DoubleAnimation Storyboard.TargetProperty="Opacity" Duration="0:0:0.2" From="0" To="1" />
															<DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(TranslateTransform.Y)" From="90" To="0" Duration="0:0:0.45">
																<DoubleAnimation.EasingFunction>
																	<CubicEase EasingMode="EaseInOut" />
																</DoubleAnimation.EasingFunction>
															</DoubleAnimation>
														</Storyboard>
													</BeginStoryboard>
												</MultiDataTrigger.ExitActions>
											</MultiDataTrigger>
											<DataTrigger Binding="{Binding Source={StaticResource AcceuilOrNot}}" Value="False">
												<Setter Property="Visibility" Value="Visible"/>
											</DataTrigger>
											<MultiDataTrigger>
												<MultiDataTrigger.Conditions>
													<Condition Binding="{Binding ElementName=Acceuil, Path=IsChecked}" Value="False" />
													<Condition Binding="{Binding ElementName=Wrong, Path=IsChecked}" Value="False" />
												</MultiDataTrigger.Conditions>
												<MultiDataTrigger.Setters>
													<Setter Property="Visibility" Value="Collapsed"/>
												</MultiDataTrigger.Setters>
											</MultiDataTrigger>
											<MultiDataTrigger>
												<MultiDataTrigger.Conditions>
													<Condition Binding="{Binding ElementName=Acceuil, Path=IsChecked}" Value="False" />
													<Condition Binding="{Binding ElementName=Wrong, Path=IsChecked}" Value="False" />
												</MultiDataTrigger.Conditions>
												<MultiDataTrigger.Setters>
													<Setter Property="Visibility" Value="Collapsed"/>
												</MultiDataTrigger.Setters>
											</MultiDataTrigger>
											<DataTrigger Binding="{Binding ElementName=ListGame, Path=Visibility}" Value="Visible">
												<Setter Property="Visibility" Value="Visible"/>
											</DataTrigger>
										</Style.Triggers>
									</Style>
								</Grid.Style>
								<FilterPresetSelector x:Name="ItemsFilterPresets" Margin="0,0,0,0" HorizontalAlignment="Center" FocusVisualStyle="{x:Null}" />
							</Grid>

							<!--SourceLogo-->
							<Grid Grid.Column="1" Grid.Row="0">
								<StackPanel Orientation="Horizontal" VerticalAlignment="Top" HorizontalAlignment="Left" Margin="60,20,0,0">
									<StackPanel.Style>
										<Style TargetType="StackPanel">
											<Setter Property="Margin" Value="0,0,20,0"/>
											<Setter Property="Visibility" Value="Visible"/>

											<Setter Property="Effect">
												<Setter.Value>
													<DropShadowEffect ShadowDepth="1" RenderingBias="Performance" BlurRadius="1" Direction="270" />
												</Setter.Value>
											</Setter>
											<Style.Triggers>
												<DataTrigger Binding="{PluginSettings Plugin=ThemeOptions, Path=Options[SourceLogoOnTopScreen]}" Value="False">
													<Setter Property="Visibility" Value="Collapsed"/>
												</DataTrigger>
												<DataTrigger Binding="{Binding SelectedGame.Source.Name}" Value="">
													<Setter Property="Visibility" Value="Collapsed"/>
												</DataTrigger>
												<DataTrigger Binding="{Binding ElementName=ControlCenter, Path=Visibility}" Value="Visible">
													<Setter Property="Visibility" Value="Collapsed"/>
												</DataTrigger>
											</Style.Triggers>
										</Style>
									</StackPanel.Style>
									<Image x:Name="LibraryIcon" RenderOptions.BitmapScalingMode="Fant" MaxHeight="50" MaxWidth="180"
										   VerticalAlignment="Center" HorizontalAlignment="Center"
										   Source="{ThemeFileBinding SelectedGame.Source.Name, PathFormat='Icons/Source/{0}.png'}">
										<Image.Style>
											<Style TargetType="Image">
												<Style.Triggers>
													<MultiDataTrigger>
														<MultiDataTrigger.Conditions>
															<Condition Binding="{Binding ElementName=ChangeViewButton, Path=IsChecked}" Value="False"/>
														</MultiDataTrigger.Conditions>
														<Setter Property="Visibility" Value="Visible"/>
													</MultiDataTrigger>
												</Style.Triggers>
											</Style>
										</Image.Style>
									</Image>
								</StackPanel>
								<Grid.Effect>
									<DropShadowEffect ShadowDepth="1" Color="Black"
										RenderingBias="Performance" BlurRadius="5" Opacity="0.3"/>
								</Grid.Effect>
							</Grid>

							<!-- ButtonController-->
							<Grid Name="BottomButton" Grid.Column="1" Grid.Row="1" HorizontalAlignment="Center" VerticalAlignment="Bottom">

								<Grid.Style>
									<Style TargetType="Grid">
										<Setter Property="Visibility" Value="Collapsed"/>
										<Setter Property="Margin" Value="0,0,0,0"/>
										<Setter Property="RenderTransform">
											<Setter.Value>
												<TranslateTransform x:Name="ControllerTranslateTransform" />
											</Setter.Value>
										</Setter>
										<Style.Triggers>

											<MultiDataTrigger>
												<MultiDataTrigger.Conditions>
													<Condition Binding="{Settings Fullscreen.Columns}" Value="10" />
												</MultiDataTrigger.Conditions>
												<MultiDataTrigger.Setters>
													<Setter Property="Margin" Value="0,0,0,-40"/>
												</MultiDataTrigger.Setters>
											</MultiDataTrigger>

											<MultiDataTrigger>
												<MultiDataTrigger.Conditions>
													<Condition Binding="{Settings Fullscreen.Columns}" Value="9" />
												</MultiDataTrigger.Conditions>
												<MultiDataTrigger.Setters>
													<Setter Property="Margin" Value="0,0,0,-30"/>
												</MultiDataTrigger.Setters>
											</MultiDataTrigger>

											<MultiDataTrigger>
												<MultiDataTrigger.Conditions>
													<Condition Binding="{Settings Fullscreen.Columns}" Value="8" />
												</MultiDataTrigger.Conditions>
												<MultiDataTrigger.Setters>
													<Setter Property="Margin" Value="0,0,0,-20"/>
												</MultiDataTrigger.Setters>
											</MultiDataTrigger>

											<MultiDataTrigger>
												<MultiDataTrigger.Conditions>
													<Condition Binding="{Settings Fullscreen.Columns}" Value="7" />
												</MultiDataTrigger.Conditions>
												<MultiDataTrigger.Setters>
													<Setter Property="Margin" Value="0,0,0,30"/>
												</MultiDataTrigger.Setters>
											</MultiDataTrigger>

											<!--Cover Square-->

											<MultiDataTrigger>
												<MultiDataTrigger.Conditions>
													<Condition Binding="{Settings CoverAspectRatio}" Value="1:1" />
													<Condition Binding="{Settings Fullscreen.Columns}" Value="10" />
													<Condition Binding="{PluginSettings Plugin=ThemeOptions, Path=Options[ButtonControllerVisibleByDefault]}" Value="True" />
												</MultiDataTrigger.Conditions>
												<MultiDataTrigger.Setters>
													<Setter Property="Margin" Value="0,0,0,-150"/>
												</MultiDataTrigger.Setters>
											</MultiDataTrigger>

											<MultiDataTrigger>
												<MultiDataTrigger.Conditions>
													<Condition Binding="{Settings CoverAspectRatio}" Value="1:1" />
													<Condition Binding="{Settings Fullscreen.Columns}" Value="9" />
													<Condition Binding="{PluginSettings Plugin=ThemeOptions, Path=Options[ButtonControllerVisibleByDefault]}" Value="True" />
												</MultiDataTrigger.Conditions>
												<MultiDataTrigger.Setters>
													<Setter Property="Margin" Value="0,0,0,-130"/>
												</MultiDataTrigger.Setters>
											</MultiDataTrigger>

											<MultiDataTrigger>
												<MultiDataTrigger.Conditions>
													<Condition Binding="{Settings CoverAspectRatio}" Value="1:1" />
													<Condition Binding="{Settings Fullscreen.Columns}" Value="8" />
													<Condition Binding="{PluginSettings Plugin=ThemeOptions, Path=Options[ButtonControllerVisibleByDefault]}" Value="True" />
												</MultiDataTrigger.Conditions>
												<MultiDataTrigger.Setters>
													<Setter Property="Margin" Value="0,0,0,-110"/>
												</MultiDataTrigger.Setters>
											</MultiDataTrigger>

											<MultiDataTrigger>
												<MultiDataTrigger.Conditions>
													<Condition Binding="{Settings CoverAspectRatio}" Value="1:1" />
													<Condition Binding="{Settings Fullscreen.Columns}" Value="7" />
													<Condition Binding="{PluginSettings Plugin=ThemeOptions, Path=Options[ButtonControllerVisibleByDefault]}" Value="True" />
												</MultiDataTrigger.Conditions>
												<MultiDataTrigger.Setters>
													<Setter Property="Margin" Value="0,0,0,-80"/>
												</MultiDataTrigger.Setters>
											</MultiDataTrigger>

											<MultiDataTrigger>
												<MultiDataTrigger.Conditions>
													<Condition Binding="{Settings CoverAspectRatio}" Value="1:1" />
													<Condition Binding="{Settings Fullscreen.Columns}" Value="6" />
													<Condition Binding="{PluginSettings Plugin=ThemeOptions, Path=Options[ButtonControllerVisibleByDefault]}" Value="True" />
												</MultiDataTrigger.Conditions>
												<MultiDataTrigger.Setters>
													<Setter Property="Margin" Value="0,0,0,-60"/>
												</MultiDataTrigger.Setters>
											</MultiDataTrigger>

											<!--Cover Banner-->

											<MultiDataTrigger>
												<MultiDataTrigger.Conditions>
													<Condition Binding="{Settings CoverAspectRatio}" Value="92:43" />
													<Condition Binding="{Settings Fullscreen.Columns}" Value="2" />
												</MultiDataTrigger.Conditions>
												<MultiDataTrigger.Setters>
													<Setter Property="Margin" Value="0,0,0,20"/>
												</MultiDataTrigger.Setters>
											</MultiDataTrigger>
											<MultiDataTrigger>
												<MultiDataTrigger.Conditions>
													<Condition Binding="{Settings CoverAspectRatio}" Value="92:43" />
													<Condition Binding="{Settings Fullscreen.Columns}" Value="3" />
												</MultiDataTrigger.Conditions>
												<MultiDataTrigger.Setters>
													<Setter Property="Margin" Value="0,0,0,-70"/>
												</MultiDataTrigger.Setters>
											</MultiDataTrigger>
											<MultiDataTrigger>
												<MultiDataTrigger.Conditions>
													<Condition Binding="{Settings CoverAspectRatio}" Value="92:43" />
													<Condition Binding="{Settings Fullscreen.Columns}" Value="4" />
												</MultiDataTrigger.Conditions>
												<MultiDataTrigger.Setters>
													<Setter Property="Margin" Value="0,0,0,-130"/>
												</MultiDataTrigger.Setters>
											</MultiDataTrigger>
											<MultiDataTrigger>
												<MultiDataTrigger.Conditions>
													<Condition Binding="{Settings CoverAspectRatio}" Value="92:43" />
													<Condition Binding="{Settings Fullscreen.Columns}" Value="5" />
												</MultiDataTrigger.Conditions>
												<MultiDataTrigger.Setters>
													<Setter Property="Margin" Value="0,0,0,-160"/>
												</MultiDataTrigger.Setters>
											</MultiDataTrigger>
											<MultiDataTrigger>
												<MultiDataTrigger.Conditions>
													<Condition Binding="{Settings CoverAspectRatio}" Value="92:43" />
													<Condition Binding="{Settings Fullscreen.Columns}" Value="6" />
												</MultiDataTrigger.Conditions>
												<MultiDataTrigger.Setters>
													<Setter Property="Margin" Value="0,0,0,-170"/>
												</MultiDataTrigger.Setters>
											</MultiDataTrigger>
											<MultiDataTrigger>
												<MultiDataTrigger.Conditions>
													<Condition Binding="{Settings CoverAspectRatio}" Value="92:43" />
													<Condition Binding="{Settings Fullscreen.Columns}" Value="7" />
												</MultiDataTrigger.Conditions>
												<MultiDataTrigger.Setters>
													<Setter Property="Margin" Value="0,0,0,-180"/>
												</MultiDataTrigger.Setters>
											</MultiDataTrigger>
											<MultiDataTrigger>
												<MultiDataTrigger.Conditions>
													<Condition Binding="{Settings CoverAspectRatio}" Value="92:43" />
													<Condition Binding="{Settings Fullscreen.Columns}" Value="8" />
												</MultiDataTrigger.Conditions>
												<MultiDataTrigger.Setters>
													<Setter Property="Margin" Value="0,0,0,-190"/>
												</MultiDataTrigger.Setters>
											</MultiDataTrigger>
											<MultiDataTrigger>
												<MultiDataTrigger.Conditions>
													<Condition Binding="{Settings CoverAspectRatio}" Value="92:43" />
													<Condition Binding="{Settings Fullscreen.Columns}" Value="9" />
												</MultiDataTrigger.Conditions>
												<MultiDataTrigger.Setters>
													<Setter Property="Margin" Value="0,0,0,-200"/>
												</MultiDataTrigger.Setters>
											</MultiDataTrigger>
											<MultiDataTrigger>
												<MultiDataTrigger.Conditions>
													<Condition Binding="{Settings CoverAspectRatio}" Value="92:43" />
													<Condition Binding="{Settings Fullscreen.Columns}" Value="10" />
												</MultiDataTrigger.Conditions>
												<MultiDataTrigger.Setters>
													<Setter Property="Margin" Value="0,0,0,-210"/>
												</MultiDataTrigger.Setters>
											</MultiDataTrigger>

											<DataTrigger Binding="{PluginSettings Plugin=ThemeOptions, Path=Options[ButtonControllerVisibleByDefault]}" Value="True">
												<Setter Property="Visibility" Value="Visible"/>
											</DataTrigger>
											<MultiDataTrigger>
												<MultiDataTrigger.Conditions>
													<Condition Binding="{Binding ElementName=PART_ButtonController, Path=IsChecked}" Value="True"/>
													<Condition Binding="{Binding ElementName=ChangeViewButton, Path=IsChecked}" Value="True"/>
												</MultiDataTrigger.Conditions>
												<Setter Property="Visibility" Value="Visible"/>
											</MultiDataTrigger>
											<MultiDataTrigger>
												<MultiDataTrigger.Conditions>
													<Condition Binding="{PluginSettings Plugin=ThemeOptions, Path=Options[ButtonControllerVisibleByDefault]}" Value="True"/>
													<Condition Binding="{Binding ElementName=PART_ButtonController, Path=IsChecked}" Value="True"/>
													<Condition Binding="{Binding ElementName=ChangeViewButton, Path=IsChecked}" Value="True"/>
												</MultiDataTrigger.Conditions>
												<Setter Property="Visibility" Value="Collapsed"/>
											</MultiDataTrigger>
											<MultiDataTrigger>
												<MultiDataTrigger.Conditions>
													<Condition Binding="{PluginSettings Plugin=ThemeOptions, Path=Options[ButtonControllerVisibleByDefault]}" Value="True"/>
													<Condition Binding="{Binding ElementName=ChangeViewButton, Path=IsChecked}" Value="False"/>
												</MultiDataTrigger.Conditions>
												<Setter Property="Visibility" Value="Collapsed"/>
											</MultiDataTrigger>
											<DataTrigger Binding="{Binding ElementName=PART_ElemGameDetails, Path=Visibility}" Value="Visible">
												<Setter Property="ItemsControl.Visibility" Value="Collapsed" />
											</DataTrigger>

											<MultiDataTrigger>
												<MultiDataTrigger.Conditions>
													<Condition Binding="{Binding ElementName=BottomBar, Path=IsKeyboardFocusWithin}" Value="False"/>
													<Condition Binding="{PluginSettings Plugin=ThemeOptions, Path=Options[BottomBarVisible]}" Value="True"/>
													<Condition Binding="{PluginSettings Plugin=ThemeOptions, Path=Options[PerformanceMode]}" Value="False"/>

												</MultiDataTrigger.Conditions>
												<MultiDataTrigger.EnterActions>
													<BeginStoryboard>
														<Storyboard>
															<DoubleAnimation Storyboard.TargetProperty="RenderTransform.Y" To="150" Duration="0:0:0.8" >
																<DoubleAnimation.EasingFunction>
																	<QuadraticEase EasingMode="EaseIn" />
																</DoubleAnimation.EasingFunction>

															</DoubleAnimation>
														</Storyboard>
													</BeginStoryboard>
												</MultiDataTrigger.EnterActions>
												<MultiDataTrigger.ExitActions>
													<BeginStoryboard>
														<Storyboard>
															<DoubleAnimation Storyboard.TargetProperty="RenderTransform.Y" From="150" To="50" Duration="0:0:0.8" >
																<DoubleAnimation.EasingFunction>
																	<QuadraticEase EasingMode="EaseOut" />
																</DoubleAnimation.EasingFunction>

															</DoubleAnimation>
														</Storyboard>
													</BeginStoryboard>
												</MultiDataTrigger.ExitActions>

											</MultiDataTrigger>
											<MultiDataTrigger>
												<MultiDataTrigger.Conditions>
													<Condition Binding="{Binding ElementName=PART_ElemGameDetails, Path=Visibility}" Value="Collapsed"/>
												</MultiDataTrigger.Conditions>
												<MultiDataTrigger.EnterActions>
													<BeginStoryboard>
														<Storyboard>
															<DoubleAnimation Storyboard.TargetProperty="Opacity" Duration="0:0:1" From="0" To="1" />

														</Storyboard>
													</BeginStoryboard>
												</MultiDataTrigger.EnterActions>
											</MultiDataTrigger>
										</Style.Triggers>
									</Style>
								</Grid.Style>
								<Grid Margin="0,30,0,0" Name="Buttons" HorizontalAlignment="Center" VerticalAlignment="Center">
									<Border Background="{DynamicResource OverlayMenu}" CornerRadius="{DynamicResource Corner}" Opacity="0.5"/>
									<StackPanel Grid.Column="1" Orientation="Horizontal" VerticalAlignment="Center" HorizontalAlignment="Center" Width="Auto" Height="70">

										<ButtonEx x:Name="PART_ButtonGameOptions"
												  Style="{DynamicResource ButtonBottomMenu}"
												  Content="{DynamicResource LOCSettingsLabel}" />

										<ButtonEx
												  Style="{StaticResource IconSelectButton}"
												  Content="{DynamicResource LOCControlCenterOpen}" />


										<ButtonEx x:Name="PART_ButtonInstall"
												  Style="{DynamicResource ButtonBottomMenu}"
												  Content="{DynamicResource LOCChangeView}" />

										<ButtonEx x:Name="PART_ButtonPlay"
												  Style="{DynamicResource ButtonBottomMenu}"
												  Content="{DynamicResource LOCChangeView}" />


										<ButtonEx x:Name="PART_ButtonDetails"
												  Style="{DynamicResource ButtonBottomMenu}"
												  Content="{DynamicResource LOCSettingsGameDetailsLabel}" />


										<ButtonEx Style="{StaticResource IconYButton}"
												  Content="{DynamicResource LOCGameOptions}" />


										<StackPanel Margin="0,0,10,0" Orientation="Horizontal" VerticalAlignment="Center">
											<TextBlock Margin="0,0,10,0" Text="g" Foreground="{DynamicResource TextBrush}"  HorizontalAlignment="Right" FontSize="35" FontFamily="{StaticResource FontXboxOneController}"/>
											<TextBlock Margin="0,0,10,0" Text="{StaticResource LOCSettingsSearch}" Style="{DynamicResource TextBlockBaseStyle}"  HorizontalAlignment="Right" VerticalAlignment="Center" FontSize="26"  />
										</StackPanel>


										<StackPanel Margin="0,0,10,0" Orientation="Horizontal" VerticalAlignment="Center">
											<TextBlock Margin="0,0,10,0" Text="x" Foreground="{DynamicResource TextBrush}"  HorizontalAlignment="Right" FontSize="35" FontFamily="{StaticResource FontXboxOneController}"/>
											<TextBlock Margin="0,0,10,0" Text="{StaticResource LOCFilter}" Style="{DynamicResource TextBlockBaseStyle}"  HorizontalAlignment="Right" VerticalAlignment="Center" FontSize="26"  />
										</StackPanel>
									</StackPanel>
								</Grid>
							</Grid>

							<!--AgeRatings-->
							<Grid Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="2" >
								<Grid.RenderTransform>
									<TransformGroup>
										<TranslateTransform x:Name="AgeRatingsTransform" />
									</TransformGroup>
								</Grid.RenderTransform>
								<Grid.Style>
									<Style TargetType="Grid">
										<Setter Property="Opacity" Value="0"/>
										<Setter Property="VerticalAlignment" Value="Top"/>
										<Setter Property="HorizontalAlignment" Value="Right"/>
										<Setter Property="Visibility" Value="Collapsed"/>
										<Style.Triggers>
											<MultiDataTrigger>
												<MultiDataTrigger.Conditions>
													<Condition Binding="{Binding ElementName=Id, Path=Opacity}" Value="1"/>
													<Condition Binding="{PluginSettings Plugin=ThemeOptions, Path=Options[PerformanceMode]}" Value="False"/>
												</MultiDataTrigger.Conditions>
												<MultiDataTrigger.EnterActions>
													<BeginStoryboard>
														<Storyboard>
															<DoubleAnimation Storyboard.TargetProperty="Opacity" BeginTime="0:0:3" Duration="0:0:0.5" To="0.9"/>
															<DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(TranslateTransform.X)" BeginTime="0:0:3" From="180" To="0" Duration="0:0:1.5" >
																<DoubleAnimation.EasingFunction>
																	<SineEase EasingMode="EaseOut" />
																</DoubleAnimation.EasingFunction>
															</DoubleAnimation>
														</Storyboard>
													</BeginStoryboard>
												</MultiDataTrigger.EnterActions>
												<MultiDataTrigger.ExitActions>
													<BeginStoryboard>
														<Storyboard>
															<DoubleAnimation Storyboard.TargetProperty="Opacity" Duration="0:0:0" To="0"/>
														</Storyboard>
													</BeginStoryboard>
												</MultiDataTrigger.ExitActions>
												<Setter Property="Visibility" Value="Visible"/>
											</MultiDataTrigger>
											<DataTrigger Binding="{Binding ElementName=ChangeViewButton, Path=IsChecked}" Value="False">
												<Setter Property="Visibility" Value="Collapsed"/>
											</DataTrigger>

										</Style.Triggers>
									</Style>
								</Grid.Style>
								<StackPanel Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Center" Panel.ZIndex="-41" Margin="0,0,0,0" >

									<ItemsControlEx ItemsSource="{Binding SelectedGame.AgeRatings}"
									IsTabStop="False" IsEnabled="False" Focusable="False">
										<ItemsControlEx.ItemTemplate>
											<DataTemplate>
												<Grid HorizontalAlignment="Right" VerticalAlignment="Top">
													<Grid.ColumnDefinitions>
														<ColumnDefinition Width="auto" />
													</Grid.ColumnDefinitions>
													<Border x:Name="RatingIcon" Background="Transparent" CornerRadius="0" Height="80" Width="auto" Margin="0"
															Visibility="Visible">
														<Image x:Name="RatingIconImage"
											   RenderOptions.BitmapScalingMode="Fant"
											   SnapsToDevicePixels="True"
											   Source="{ThemeFileBinding Name, PathFormat='Icons/AgeRating/{0}.png.'}" />
													</Border>
												</Grid>
												<DataTemplate.Triggers>
													<DataTrigger Binding="{Binding ElementName=PART_ElemGameDetails, Path=Visibility}" Value="Visible">
														<Setter Property="Visibility" Value="Collapsed"/>
													</DataTrigger>
													<MultiDataTrigger>
														<MultiDataTrigger.Conditions>
															<Condition Binding="{Binding ElementName=PART_ElemGameDetails, Path=Visibility}" Value="Visible"/>
														</MultiDataTrigger.Conditions>
														<MultiDataTrigger.Setters>
															<Setter Property="Visibility" Value="Collapsed"/>
															<Setter Property="Opacity" Value="0"/>
														</MultiDataTrigger.Setters>
														<MultiDataTrigger.EnterActions>
															<BeginStoryboard>
																<Storyboard>
																	<DoubleAnimation Storyboard.TargetProperty="Opacity" Duration="0:0:0" To="0"/>
																</Storyboard>
															</BeginStoryboard>
														</MultiDataTrigger.EnterActions>
														<MultiDataTrigger.ExitActions>
															<BeginStoryboard>
																<Storyboard>
																	<DoubleAnimation Storyboard.TargetProperty="Opacity" BeginTime="0:0:3" Duration="0:0:1.5" To="0.9"/>
																	<ThicknessAnimation Storyboard.TargetProperty="Margin" BeginTime="0:0:3" Duration="0:0:2" From="0,0,-300,0"
																						To="0,0,0,0" AccelerationRatio="0.5" DecelerationRatio="0.5" />
																</Storyboard>
															</BeginStoryboard>
														</MultiDataTrigger.ExitActions>
													</MultiDataTrigger>

													<DataTrigger Binding="{Binding ElementName=RatingIconImage, Path=Source}" Value="{x:Null}">
														<Setter Property="Visibility" Value="Collapsed"/>
													</DataTrigger>
													<DataTrigger Binding="{PluginSettings Plugin=ThemeOptions, Path=Options[AgeRatingOnMainScreen]}" Value="False">
														<Setter Property="Visibility" Value="Collapsed"/>
													</DataTrigger>
													<DataTrigger Binding="{PluginSettings Plugin=ThemeOptions, Path=Options[AltInfo]}" Value="True">
														<Setter Property="Visibility" Value="Collapsed"/>
													</DataTrigger>

												</DataTemplate.Triggers>
											</DataTemplate>
										</ItemsControlEx.ItemTemplate>
									</ItemsControlEx>
								</StackPanel>
							</Grid>

							<!--Wallpaper Vertical List-->
							<Grid Name="Wallpaper" Panel.ZIndex="1" CacheMode="BitmapCache">

								<Grid.Style>
									<Style TargetType="Grid">
										<!-- Default settings for the Grid -->
										<Setter Property="Grid.Row" Value="1" />
										<Setter Property="Grid.RowSpan" Value="2" />
										<Setter Property="Grid.Column" Value="1" />
										<Setter Property="Margin" Value="20,20,1430,-40" />

										<!-- Triggers for dynamic changes based on conditions -->
										<Style.Triggers>
											<MultiDataTrigger>
												<MultiDataTrigger.Conditions>
													<Condition Binding="{Binding ElementName=ChangeViewButton, Path=IsChecked}" Value="False" />
													<Condition Binding="{Binding ElementName=PART_ViewHost, Path=ActualWidth}" Value="1728" />
												</MultiDataTrigger.Conditions>

												<!-- Setters for the Grid when conditions are met -->
												<Setter Property="Margin" Value="20,20,1230,-40"/>

											</MultiDataTrigger>
										</Style.Triggers>
									</Style>
								</Grid.Style>
								<DockPanel Height="220" Width="420" Margin="20,5,0,0" Opacity="1" HorizontalAlignment="Left" VerticalAlignment="Top" >
									<FadeImage Source="{Binding SelectedGame.BackgroundImage}" HorizontalContentAlignment="Center" HorizontalAlignment="Center">
										<FadeImage.RenderTransform>
											<ScaleTransform ScaleX="1" ScaleY="1" />
										</FadeImage.RenderTransform>
										<FadeImage.Style>
											<Style TargetType="FadeImage">
												<Setter Property="Stretch" Value="UniformToFill"/>
												<Style.Triggers>

													<DataTrigger Binding="{Binding ElementName=ChangeViewButton, Path=IsChecked}" Value="True">
														<Setter Property="Visibility" Value="Collapsed"/>
													</DataTrigger>
													<DataTrigger Binding="{Binding ElementName=ChangeViewButton, Path=IsChecked}" Value="False">
														<Setter Property="Visibility" Value="Visible"/>
													</DataTrigger>
													<DataTrigger Binding="{Binding ElementName=PART_ElemGameDetails, Path=Visibility}" Value="Collapsed">
														<Setter Property="Grid.Row" Value="0"/>
														<Setter Property="Grid.ColumnSpan" Value="3" />
														<Setter Property="Grid.RowSpan" Value="3" />
														<Setter Property="VerticalAlignment" Value="Top" />
														<Setter Property="HorizontalAlignment" Value="Center"/>
														<DataTrigger.EnterActions>
															<BeginStoryboard>
																<Storyboard  FillBehavior="Stop">
																	<DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleX)" From="4" To="1"
																					 Duration="0:0:0.4" AccelerationRatio="0.3" DecelerationRatio="0.7" />
																	<DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleY)" From="4" To="1"
																					 Duration="0:0:0.4" AccelerationRatio="0.3" DecelerationRatio="0.7" />
																</Storyboard>
															</BeginStoryboard>
														</DataTrigger.EnterActions>
													</DataTrigger>
													<DataTrigger Binding="{Binding ElementName=PART_ElemGameDetails, Path=Visibility}" Value="Visible" >
														<DataTrigger.EnterActions>
															<BeginStoryboard>
																<Storyboard FillBehavior="Stop">
																	<DoubleAnimation Storyboard.TargetProperty="Opacity" BeginTime="0:0:0.1" Duration="0:0:0" From="1" To="0"/>
																	<ThicknessAnimation Storyboard.TargetProperty="Margin" BeginTime="0:0:0.1" Duration="0:0:0.6" To="-40,-115,-1460,-750"
																						AccelerationRatio="0.3" DecelerationRatio="0.7" />
																</Storyboard>
															</BeginStoryboard>
														</DataTrigger.EnterActions>
													</DataTrigger>
													<DataTrigger Binding="{Binding ElementName=PART_ElemGameDetails, Path=Visibility}" Value="Collapsed" >
														<DataTrigger.EnterActions>
															<BeginStoryboard>
																<Storyboard>
																	<DoubleAnimation Storyboard.TargetProperty="Opacity" Duration="0:0:0" To="1" />
																</Storyboard>
															</BeginStoryboard>
														</DataTrigger.EnterActions>
													</DataTrigger>
												</Style.Triggers>
											</Style>
										</FadeImage.Style>
									</FadeImage>
								</DockPanel>
								<DockPanel>
									<DockPanel.Style>
										<Style TargetType="DockPanel">
											<Style.Triggers>
												<DataTrigger Binding="{Binding ElementName=PART_ElemGameDetails, Path=Visibility}" Value="Collapsed" >
													<DataTrigger.EnterActions>
														<BeginStoryboard>
															<Storyboard>
																<DoubleAnimation Storyboard.TargetProperty="Opacity" BeginTime="0:0:0" Duration="0:0:1.5" From="0" To="1" />
															</Storyboard>
														</BeginStoryboard>
													</DataTrigger.EnterActions>
												</DataTrigger>
												<DataTrigger Binding="{Binding ElementName=PART_ElemGameDetails, Path=Visibility}" Value="Visible" >
													<Setter Property="Visibility" Value="Collapsed"/>
													<Setter Property="Opacity" Value="0"/>
												</DataTrigger>

												<DataTrigger Binding="{Binding ElementName=ChangeViewButton, Path=IsChecked}" Value="True">
													<Setter Property="Visibility" Value="Collapsed"/>
												</DataTrigger>
												<DataTrigger Binding="{Binding ElementName=ChangeViewButton, Path=IsChecked}" Value="False">
													<Setter Property="Visibility" Value="Visible"/>
												</DataTrigger>
											</Style.Triggers>
										</Style>
									</DockPanel.Style>

									<StackPanel Orientation="Vertical" Margin="10,230,0,0" >
										<StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Margin="0,0,0,0" >
											<TextBlock Text="{Binding SelectedGame.DisplayName}" Margin="0,2,0,0" FontSize="30" Style="{StaticResource TextVerticalStyle}"
													   TextTrimming="CharacterEllipsis" TextWrapping="Wrap" MaxWidth="460"/>
										</StackPanel>

										<Grid HorizontalAlignment="Left" Margin="0,50,0,0" MaxWidth="500">
											<Grid.ColumnDefinitions>
												<ColumnDefinition Width="Auto" />
												<!-- Colonne des titres -->
												<ColumnDefinition Width="5" />
												<!-- Colonne du trait vertical -->
												<ColumnDefinition Width="*" />
												<!-- Colonne des valeurs -->
											</Grid.ColumnDefinitions>

											<Grid.RowDefinitions>
												<RowDefinition Height="Auto" />
												<RowDefinition Height="Auto" />
												<RowDefinition Height="Auto" />
												<RowDefinition Height="Auto" />
												<RowDefinition Height="Auto" />
												<RowDefinition Height="Auto" />
												<RowDefinition Height="Auto" />
												<RowDefinition Height="Auto" />
											</Grid.RowDefinitions>

											<!-- Titres -->
											<TextBlock Text="{DynamicResource LOCLibrary}" HorizontalAlignment="Left" Margin="0,5,2,0" FontSize="26" Style="{StaticResource TextVerticalStyle}" TextTrimming="CharacterEllipsis" MaxWidth="220" Grid.Column="0" Grid.Row="0" />
											<TextBlock Text="{DynamicResource LOCGamePlatformTitle}" HorizontalAlignment="Left" Margin="0,5,2,0" FontSize="26" Style="{StaticResource TextVerticalStyle}" TextTrimming="CharacterEllipsis" MaxWidth="220" Grid.Column="0" Grid.Row="1" />
											<TextBlock Text="{DynamicResource LOCCriticScore}" HorizontalAlignment="Left" Margin="0,5,2,0" FontSize="26" Style="{StaticResource TextVerticalStyle}" TextTrimming="CharacterEllipsis" MaxWidth="220" Grid.Column="0" Grid.Row="2" />
											<TextBlock Text="{DynamicResource LOCCommunityScore}" HorizontalAlignment="Left" Margin="0,5,2,0" FontSize="26" Style="{StaticResource TextVerticalStyle}" TextTrimming="CharacterEllipsis" MaxWidth="220" Grid.Column="0" Grid.Row="3" />
											<TextBlock Text="{DynamicResource LOCTimePlayed}" HorizontalAlignment="Left" Margin="0,5,2,0" FontSize="26" Style="{StaticResource TextVerticalStyle}" TextTrimming="CharacterEllipsis" MaxWidth="220" Grid.Column="0" Grid.Row="4" />
											<TextBlock Text="{DynamicResource LOCAgeRatingsLabel}" HorizontalAlignment="Left" Margin="0,5,2,0" FontSize="26" Style="{StaticResource TextVerticalStyle}" TextTrimming="CharacterEllipsis" MaxWidth="220" Grid.Column="0" Grid.Row="5" />
											<TextBlock Text="{DynamicResource LOCSize}" HorizontalAlignment="Left" Margin="0,5,2,0" FontSize="26" Style="{StaticResource TextVerticalStyle}" TextTrimming="CharacterEllipsis" MaxWidth="220" Grid.Column="0" Grid.Row="6" />
											<TextBlock Text="{DynamicResource LOCGenresLabel}" HorizontalAlignment="Left" Margin="0,5,2,0" FontSize="26" Style="{StaticResource TextVerticalStyle}" TextTrimming="CharacterEllipsis" MaxWidth="220" Grid.Column="0" Grid.Row="7" />

											<!-- Trait vertical -->
											<Rectangle Fill="#55FFFFFF" Width="1" HorizontalAlignment="Center" VerticalAlignment="Stretch" Opacity="0.7" Grid.Column="1" Grid.RowSpan="8" />

											<!-- Valeurs -->
											<TextBlock Text="{Binding SelectedGame.Source}" HorizontalAlignment="Left" Margin="2,5,0,0" FontSize="26" Style="{StaticResource TextVerticalStyle}" TextTrimming="CharacterEllipsis" MaxWidth="230" Grid.Column="2" Grid.Row="0" />
											<TextBlock Text="{Binding SelectedGame.Platforms, Converter={StaticResource ListToStringConverter}}" HorizontalAlignment="Left" Margin="2,5,0,0" FontSize="26" Style="{StaticResource TextVerticalStyle}" TextTrimming="CharacterEllipsis" MaxWidth="230" Grid.Column="2" Grid.Row="1" />
											<TextBlock Text="{Binding SelectedGame.CriticScore}" HorizontalAlignment="Left" Margin="2,5,0,0" FontSize="26" Style="{StaticResource TextVerticalStyle}" TextTrimming="CharacterEllipsis" MaxWidth="230" Grid.Column="2" Grid.Row="2" />
											<TextBlock Text="{Binding SelectedGame.CommunityScore}" HorizontalAlignment="Left" Margin="2,5,0,0" FontSize="26" Style="{StaticResource TextVerticalStyle}" TextTrimming="CharacterEllipsis" MaxWidth="230" Grid.Column="2" Grid.Row="3" />
											<TextBlock Text="{Binding SelectedGame.Playtime, Converter={StaticResource PlayTimeToStringConverter}}" HorizontalAlignment="Left" Margin="2,5,0,0" FontSize="26" Style="{StaticResource TextVerticalStyle}" TextTrimming="CharacterEllipsis" MaxWidth="230" Grid.Column="2" Grid.Row="4" />
											<TextBlock Text="{Binding SelectedGame.AgeRatings, Converter={StaticResource ListToStringConverter}}" HorizontalAlignment="Left" Margin="2,5,0,0" FontSize="26" Style="{StaticResource TextVerticalStyle}" TextTrimming="CharacterEllipsis" MaxWidth="230" Grid.Column="2" Grid.Row="5" />
											<TextBlock Text="{Binding SelectedGame.InstallSize, Converter={StaticResource NullableUlongBytesSizeToStringConverter}, ConverterParameter=' / '}" HorizontalAlignment="Left" Margin="2,5,0,0" FontSize="26" Style="{StaticResource TextVerticalStyle}" TextTrimming="CharacterEllipsis" MaxWidth="230" Grid.Column="2" Grid.Row="6" />
											<TextBlock Text="{Binding SelectedGame.Genres, Converter={StaticResource ListToStringConverter}, ConverterParameter=' / '}" HorizontalAlignment="Left" Margin="2,5,0,0" FontSize="26" Style="{StaticResource TextVerticalStyle}" TextTrimming="CharacterEllipsis" TextWrapping="Wrap" MaxHeight="100" MaxWidth="230" Grid.Column="2" Grid.Row="7" />
										</Grid>

									</StackPanel>
								</DockPanel>
							</Grid>

							<!--Image Access BottomBar -->
							<Grid>
								<Grid.Style>
									<Style TargetType="Grid">
										<Setter Property="Grid.Row" Value="4"/>
										<Setter Property="Grid.RowSpan" Value="2"/>
										<Setter Property="Grid.ColumnSpan" Value="3"/>
										<Setter Property="VerticalAlignment" Value="Bottom"/>
										<Setter Property="Margin" Value="0,0,0,0"/>
										<Style.Triggers>
											<DataTrigger Binding="{Binding ElementName=BottomBar, Path=IsKeyboardFocusWithin}" Value="False">
												<DataTrigger.EnterActions>
													<BeginStoryboard>
														<Storyboard>
															<DoubleAnimation Storyboard.TargetProperty="Opacity" BeginTime="0:0:0.6" Duration="0:0:0.6" From="0" To="0.5" />
														</Storyboard>
													</BeginStoryboard>
												</DataTrigger.EnterActions>
												<DataTrigger.ExitActions>
													<BeginStoryboard>
														<Storyboard>
															<DoubleAnimation Storyboard.TargetProperty="Opacity" BeginTime="0:0:0" Duration="0:0:0.2" From="0.5" To="0" />
														</Storyboard>
													</BeginStoryboard>
												</DataTrigger.ExitActions>
											</DataTrigger>

											<DataTrigger Binding="{PluginSettings Plugin=ThemeOptions, Path=Options[PerformanceMode]}" Value="True">
												<Setter Property="Visibility" Value="Collapsed" />
											</DataTrigger>
											<DataTrigger Binding="{Binding Path=IsChecked, ElementName=ChangeViewButton}" Value="False">
												<Setter Property="Visibility" Value="Collapsed" />
											</DataTrigger>
											<DataTrigger Binding="{PluginSettings Plugin=ThemeOptions, Path=Options[BottomBarVisible]}" Value="False">
												<Setter Property="Visibility" Value="Collapsed" />
											</DataTrigger>
											<DataTrigger Binding="{Binding ElementName=PART_ElemGameDetails, Path=Visibility}" Value="Visible">
												<Setter Property="Visibility" Value="Collapsed" />
											</DataTrigger>
										</Style.Triggers>
									</Style>
								</Grid.Style>
								<Image Source="{ThemeFile 'Images/BottomBar.png'}" MaxHeight="35" MaxWidth="35" Stretch="UniformToFill"/>
							</Grid>

							<!--CoverListHorizontal-->
							<DockPanel x:Name="ListGame">
								<DockPanel.InputBindings>
									<KeyBinding Key="Back" x:Name="CloseKey" Command="{Binding Content.ChangeProperty, ElementName=ThemeOptions_Command}"	CommandParameter="[Setter ElementName=ChangeViewButton, Property=IsChecked, Value=True]" />
								</DockPanel.InputBindings>
								<DockPanel.Style>
									<Style TargetType="DockPanel">
										<Setter Property="Margin" Value="0,0,0,0"/>
										<Setter Property="Opacity" Value="1"/>
										<Setter Property="Grid.Row" Value="2"/>
										<Setter Property="Grid.RowSpan" Value="2"/>
										<Setter Property="Grid.ColumnSpan" Value="3"/>
										<Setter Property="Height" Value="450"/>
										<Setter Property="VerticalAlignment" Value="Bottom"/>
										<Setter Property="RenderTransform">
											<Setter.Value>
												<TranslateTransform/>
											</Setter.Value>
										</Setter>
										<Setter Property="Effect">
											<Setter.Value>
												<DropShadowEffect ShadowDepth="5" BlurRadius="15" RenderingBias="Performance" Direction="270" Color="Black" Opacity="0.8"/>
											</Setter.Value>
										</Setter>
										<Style.Triggers>

											<DataTrigger Binding="{Settings CoverAspectRatio}" Value="1:1">
												<Setter Property="Height" Value="350"/>
											</DataTrigger>

											<DataTrigger Binding="{Settings CoverAspectRatio}" Value="92:43">
												<Setter Property="Height" Value="350"/>
											</DataTrigger>




											<!--CoverDVD-->
											<MultiDataTrigger>
												<MultiDataTrigger.Conditions>
													<Condition Binding="{Settings Fullscreen.Columns}" Value="10" />
												</MultiDataTrigger.Conditions>
												<MultiDataTrigger.Setters>
													<Setter Property="Margin" Value="0,0,0,-40"/>
												</MultiDataTrigger.Setters>
											</MultiDataTrigger>

											<MultiDataTrigger>
												<MultiDataTrigger.Conditions>
													<Condition Binding="{Settings Fullscreen.Columns}" Value="9" />
												</MultiDataTrigger.Conditions>
												<MultiDataTrigger.Setters>
													<Setter Property="Margin" Value="0,0,0,-30"/>
												</MultiDataTrigger.Setters>
											</MultiDataTrigger>

											<MultiDataTrigger>
												<MultiDataTrigger.Conditions>
													<Condition Binding="{Settings Fullscreen.Columns}" Value="8" />
												</MultiDataTrigger.Conditions>
												<MultiDataTrigger.Setters>
													<Setter Property="Margin" Value="0,0,0,-20"/>
												</MultiDataTrigger.Setters>
											</MultiDataTrigger>

											<MultiDataTrigger>
												<MultiDataTrigger.Conditions>
													<Condition Binding="{Settings Fullscreen.Columns}" Value="7" />
												</MultiDataTrigger.Conditions>
												<MultiDataTrigger.Setters>
													<Setter Property="Margin" Value="0,0,0,0"/>
												</MultiDataTrigger.Setters>
											</MultiDataTrigger>


											<!--CoverSquare-->
											<MultiDataTrigger>
												<MultiDataTrigger.Conditions>
													<Condition Binding="{Binding ElementName=PART_ViewHost, Path=ActualWidth}" Value="1728" />
													<Condition Binding="{Settings CoverAspectRatio}" Value="1:1" />
												</MultiDataTrigger.Conditions>
												<MultiDataTrigger.Setters>
													<Setter Property="Height" Value="300"/>
												</MultiDataTrigger.Setters>
											</MultiDataTrigger>

											<MultiDataTrigger>
												<MultiDataTrigger.Conditions>
													<Condition Binding="{Settings CoverAspectRatio}" Value="1:1" />
													<Condition Binding="{Settings Fullscreen.Columns}" Value="10" />
												</MultiDataTrigger.Conditions>
												<MultiDataTrigger.Setters>
													<Setter Property="Margin" Value="0,0,0,-30"/>
												</MultiDataTrigger.Setters>
											</MultiDataTrigger>

											<MultiDataTrigger>
												<MultiDataTrigger.Conditions>
													<Condition Binding="{Settings CoverAspectRatio}" Value="1:1" />
													<Condition Binding="{Settings Fullscreen.Columns}" Value="9" />
												</MultiDataTrigger.Conditions>
												<MultiDataTrigger.Setters>
													<Setter Property="Margin" Value="0,0,0,-20"/>
												</MultiDataTrigger.Setters>
											</MultiDataTrigger>

											<MultiDataTrigger>
												<MultiDataTrigger.Conditions>
													<Condition Binding="{Settings CoverAspectRatio}" Value="1:1" />
													<Condition Binding="{Settings Fullscreen.Columns}" Value="8" />
												</MultiDataTrigger.Conditions>
												<MultiDataTrigger.Setters>
													<Setter Property="Margin" Value="0,0,0,-10"/>
												</MultiDataTrigger.Setters>
											</MultiDataTrigger>

											<MultiDataTrigger>
												<MultiDataTrigger.Conditions>
													<Condition Binding="{Settings CoverAspectRatio}" Value="1:1" />
													<Condition Binding="{Settings Fullscreen.Columns}" Value="7" />
												</MultiDataTrigger.Conditions>
												<MultiDataTrigger.Setters>
													<Setter Property="Margin" Value="0,0,0,5"/>
												</MultiDataTrigger.Setters>
											</MultiDataTrigger>

											<MultiDataTrigger>
												<MultiDataTrigger.Conditions>
													<Condition Binding="{Settings CoverAspectRatio}" Value="1:1" />
													<Condition Binding="{Settings Fullscreen.Columns}" Value="6" />
												</MultiDataTrigger.Conditions>
												<MultiDataTrigger.Setters>
													<Setter Property="Margin" Value="0,0,0,15"/>
												</MultiDataTrigger.Setters>
											</MultiDataTrigger>

											<MultiDataTrigger>
												<MultiDataTrigger.Conditions>
													<Condition Binding="{Settings CoverAspectRatio}" Value="1:1" />
													<Condition Binding="{Settings Fullscreen.Columns}" Value="5" />
												</MultiDataTrigger.Conditions>
												<MultiDataTrigger.Setters>
													<Setter Property="Margin" Value="0,0,0,20"/>
												</MultiDataTrigger.Setters>
											</MultiDataTrigger>

											<MultiDataTrigger>
												<MultiDataTrigger.Conditions>
													<Condition Binding="{Settings CoverAspectRatio}" Value="1:1" />
													<Condition Binding="{Settings Fullscreen.Columns}" Value="4" />
												</MultiDataTrigger.Conditions>
												<MultiDataTrigger.Setters>
													<Setter Property="Margin" Value="0,0,0,25"/>
												</MultiDataTrigger.Setters>
											</MultiDataTrigger>

											<MultiDataTrigger>
												<MultiDataTrigger.Conditions>
													<Condition Binding="{Settings CoverAspectRatio}" Value="1:1" />
													<Condition Binding="{Settings Fullscreen.Columns}" Value="5" />
												</MultiDataTrigger.Conditions>
												<MultiDataTrigger.Setters>
													<Setter Property="Height" Value="400"/>
												</MultiDataTrigger.Setters>
											</MultiDataTrigger>


											<!--CoverStylebanner-->
											<MultiDataTrigger>
												<MultiDataTrigger.Conditions>
													<Condition Binding="{Settings CoverAspectRatio}" Value="92:43" />
													<Condition Binding="{Settings Fullscreen.Columns}" Value="10" />
												</MultiDataTrigger.Conditions>
												<MultiDataTrigger.Setters>
													<Setter Property="Height" Value="170"/>
													<Setter Property="Margin" Value="0,0,0,10"/>
												</MultiDataTrigger.Setters>
											</MultiDataTrigger>
											<MultiDataTrigger>
												<MultiDataTrigger.Conditions>
													<Condition Binding="{Settings CoverAspectRatio}" Value="92:43" />
													<Condition Binding="{Settings Fullscreen.Columns}" Value="9" />
												</MultiDataTrigger.Conditions>
												<MultiDataTrigger.Setters>
													<Setter Property="Height" Value="190"/>
													<Setter Property="Margin" Value="0,0,0,0"/>
												</MultiDataTrigger.Setters>
											</MultiDataTrigger>
											<MultiDataTrigger>
												<MultiDataTrigger.Conditions>
													<Condition Binding="{Settings CoverAspectRatio}" Value="92:43" />
													<Condition Binding="{Settings Fullscreen.Columns}" Value="8" />
												</MultiDataTrigger.Conditions>
												<MultiDataTrigger.Setters>
													<Setter Property="Height" Value="200"/>
													<Setter Property="Margin" Value="0,0,0,5"/>
												</MultiDataTrigger.Setters>
											</MultiDataTrigger>
											<MultiDataTrigger>
												<MultiDataTrigger.Conditions>
													<Condition Binding="{Settings CoverAspectRatio}" Value="92:43" />
													<Condition Binding="{Settings Fullscreen.Columns}" Value="7" />
												</MultiDataTrigger.Conditions>
												<MultiDataTrigger.Setters>
													<Setter Property="Height" Value="210"/>
													<Setter Property="Margin" Value="0,0,0,10"/>
												</MultiDataTrigger.Setters>
											</MultiDataTrigger>
											<MultiDataTrigger>
												<MultiDataTrigger.Conditions>
													<Condition Binding="{Settings CoverAspectRatio}" Value="92:43" />
													<Condition Binding="{Settings Fullscreen.Columns}" Value="6" />
												</MultiDataTrigger.Conditions>
												<MultiDataTrigger.Setters>
													<Setter Property="Height" Value="220"/>
													<Setter Property="Margin" Value="0,0,0,15"/>
												</MultiDataTrigger.Setters>
											</MultiDataTrigger>
											<MultiDataTrigger>
												<MultiDataTrigger.Conditions>
													<Condition Binding="{Settings CoverAspectRatio}" Value="92:43" />
													<Condition Binding="{Settings Fullscreen.Columns}" Value="5" />
												</MultiDataTrigger.Conditions>
												<MultiDataTrigger.Setters>
													<Setter Property="Height" Value="230"/>
													<Setter Property="Margin" Value="0,0,0,20"/>
												</MultiDataTrigger.Setters>
											</MultiDataTrigger>
											<MultiDataTrigger>
												<MultiDataTrigger.Conditions>
													<Condition Binding="{Settings CoverAspectRatio}" Value="92:43" />
													<Condition Binding="{Settings Fullscreen.Columns}" Value="4" />
												</MultiDataTrigger.Conditions>
												<MultiDataTrigger.Setters>
													<Setter Property="Height" Value="250"/>
													<Setter Property="Margin" Value="0,0,0,25"/>
												</MultiDataTrigger.Setters>
											</MultiDataTrigger>
											<MultiDataTrigger>
												<MultiDataTrigger.Conditions>
													<Condition Binding="{Settings CoverAspectRatio}" Value="92:43" />
													<Condition Binding="{Settings Fullscreen.Columns}" Value="3" />
												</MultiDataTrigger.Conditions>
												<MultiDataTrigger.Setters>
													<Setter Property="Height" Value="380"/>
													<Setter Property="Margin" Value="0,0,0,-8"/>
												</MultiDataTrigger.Setters>
											</MultiDataTrigger>
											<MultiDataTrigger>
												<MultiDataTrigger.Conditions>
													<Condition Binding="{Settings CoverAspectRatio}" Value="92:43" />
													<Condition Binding="{Settings Fullscreen.Columns}" Value="2" />
												</MultiDataTrigger.Conditions>
												<MultiDataTrigger.Setters>
													<Setter Property="Height" Value="400"/>
													<Setter Property="Margin" Value="0,0,0,30"/>
												</MultiDataTrigger.Setters>
											</MultiDataTrigger>
											<MultiDataTrigger>
												<MultiDataTrigger.Conditions>
													<Condition Binding="{Settings CoverAspectRatio}" Value="92:43" />
													<Condition Binding="{Settings Fullscreen.Columns}" Value="1" />
												</MultiDataTrigger.Conditions>
												<MultiDataTrigger.Setters>
													<Setter Property="Height" Value="400"/>
													<Setter Property="Margin" Value="0,0,0,35"/>
												</MultiDataTrigger.Setters>
											</MultiDataTrigger>


											<MultiDataTrigger>
												<MultiDataTrigger.Conditions>
													<Condition Binding="{Binding ElementName=BottomBar, Path=IsKeyboardFocusWithin}" Value="False"/>
													<Condition Binding="{Binding ElementName=ChangeViewButton, Path=IsChecked}" Value="True" />
													<Condition Binding="{PluginSettings Plugin=ThemeOptions, Path=Options[BottomBarVisible]}" Value="True"/>
													<Condition Binding="{PluginSettings Plugin=ThemeOptions, Path=Options[PerformanceMode]}" Value="False"/>
												</MultiDataTrigger.Conditions>
												<MultiDataTrigger.EnterActions>
													<BeginStoryboard>
														<Storyboard >
															<DoubleAnimation Storyboard.TargetProperty="RenderTransform.Y" From="0" To="100" Duration="0:0:0.8" DecelerationRatio="0.3" AccelerationRatio="0.7"/>
														</Storyboard>
													</BeginStoryboard>
												</MultiDataTrigger.EnterActions>
												<MultiDataTrigger.ExitActions>
													<BeginStoryboard>
														<Storyboard>
															<DoubleAnimation Storyboard.TargetProperty="RenderTransform.Y" From="100" To="0" Duration="0:0:0.6" AccelerationRatio="0.3" DecelerationRatio="0.7"/>
														</Storyboard>
													</BeginStoryboard>
												</MultiDataTrigger.ExitActions>
											</MultiDataTrigger>


											<!--CoverListVertical-->
											<MultiDataTrigger>
												<MultiDataTrigger.Conditions>
													<Condition Binding="{Binding ElementName=ChangeViewButton, Path=IsChecked}" Value="False" />
												</MultiDataTrigger.Conditions>
												<MultiDataTrigger.Setters>
													<Setter Property="Grid.Row" Value="1"/>
													<Setter Property="Grid.RowSpan" Value="3"/>
													<Setter Property="Height" Value="909"/>
													<Setter Property="Width" Value="1400"/>
													<Setter Property="Margin" Value="0,0,0,0"/>
													<Setter Property="HorizontalAlignment" Value="Right"/>
													<Setter Property="VerticalAlignment" Value="Bottom"/>
												</MultiDataTrigger.Setters>
											</MultiDataTrigger>

											<MultiDataTrigger>
												<MultiDataTrigger.Conditions>
													<Condition Binding="{Binding ElementName=ChangeViewButton, Path=IsChecked}" Value="False" />
													<Condition Binding="{Binding ElementName=PART_ViewHost, Path=ActualWidth}" Value="1728" />
												</MultiDataTrigger.Conditions>
												<MultiDataTrigger.Setters>
													<Setter Property="Grid.Row" Value="1"/>
													<Setter Property="Grid.RowSpan" Value="3"/>
													<Setter Property="Height" Value="900"/>
													<Setter Property="Width" Value="1200"/>
													<Setter Property="Margin" Value="0,0,0,10"/>
													<Setter Property="HorizontalAlignment" Value="Right"/>
													<Setter Property="VerticalAlignment" Value="Bottom"/>
												</MultiDataTrigger.Setters>
											</MultiDataTrigger>

											<MultiDataTrigger>
												<MultiDataTrigger.Conditions>
													<Condition Binding="{Binding ElementName=Acceuil, Path=IsChecked}" Value="False" />
													<Condition Binding="{Binding ElementName=Wrong, Path=IsChecked}" Value="False" />
												</MultiDataTrigger.Conditions>
												<MultiDataTrigger.Setters>
													<Setter Property="Visibility" Value="Collapsed"/>
												</MultiDataTrigger.Setters>
											</MultiDataTrigger>

											<DataTrigger Binding="{Binding Source={StaticResource AcceuilOrNot}}" Value="False">
												<Setter Property="Visibility" Value="Visible"/>
											</DataTrigger>
										</Style.Triggers>
									</Style>
								</DockPanel.Style>

								<ListBoxEx x:Name="PART_ListGameItems" DockPanel.Dock="Bottom"
										   Background="Transparent" BorderThickness="0" BorderBrush="Transparent"
										   FocusVisualStyle="{x:Null}" KeyboardNavigation.DirectionalNavigation="Once"
										   VirtualizingStackPanel.IsVirtualizing="True"
										   VirtualizingStackPanel.VirtualizationMode="Recycling"
										   VirtualizingStackPanel.ScrollUnit="Pixel"
										   VirtualizingStackPanel.CacheLength="2"
										   ScrollViewer.VerticalScrollBarVisibility="Disabled"
										   ScrollViewer.HorizontalScrollBarVisibility="Disabled">
								</ListBoxEx>
							</DockPanel>

							<!--NoGamesFound-->
							<Grid Grid.RowSpan="5" Grid.ColumnSpan="4" Margin="0,0,0,80">
								<Grid.Style>
									<Style TargetType="Grid">
										<Setter Property="Visibility" Value="Collapsed" />
										<Style.Triggers>
											<DataTrigger Binding="{Binding Items.Count, ElementName=PART_ListGameItems}" Value="0">
												<Setter Property="Visibility" Value="Visible" />
											</DataTrigger>
										</Style.Triggers>
									</Style>
								</Grid.Style>
								<Grid Background="{DynamicResource OverlayMenu}">
									<TextBlock FontSize="40"
											   Text="{DynamicResource LOCNoGamesFound}"
											   TextAlignment="Center" HorizontalAlignment="Center" VerticalAlignment="Center">
										<TextBlock.Style>
											<Style TargetType="TextBlock" BasedOn="{StaticResource TextBlockBaseStyle}">
												<Setter Property="Visibility" Value="Collapsed" />
												<Setter Property="Opacity" Value="0" />
												<Setter Property="Margin" Value="0,0,0,0" />
												<Style.Triggers>
													<DataTrigger Binding="{Binding ElementName=PART_ViewHost, Path=Opacity}" Value="1">
														<DataTrigger.EnterActions>
															<BeginStoryboard>
																<Storyboard>
																	<DoubleAnimation Storyboard.TargetProperty="Opacity" BeginTime="0:0:0.5"
																					 Duration="0:0:0.5" From="0" To="1"/>
																</Storyboard>
															</BeginStoryboard>
														</DataTrigger.EnterActions>
														<DataTrigger.ExitActions>
															<BeginStoryboard>
																<Storyboard>
																	<DoubleAnimation Storyboard.TargetProperty="Opacity" Duration="0:0:0"
																					 From="0" To="0"/>
																</Storyboard>
															</BeginStoryboard>
														</DataTrigger.ExitActions>
													</DataTrigger>
													<DataTrigger Binding="{Binding Items.Count, ElementName=PART_ListGameItems}" Value="0">
														<Setter Property="Visibility" Value="Visible" />
													</DataTrigger>
												</Style.Triggers>
											</Style>
										</TextBlock.Style>
									</TextBlock>
								</Grid>
							</Grid>

							<!--  ProgressIndicator -->
							<Border Background="{DynamicResource OverlayMenu}" CornerRadius="{DynamicResource Corner}"
									Height="70" VerticalAlignment="Top" HorizontalAlignment="Right" Panel.ZIndex="1" >
								<Border.Style>
									<Style TargetType="Border">
										<Setter Property="CornerRadius" Value="{DynamicResource Corner}" />
										<Setter Property="Margin" Value="0,0,20,0"/>
										<Setter Property="Grid.Row" Value="1"/>
										<Setter Property="Grid.ColumnSpan" Value="3"/>
										<Style.Triggers>
											<DataTrigger Binding="{Binding ElementName=ChangeViewButton, Path=IsChecked}" Value="False">
												<Setter Property="Margin" Value="0,20,20,0" />
											</DataTrigger>
										</Style.Triggers>
									</Style>
								</Border.Style>
								<StackPanel x:Name="PART_ElemProgressIndicator" Orientation="Horizontal"
									Grid.Column="3" VerticalAlignment="Center" Panel.ZIndex="1">
									<TextBlock x:Name="PART_TextProgressTooltip"
										Margin="15,0,15,0" FontSize="20" VerticalAlignment="Center"
											Style="{DynamicResource TextBlockBaseStyle}">
										<TextBlock.Effect>
											<DropShadowEffect ShadowDepth="1" Color="Black"
											RenderingBias="Performance" BlurRadius="0" Opacity="0.8"/>
										</TextBlock.Effect>
									</TextBlock>
									<ContentControl Style="{DynamicResource ProgressIndicator}" Focusable="False"
										Height="38" Width="38" VerticalAlignment="Center" Margin="10,0,15,0" />
								</StackPanel>
							</Border>

							<!--  Notification Game Closing -->
							<Border x:Name="GameClosingPanel"
									Background="{DynamicResource OverlayMenu}"
									CornerRadius="{DynamicResource Corner}"
									Height="70"
									VerticalAlignment="Top"
									HorizontalAlignment="Right"
									Panel.ZIndex="1"
									RenderTransformOrigin="1,0.5">
								<Border.Effect>
									<DropShadowEffect BlurRadius="8" ShadowDepth="2" Color="Black" Opacity="0.5"/>
								</Border.Effect>
								<Border.RenderTransform>
									<TranslateTransform x:Name="SlideTransform" X="500"/>
								</Border.RenderTransform>

								<Border.Style>
									<Style TargetType="Border">
										<Setter Property="Visibility" Value="Collapsed"/>
										<Setter Property="Margin" Value="0,30,20,0"/>
										<Setter Property="Grid.Row" Value="1"/>
										<Setter Property="Grid.ColumnSpan" Value="3"/>
										<Style.Triggers>

											<DataTrigger Binding="{Binding ElementName=ChangeViewButton, Path=IsChecked}" Value="False">
												<Setter Property="Margin" Value="0,20,20,0"/>
											</DataTrigger>

											<DataTrigger Binding="{PluginSettings Plugin=NowPlaying, Path=GameClosing}" Value="True">
												<Setter Property="Visibility" Value="Visible"/>
												<DataTrigger.EnterActions>
													<BeginStoryboard>
														<Storyboard>
															<DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)"
																			 From="500" To="0" Duration="0:0:0.3"
																			 AccelerationRatio="0.3" DecelerationRatio="0.7"/>
														</Storyboard>
													</BeginStoryboard>
												</DataTrigger.EnterActions>
											</DataTrigger>

										</Style.Triggers>
									</Style>
								</Border.Style>

								<StackPanel Orientation="Horizontal" VerticalAlignment="Center">
									<TextBlock Margin="15,0,0,0" FontSize="20" Style="{DynamicResource TextBlockBaseStyle}" Text="Closing " />
									<TextBlock FontSize="20"
											   Style="{DynamicResource TextBlockBaseStyle}"
											   MaxWidth="250"
											   TextTrimming="None"
											   TextWrapping="NoWrap"
											   ClipToBounds="True"
											   Text="{PluginSettings Plugin=NowPlaying, Path=RunningGame.GameName}" />
									<TextBlock FontSize="20" Margin="5,0,0,0" Width="30" TextAlignment="Left" Style="{DynamicResource TextBlockBaseStyle}">
										<TextBlock.Triggers>
											<EventTrigger RoutedEvent="Loaded">
												<BeginStoryboard>
													<Storyboard RepeatBehavior="Forever">
														<StringAnimationUsingKeyFrames Storyboard.TargetProperty="Text" Duration="0:0:1.2" RepeatBehavior="Forever">
															<DiscreteStringKeyFrame KeyTime="0:0:0.0" Value="." />
															<DiscreteStringKeyFrame KeyTime="0:0:0.4" Value=".." />
															<DiscreteStringKeyFrame KeyTime="0:0:0.8" Value="..." />
														</StringAnimationUsingKeyFrames>
													</Storyboard>
												</BeginStoryboard>
											</EventTrigger>
										</TextBlock.Triggers>
									</TextBlock>
								</StackPanel>
							</Border>


							<!--NombredeJeuxfiltrer-->
							<!--		<Border Background="{DynamicResource OverlayMenu}" CornerRadius="25"
								Height="60" VerticalAlignment="Bottom" HorizontalAlignment="Right" Panel.ZIndex="1"  >
								<Border.Style>
									<Style TargetType="Border">
										<Setter Property="Margin" Value="0,40,20,-30"/>
										<Setter Property="Opacity" Value="0"/>
										<Setter Property="Grid.Row" Value="2"/>
										<Setter Property="Grid.ColumnSpan" Value="4"/>
										<Setter Property="Visibility" Value="Collapsed"/>
										<Setter Property="Effect">
											<Setter.Value>
												<DropShadowEffect ShadowDepth="3" RenderingBias="Performance"/>
											</Setter.Value>
										</Setter>
										<Style.Triggers>
											<DataTrigger Binding="{Binding ElementName=PART_MainHost, Path=Visibility}" Value="Visible">
												<DataTrigger.EnterActions>
													<BeginStoryboard>
														<Storyboard>
															<DoubleAnimation Storyboard.TargetProperty="Opacity" BeginTime="0:0:1" Duration="0:0:0.5" To="1" />
														</Storyboard>
													</BeginStoryboard>
												</DataTrigger.EnterActions>
											</DataTrigger>
											<DataTrigger Binding="{Binding ElementName=ChangeViewButton, Path=IsChecked}" Value="False">
												<Setter Property="Visibility" Value="Visible" />
											</DataTrigger>
										</Style.Triggers>
									</Style>
								</Border.Style>
								<StackPanel Orientation="Horizontal" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="15,0,0,0" >
									<TextBlock Text="{DynamicResource LOCMetaGameSourceFiltered}" Style="{DynamicResource TextBlockBaseStyle}" FontSize="20" Foreground="GhostWhite"/>
									<TextBlock Text=": " Style="{DynamicResource TextBlockBaseStyle}" FontSize="20" Foreground="GhostWhite"/>
									<TextBlock Text="{Binding Items.Count, ElementName=PART_ListGameItems}" Style="{DynamicResource TextBlockBaseStyle}"
							Margin="0,0,15,0" FontSize="20"/>
								</StackPanel>
							</Border> -->

							<!--Search-->
							<Grid x:Name="SearchGrid" Background="Transparent" >
								<Grid.Style>
									<Style TargetType="Grid">
										<Setter Property="Visibility" Value="Collapsed"/>
										<Setter Property="Opacity" Value="1"/>
										<Setter Property="Grid.Row" Value="3"/>
										<Setter Property="Grid.ColumnSpan" Value="3"/>
										<Style.Triggers>

										</Style.Triggers>
									</Style>
								</Grid.Style>
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="80" />
									<ColumnDefinition Width="Auto" />
									<ColumnDefinition Width="*" />
									<ColumnDefinition Width="Auto" />
									<ColumnDefinition Width="20" />
								</Grid.ColumnDefinitions>


								<StackPanel Grid.ColumnSpan="2" x:Name="PART_ElemSearchActive"
										VerticalAlignment="Center" HorizontalAlignment="Stretch"
										Margin="70,20,0,0" Orientation="Horizontal" Panel.ZIndex="1" >
									<TextBlock FontSize="18" TextAlignment="Center"
											Style="{DynamicResource TextBlockBaseStyle}"
												Text="{DynamicResource LOCGameListSearchResultsS}"/>
									<TextBlock  Foreground="White"
											TextAlignment="Center" FontSize="18" Margin="5,0,0,0"
												Style="{DynamicResource TextBlockBaseStyle}"
												Text="{Binding AppSettings.Fullscreen.FilterSettings.Name}"/>
									<StackPanel.Effect>
										<DropShadowEffect ShadowDepth="1" Color="Black"
										RenderingBias="Performance" BlurRadius="0" Opacity="0.8"/>
									</StackPanel.Effect>
								</StackPanel>
								<TextBlock Grid.ColumnSpan="2" x:Name="PART_ElemExtraFilterActive"
										FontSize="18" Margin="70,50,0,0"
										VerticalAlignment="Top" HorizontalAlignment="Stretch"
										TextAlignment="Center"
										Style="{DynamicResource TextBlockBaseStyle}"
										Text="{DynamicResource LOCGameListExtraFilteredD}" Panel.ZIndex="1">
									<TextBlock.Effect>
										<DropShadowEffect ShadowDepth="1" Color="Black"
										RenderingBias="Performance" BlurRadius="0" Opacity="0.8"/>
									</TextBlock.Effect>
								</TextBlock>
							</Grid>
						</Grid>

						<!--Notification-->
						<StackPanel Grid.Row="0" HorizontalAlignment="Left" VerticalAlignment="Top" Height="10" Width="10" Focusable="False" >
							<TextBlock x:Name="Id" Text="{Binding SelectedGame.Id, NotifyOnTargetUpdated=True}" Foreground="Transparent">
								<TextBlock.Triggers>
									<EventTrigger RoutedEvent="Binding.TargetUpdated">
										<BeginStoryboard>
											<Storyboard>
												<DoubleAnimation Storyboard.TargetProperty="Opacity" Duration="0:0:0" To="0" />
												<DoubleAnimation Storyboard.TargetProperty="Opacity" Duration="0:0:0.01" From="0" To="1" BeginTime="0:0:0" />
											</Storyboard>
										</BeginStoryboard>
									</EventTrigger>
								</TextBlock.Triggers>
							</TextBlock>
							<TextBlock x:Name="Trigger" Text="{Binding SelectedGame.Id, NotifyOnTargetUpdated=True}" Foreground="Transparent">
								<TextBlock.Triggers>
									<EventTrigger RoutedEvent="Binding.TargetUpdated">
										<BeginStoryboard>
											<Storyboard>
												<DoubleAnimation Storyboard.TargetProperty="Opacity" Duration="0:0:0" To="0" />
												<DoubleAnimation Storyboard.TargetProperty="Opacity" Duration="0:0:1" From="0" To="1" BeginTime="0:0:1" />
											</Storyboard>
										</BeginStoryboard>
									</EventTrigger>
								</TextBlock.Triggers>
							</TextBlock>
							<TextBlock x:Name="TrailerTrigger" Text="{Binding SelectedGame.Id, NotifyOnTargetUpdated=True}" Foreground="Transparent">
								<TextBlock.Style>
									<Style TargetType="TextBlock" >
										<Setter Property="Visibility" Value="Hidden" />
										<Setter Property="Opacity" Value="0" />
										<Style.Triggers>
											<MultiDataTrigger>
												<MultiDataTrigger.Conditions>
													<Condition Binding="{PluginSettings Plugin=ThemeOptions, Path=Options[TrailerOnMainView]}" Value="True"/>
													<Condition Binding="{Binding ElementName=PART_ElemGameDetails, Path=Visibility}" Value="Collapsed"/>
													<Condition Binding="{Binding ElementName=AcceuilSettings, Path=Visibility}" Value="Collapsed"/>
													<Condition Binding="{Binding ElementName=Trigger, Path=Opacity}" Value="1"/>
												</MultiDataTrigger.Conditions>
												<MultiDataTrigger.EnterActions>
													<BeginStoryboard>
														<Storyboard>
															<DoubleAnimation Storyboard.TargetProperty="Opacity" BeginTime="0:0:1" Duration="0:0:1" From="0" To="1"/>
														</Storyboard>
													</BeginStoryboard>
												</MultiDataTrigger.EnterActions>
												<MultiDataTrigger.ExitActions>
													<BeginStoryboard>
														<Storyboard>
															<DoubleAnimation Storyboard.TargetProperty="Opacity" BeginTime="0:0:0" Duration="0:0:0.3" To="0"/>
														</Storyboard>
													</BeginStoryboard>
												</MultiDataTrigger.ExitActions>
											</MultiDataTrigger>
										</Style.Triggers>
									</Style>
								</TextBlock.Style>
							</TextBlock>
						</StackPanel>

						<!--Grille des Filtres-->
						<Grid x:Name="FilterGrid" HorizontalAlignment="Left" Margin="30,10,0,10" Background="Transparent" >
							<Border Background="{DynamicResource OverlayMenu}" Height="1030" CornerRadius="{DynamicResource Corner}">
								<Border.Effect>
									<DropShadowEffect ShadowDepth="1" Color="White"
										RenderingBias="Performance" BlurRadius="5"/>
								</Border.Effect>
								<Grid Background="Transparent">
									<Grid.Style>
										<Style TargetType="Grid">
											<Setter Property="Focusable" Value="False"/>
											<Style.Triggers>
												<DataTrigger Binding="{Binding ElementName=PART_ElemFilters, Path=Visibility}" Value="Visible">
													<Setter Property="Focusable" Value="True"/>
													<Setter Property="Width" Value="410"/>
													<Setter Property="Height" Value="930"/>
												</DataTrigger>
											</Style.Triggers>
										</Style>
									</Grid.Style>
									<Filters x:Name="PART_ElemFilters"
													 Margin="0,0,0,0" KeyboardNavigation.DirectionalNavigation="Cycle" KeyboardNavigation.TabNavigation="Cycle"
										 Focusable="False" Background="{DynamicResource OverlayMenu}"/>
									<FiltersAdditional x:Name="PART_ElemFiltersAdditional"
														 Margin="0,0,0,0" KeyboardNavigation.DirectionalNavigation="Cycle" KeyboardNavigation.TabNavigation="Cycle"
										 Focusable="False" Background="{DynamicResource OverlayMenu}" />
									<ContentControl x:Name="PART_ContentFilterItems"
													Margin="0,0,0,0" KeyboardNavigation.DirectionalNavigation="Cycle" KeyboardNavigation.TabNavigation="Cycle"
										Focusable="False" Background="{DynamicResource OverlayMenu}" />
								</Grid>
							</Border>
						</Grid>

						<GameDetails x:Name="PART_ElemGameDetails" Grid.RowSpan="5"
								HorizontalAlignment="Stretch" VerticalAlignment="Stretch" />
						<GameStatus x:Name="PART_ElemGameStatus" Grid.RowSpan="5"
								HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>
						<CheckBoxEx x:Name="MainBackgroundImageButton" Margin="0,0,0,0" Height="50" Width="50"
								IsChecked="{Settings Fullscreen.EnableMainBackgroundImage, Mode=TwoWay}"
								Style="{DynamicResource MainBackgroundImageButton}" Visibility="Hidden" Focusable="False"/>

						<ContentControl x:Name="ThemeOptions_Command" />

						<!-- Acceuil -->

						<Grid Name="AcceuilSettings" Margin="0,0,0,0" Background="{DynamicResource OverlayMenu}" FocusManager.FocusedElement="{Binding ElementName=Acceuil}">

							<Grid.InputBindings>
								<pin:GameControllerInputBinding
									Button="Start"
									Command="{Binding Content.ChangeProperty, ElementName=ThemeOptions_Command}"
									CommandParameter="[Setter ElementName=Acceuil, Property=IsChecked, Value=True]"/>
							</Grid.InputBindings>

							<ContentControl Style="{DynamicResource ConnexionVideo}" />
							<MediaElement LoadedBehavior="Play"  UnloadedBehavior="Close" Source="{ThemeFile 'Startup Video/Anim.mp4'}">
								<MediaElement.CacheMode>
									<BitmapCache RenderAtScale="1"/>
								</MediaElement.CacheMode>
								<MediaElement.Style>
									<Style TargetType="MediaElement">
										<Setter Property="MediaElementBehaviors.Repeat" Value="True"/>
										<Setter Property="Opacity" Value="1"/>
										<Setter Property="Width" Value="206"/>
										<Setter Property="Height" Value="206"/>
										<Setter Property="HorizontalAlignment" Value="Center"/>
										<Setter Property="VerticalAlignment" Value="Center"/>
										<Setter Property="Margin" Value="0,-145,0,0"/>
										<Style.Triggers>
											<DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}, Path=IsActive}" Value="False">
												<Setter Property="MediaElement.Source" Value=" " />
											</DataTrigger>
											<DataTrigger Binding="{Binding ElementName=AcceuilSettings, Path=Visibility}" Value="Collapsed">
												<Setter Property="Visibility" Value="Collapsed"/>
												<Setter Property="MediaElementBehaviors.Repeat" Value="False"/>
												<Setter Property="LoadedBehavior" Value="Stop"/>
											</DataTrigger>
											<Trigger Property="Visibility" Value="Collapsed">
												<Setter Property="Source" Value=""/>
												<Setter Property="MediaElementBehaviors.Repeat" Value="False"/>
												<Setter Property="LoadedBehavior" Value="Stop"/>
											</Trigger>
										</Style.Triggers>
									</Style>
								</MediaElement.Style>
							</MediaElement>

							<Grid>
								<Border RenderOptions.BitmapScalingMode="Fant" Margin="0,-145,0,0" CornerRadius="0" Height="201" Width="201" VerticalAlignment="Center" HorizontalAlignment="Center" ClipToBounds="True" >
									<Border.Style>
										<Style TargetType="Border">
											<Setter Property="Background" Value="{DynamicResource Avatar0}"/>
											<Style.Triggers>
												<DataTrigger Binding="{PluginSettings Plugin=ThemeOptions, Path=Options[AvatarImageIndex]}" Value="1">
													<Setter Property="Background" Value="{DynamicResource Avatar0}"/>
												</DataTrigger>
												<DataTrigger Binding="{PluginSettings Plugin=ThemeOptions, Path=Options[AvatarImageIndex]}" Value="2">
													<Setter Property="Background" Value="{DynamicResource Avatar2}"/>
												</DataTrigger>
												<DataTrigger Binding="{PluginSettings Plugin=ThemeOptions, Path=Options[AvatarImageIndex]}" Value="3">
													<Setter Property="Background" Value="{DynamicResource Avatar3}"/>
												</DataTrigger>
												<DataTrigger Binding="{PluginSettings Plugin=ThemeOptions, Path=Options[AvatarImageIndex]}" Value="4">
													<Setter Property="Background" Value="{DynamicResource Avatar4}"/>
												</DataTrigger>
												<DataTrigger Binding="{PluginSettings Plugin=ThemeOptions, Path=Options[AvatarImageIndex]}" Value="5">
													<Setter Property="Background" Value="{DynamicResource Avatar5}"/>
												</DataTrigger>
												<DataTrigger Binding="{PluginSettings Plugin=ThemeOptions, Path=Options[AvatarImageIndex]}" Value="6">
													<Setter Property="Background" Value="{DynamicResource Avatar6}"/>
												</DataTrigger>
												<DataTrigger Binding="{PluginSettings Plugin=ThemeOptions, Path=Options[AvatarImageIndex]}" Value="7">
													<Setter Property="Background" Value="{DynamicResource Avatar7}"/>
												</DataTrigger>
												<DataTrigger Binding="{PluginSettings Plugin=ThemeOptions, Path=Options[AvatarImageIndex]}" Value="8">
													<Setter Property="Background" Value="{DynamicResource Avatar8}"/>
												</DataTrigger>
												<DataTrigger Binding="{PluginSettings Plugin=ThemeOptions, Path=Options[AvatarImageIndex]}" Value="9">
													<Setter Property="Background" Value="{DynamicResource Avatar9}"/>
												</DataTrigger>
												<DataTrigger Binding="{PluginSettings Plugin=ThemeOptions, Path=Options[AvatarImageIndex]}" Value="10">
													<Setter Property="Background" Value="{DynamicResource Avatar10}"/>
												</DataTrigger>
												<DataTrigger Binding="{PluginSettings Plugin=ThemeOptions, Path=Options[AvatarImageIndex]}" Value="11">
													<Setter Property="Background" Value="{DynamicResource Avatar11}"/>
												</DataTrigger>
												<DataTrigger Binding="{PluginSettings Plugin=ThemeOptions, Path=Options[AvatarImageIndex]}" Value="12">
													<Setter Property="Background" Value="{DynamicResource Avatar12}"/>
												</DataTrigger>
												<DataTrigger Binding="{PluginSettings Plugin=ThemeOptions, Path=Options[AvatarImageIndex]}" Value="13">
													<Setter Property="Background" Value="{DynamicResource Avatar13}"/>
												</DataTrigger>
												<DataTrigger Binding="{PluginSettings Plugin=ThemeOptions, Path=Options[AvatarImageIndex]}" Value="14">
													<Setter Property="Background" Value="{DynamicResource Avatar14}"/>
												</DataTrigger>
												<DataTrigger Binding="{PluginSettings Plugin=ThemeOptions, Path=Options[AvatarImageIndex]}" Value="15">
													<Setter Property="Background" Value="{DynamicResource Avatar15}"/>
												</DataTrigger>
												<DataTrigger Binding="{PluginSettings Plugin=ThemeOptions, Path=Options[AvatarImageIndex]}" Value="16">
													<Setter Property="Background" Value="{DynamicResource Avatar16}"/>
												</DataTrigger>
												<DataTrigger Binding="{PluginSettings Plugin=ThemeOptions, Path=Options[AvatarImageIndex]}" Value="17">
													<Setter Property="Background" Value="{DynamicResource Avatar17}"/>
												</DataTrigger>
												<DataTrigger Binding="{PluginSettings Plugin=ThemeOptions, Path=Options[AvatarImageIndex]}" Value="18">
													<Setter Property="Background" Value="{DynamicResource Avatar18}"/>
												</DataTrigger>
												<DataTrigger Binding="{PluginSettings Plugin=ThemeOptions, Path=Options[AvatarImageIndex]}" Value="19">
													<Setter Property="Background" Value="{DynamicResource Avatar19}"/>
												</DataTrigger>
												<DataTrigger Binding="{PluginSettings Plugin=ThemeOptions, Path=Options[AvatarImageIndex]}" Value="20">
													<Setter Property="Background" Value="{DynamicResource Avatar20}"/>
												</DataTrigger>
												<DataTrigger Binding="{PluginSettings Plugin=ThemeOptions, Path=Options[AvatarImageIndex]}" Value="21">
													<Setter Property="Background" Value="{DynamicResource Avatar21}"/>
												</DataTrigger>
												<DataTrigger Binding="{PluginSettings Plugin=ThemeOptions, Path=Options[AvatarImageIndex]}" Value="22">
													<Setter Property="Background" Value="{DynamicResource Avatar22}"/>
												</DataTrigger>
												<DataTrigger Binding="{PluginSettings Plugin=ThemeOptions, Path=Options[AvatarImageIndex]}" Value="23">
													<Setter Property="Background" Value="{DynamicResource Avatar23}"/>
												</DataTrigger>
												<DataTrigger Binding="{PluginSettings Plugin=ThemeOptions, Path=Options[AvatarImageIndex]}" Value="24">
													<Setter Property="Background" Value="{DynamicResource Avatar24}"/>
												</DataTrigger>
												<DataTrigger Binding="{PluginSettings Plugin=ThemeOptions, Path=Options[AvatarImageIndex]}" Value="25">
													<Setter Property="Background" Value="{DynamicResource Avatar25}"/>
												</DataTrigger>
												<DataTrigger Binding="{PluginSettings Plugin=ThemeOptions, Path=Options[AvatarImageIndex]}" Value="26">
													<Setter Property="Background" Value="{DynamicResource Avatar26}"/>
												</DataTrigger>
												<DataTrigger Binding="{PluginSettings Plugin=ThemeOptions, Path=Options[AvatarImageIndex]}" Value="27">
													<Setter Property="Background" Value="{DynamicResource Avatar27}"/>
												</DataTrigger>
												<DataTrigger Binding="{PluginSettings Plugin=ThemeOptions, Path=Options[AvatarImageIndex]}" Value="28">
													<Setter Property="Background" Value="{DynamicResource Avatar28}"/>
												</DataTrigger>
												<DataTrigger Binding="{PluginSettings Plugin=ThemeOptions, Path=Options[AvatarImageIndex]}" Value="29">
													<Setter Property="Background" Value="{DynamicResource Avatar29}"/>
												</DataTrigger>
												<DataTrigger Binding="{PluginSettings Plugin=ThemeOptions, Path=Options[AvatarImageIndex]}" Value="30">
													<Setter Property="Background" Value="{DynamicResource Avatar30}"/>
												</DataTrigger>
												<DataTrigger Binding="{PluginSettings Plugin=ThemeOptions, Path=Options[AvatarImageIndex]}" Value="31">
													<Setter Property="Background" Value="{DynamicResource Avatar31}"/>
												</DataTrigger>
												<DataTrigger Binding="{PluginSettings Plugin=ThemeOptions, Path=Options[AvatarImageIndex]}" Value="32">
													<Setter Property="Background" Value="{DynamicResource Avatar32}"/>
												</DataTrigger>
												<DataTrigger Binding="{PluginSettings Plugin=ThemeOptions, Path=Options[AvatarImageIndex]}" Value="33">
													<Setter Property="Background" Value="{DynamicResource Avatar33}"/>
												</DataTrigger>
												<DataTrigger Binding="{PluginSettings Plugin=ThemeOptions, Path=Options[AvatarImageIndex]}" Value="34">
													<Setter Property="Background" Value="{DynamicResource Avatar34}"/>
												</DataTrigger>
												<DataTrigger Binding="{PluginSettings Plugin=ThemeOptions, Path=Options[AvatarImageIndex]}" Value="35">
													<Setter Property="Background" Value="{DynamicResource Avatar35}"/>
												</DataTrigger>
												<DataTrigger Binding="{PluginSettings Plugin=ThemeOptions, Path=Options[AvatarImageIndex]}" Value="36">
													<Setter Property="Background" Value="{DynamicResource Avatar36}"/>
												</DataTrigger>
												<DataTrigger Binding="{PluginSettings Plugin=ThemeOptions, Path=Options[AvatarImageIndex]}" Value="37">
													<Setter Property="Background" Value="{DynamicResource Avatar37}"/>
												</DataTrigger>
												<DataTrigger Binding="{PluginSettings Plugin=ThemeOptions, Path=Options[AvatarImageIndex]}" Value="38">
													<Setter Property="Background" Value="{DynamicResource Avatar38}"/>
												</DataTrigger>
												<DataTrigger Binding="{PluginSettings Plugin=ThemeOptions, Path=IsInstalled}" Value="True">
													<Setter Property="Panel.ZIndex" Value="100" />
													<Setter Property="Visibility" Value="Visible"/>
													<Setter Property="Height" Value="60"/>
													<Setter Property="Width" Value="60"/>
													<Setter Property="VerticalAlignment" Value="Bottom"/>
													<Setter Property="HorizontalAlignment" Value="Center"/>
												</DataTrigger>
											</Style.Triggers>
										</Style>
									</Border.Style>
								</Border>
								<Border>
									<TextBlock Margin="0,0,0,-120" Text="{DynamicResource UserName}" HorizontalAlignment="Center" Style="{DynamicResource TextBlockBoldBaseStyle}" Foreground="White"
											   FontSize="30" VerticalAlignment="Center"/>
									<Border.Effect>
										<DropShadowEffect ShadowDepth="2" Color="Black"
										RenderingBias="Performance" BlurRadius="2" Opacity="1"/>
									</Border.Effect>
								</Border>
								<Border>
									<StackPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Bottom" Margin="0,0,0,200" MaxWidth="400">

										<StackPanel.Resources>
											<!-- Déclaration du Storyboard dans les ressources -->
											<Storyboard x:Key="ButtonSwitchAnimation" RepeatBehavior="Forever">
												<!-- Animation pour le premier bouton -->
												<DoubleAnimation Storyboard.TargetName="Button1"
																 Storyboard.TargetProperty="Opacity"
																 From="1" To="0"
																 Duration="0:0:0.5"
																 BeginTime="0:0:5" />

												<!-- Animation pour le deuxième bouton -->
												<DoubleAnimation Storyboard.TargetName="Button2"
																 Storyboard.TargetProperty="Opacity"
																 From="0" To="1"
																 Duration="0:0:0.5"
																 BeginTime="0:0:5.2" />

												<!-- Remettre le premier bouton visible après le cycle -->
												<DoubleAnimation Storyboard.TargetName="Button1"
																 Storyboard.TargetProperty="Opacity"
																 From="0" To="1"
																 Duration="0:0:0.5"
																 BeginTime="0:0:10" />

												<!-- Masquer le deuxième bouton pour recommencer -->
												<DoubleAnimation Storyboard.TargetName="Button2"
																 Storyboard.TargetProperty="Opacity"
																 From="1" To="0"
																 Duration="0:0:0.5"
																 BeginTime="0:0:10.2" />
											</Storyboard>
										</StackPanel.Resources>

										<!-- Déclenchement de l'animation au chargement -->
										<StackPanel.Triggers>
											<EventTrigger RoutedEvent="Loaded">
												<BeginStoryboard Storyboard="{StaticResource ButtonSwitchAnimation}" />
											</EventTrigger>
										</StackPanel.Triggers>



										<TextBlock Margin="50,0,-10,0" Text="{DynamicResource LOCPress}" HorizontalAlignment="Center" Foreground="White" Style="{DynamicResource TextBlockBaseStyle}" FontSize="30" VerticalAlignment="Center"/>

										<Grid HorizontalAlignment="Center" VerticalAlignment="Bottom">
											<!-- Premier bouton -->
											<ButtonEx x:Name="Button1" Style="{StaticResource IconAButton}"  Opacity="1" />

											<!-- Deuxième bouton (superposé au premier) -->
											<ButtonEx x:Name="Button2" Style="{StaticResource IconStartButton}"  Opacity="0" />
										</Grid>

									</StackPanel>



									<Border.Effect>
										<DropShadowEffect ShadowDepth="2" Color="Black"
										RenderingBias="Performance" BlurRadius="0" Opacity="1"/>
									</Border.Effect>
								</Border>
								<Border>
									<StackPanel Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Bottom" Margin="0,0,0,0"  MaxWidth="400" >
										<TextBlock Margin="0,0,10,0" Text="v1.8.7" HorizontalAlignment="Center" Style="{DynamicResource TextBlockBaseStyle}" FontSize="20" VerticalAlignment="Center"/>
									</StackPanel>
									<Border.Effect>
										<DropShadowEffect ShadowDepth="2" Color="Black"
										RenderingBias="Performance" BlurRadius="2" Opacity="1"/>
									</Border.Effect>
								</Border>
							</Grid>
							<StackPanel Margin="0,0,0,-190" VerticalAlignment="Center" Opacity="0">
								<ToggleButtonEx x:Name="Acceuil" Focusable="True" VerticalAlignment="Center" Margin="20,0,20,0"
												Width="150" Style="{DynamicResource AcceuilChangeToggle}">
									<ToggleButtonEx.Content>
										<Grid>
											<Border RenderOptions.BitmapScalingMode="Fant" CornerRadius="{DynamicResource Corner}" VerticalAlignment="Center" HorizontalAlignment="Center" ClipToBounds="True">
												<Border.Style>
													<Style TargetType="Border">
														<Style.Triggers>
															<DataTrigger Binding="{PluginSettings Plugin=ThemeOptions, Path=IsInstalled}" Value="True">
																<Setter Property="Visibility" Value="Visible"/>
																<Setter Property="Height" Value="60"/>
																<Setter Property="Width" Value="60"/>
																<Setter Property="VerticalAlignment" Value="Bottom"/>
																<Setter Property="HorizontalAlignment" Value="Center"/>
															</DataTrigger>
														</Style.Triggers>
													</Style>
												</Border.Style>
											</Border>
										</Grid>
									</ToggleButtonEx.Content>
								</ToggleButtonEx>
							</StackPanel>

							<Grid.Style>
								<Style TargetType="Grid">
									<Setter Property="Visibility" Value="Visible"/>
									<Setter Property="Opacity" Value="1"/>
									<Style.Triggers>
										<MultiDataTrigger>
											<MultiDataTrigger.Conditions>
												<Condition Binding="{PluginSettings Plugin=ThemeOptions, Path=IsInstalled}" Value="True" />
											</MultiDataTrigger.Conditions>
											<MultiDataTrigger.Setters>
												<Setter Property="Visibility" Value="Visible"/>
											</MultiDataTrigger.Setters>
										</MultiDataTrigger>
										<DataTrigger Binding="{Binding Source={StaticResource AcceuilOrNot}}" Value="False">
											<Setter Property="Visibility" Value="Collapsed"/>
										</DataTrigger>
										<DataTrigger Binding="{Binding ElementName=WrongSettings, Path=Visibility}" Value="Visible">
											<Setter Property="Visibility" Value="Collapsed"/>
										</DataTrigger>
										<DataTrigger Binding="{Binding ElementName=BottomBar, Path=Visibility}" Value="Visible">
											<Setter Property="Visibility" Value="Collapsed"/>
										</DataTrigger>


									</Style.Triggers>
								</Style>
							</Grid.Style>
						</Grid>

						<!-- Warning Message -->
						<Grid Name="WrongSettings" Margin="0,0,0,0"  FocusManager.FocusedElement="{Binding ElementName=Wrong}">
							<MediaElement LoadedBehavior="Play"  UnloadedBehavior="Close" Source="{ThemeFile 'Startup Video/Wrong.mp4'}">
								<MediaElement.CacheMode>
									<BitmapCache RenderAtScale="1"/>
								</MediaElement.CacheMode>
								<MediaElement.Style>
									<Style TargetType="MediaElement">
										<Setter Property="MediaElementBehaviors.Repeat" Value="True"/>
										<Setter Property="Opacity" Value="1"/>
										<Style.Triggers>
											<DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}, Path=IsActive}" Value="False">
												<Setter Property="MediaElement.Source" Value=" " />
											</DataTrigger>
											<DataTrigger Binding="{Binding ElementName=WrongSettings, Path=Visibility}" Value="Collapsed">
												<Setter Property="Visibility" Value="Collapsed"/>
												<Setter Property="MediaElementBehaviors.Repeat" Value="False"/>
											</DataTrigger>
											<Trigger Property="Visibility" Value="Collapsed">
												<Setter Property="Source" Value=""/>
												<Setter Property="MediaElementBehaviors.Repeat" Value="False"/>
											</Trigger>
										</Style.Triggers>
									</Style>
								</MediaElement.Style>
							</MediaElement>
							<StackPanel Margin="0,0,0,40" VerticalAlignment="Bottom">
								<ToggleButtonEx x:Name="Wrong" Command="{Binding SwitchToDesktopCommand}" MaxWidth="500" Style="{DynamicResource WrongChangeToggle}">
									<ToggleButtonEx.Content>
										<Grid>
											<Border RenderOptions.BitmapScalingMode="Fant" CornerRadius="{DynamicResource Corner}" VerticalAlignment="Center" HorizontalAlignment="Center" ClipToBounds="True">
												<Border.Style>
													<Style TargetType="Border">
														<Style.Triggers>
															<DataTrigger Binding="{PluginSettings Plugin=ThemeOptions, Path=IsInstalled}" Value="False">
																<Setter Property="Visibility" Value="Visible"/>
																<Setter Property="Height" Value="60"/>
																<Setter Property="Width" Value="Auto"/>
																<Setter Property="VerticalAlignment" Value="Bottom"/>
																<Setter Property="HorizontalAlignment" Value="Center"/>
															</DataTrigger>




														</Style.Triggers>
													</Style>
												</Border.Style>
												<TextBlock Style="{DynamicResource TextBlockBoldBaseStyle}" Text="{DynamicResource LOCBackToDesktopMode}" Foreground="Black"
											   VerticalAlignment="Center" HorizontalAlignment="Center" Margin="0,0,0,0" FontSize="35">
												</TextBlock>
											</Border>
										</Grid>
									</ToggleButtonEx.Content>
								</ToggleButtonEx>
							</StackPanel>
							<Grid.Style>
								<Style TargetType="Grid">
									<Setter Property="Visibility" Value="Visible"/>
									<Setter Property="Background">
										<Setter.Value>
											<!-- Fond -->
											<ImageBrush ImageSource="{ThemeFile 'Images/Warning message.png'}" Panel.ZIndex="99" Stretch="UniformToFill"/>
										</Setter.Value>
									</Setter>
									<Style.Triggers>
										<MultiDataTrigger>
											<MultiDataTrigger.Conditions>
												<Condition Binding="{PluginSettings Plugin=ThemeOptions, Path=IsInstalled}" Value="True" />
												<Condition Binding="{PluginSettings Plugin=ThemeOptions, Path=MinimalVersion[0.23]}" Value="True" />
											</MultiDataTrigger.Conditions>
											<MultiDataTrigger.Setters>
												<Setter Property="Visibility" Value="Collapsed"/>
											</MultiDataTrigger.Setters>
										</MultiDataTrigger>
										<DataTrigger Binding="{Binding ElementName=Wrong, Path=IsChecked}" Value="True">
											<Setter Property="Visibility" Value="Collapsed"/>
										</DataTrigger>
									</Style.Triggers>
								</Style>
							</Grid.Style>
						</Grid>

						<Grid>
							<ContentControl x:Name="Sounds_MusicControl" />
						</Grid>

						<!--AnimationLogin-->
						<Grid>
							<Border Style="{StaticResource AnimatedFlashConnexion}" Tag="{Binding ElementName=Acceuil, Path=IsChecked}">
								<Grid>

									<Grid.Style>
										<Style TargetType="Grid">
											<Setter Property="Opacity" Value="1"/>
											<Setter Property="Background" Value="{DynamicResource OverlayMenu}"/>
											<Style.Triggers>
												<DataTrigger Binding="{Binding ElementName=Acceuil, Path=IsChecked}" Value="True">
													<Setter Property="Background" Value="{DynamicResource OverlayMenu}"/>
													<DataTrigger.EnterActions>
														<BeginStoryboard>
															<Storyboard>
																<DoubleAnimation
																	Storyboard.TargetProperty="Opacity"
																	From="1" To="0" BeginTime="0:0:0" Duration="0:0:0.9"/>
															</Storyboard>
														</BeginStoryboard>
													</DataTrigger.EnterActions>
												</DataTrigger>
												<DataTrigger Binding="{Binding Source={StaticResource AcceuilOrNot}}" Value="False">
													<Setter Property="Visibility" Value="Collapsed"/>
												</DataTrigger>
											</Style.Triggers>
										</Style>
									</Grid.Style>
								</Grid>
							</Border>
						</Grid>

						<!-- Sound -->

						<MediaElement x:Name="AcceuilOpen" Source="{ThemeFile 'audio/AcceuilOST.mp3'}" MediaElementBehaviors.Repeat="False" Volume="{Settings Fullscreen.BackgroundVolume}" >
							<MediaElement.Style>
								<Style TargetType="MediaElement">
									<Setter Property="LoadedBehavior" Value="Manual"/>
									<Setter Property="UnloadedBehavior" Value="Close"/>
									<Style.Triggers>

										<MultiDataTrigger>
											<MultiDataTrigger.Conditions>
												<Condition Binding="{Binding ElementName=IntroVideoBackground, Path=Opacity}" Value="0"/>
												<Condition Binding="{Binding ElementName=AcceuilSettings, Path=Visibility}" Value="Visible"/>
												<Condition Binding="{Binding Source={StaticResource AcceuilOrNot}}" Value="True"/>
											</MultiDataTrigger.Conditions>
											<MultiDataTrigger.Setters>
												<Setter Property="LoadedBehavior" Value="Play"/>
											</MultiDataTrigger.Setters>
										</MultiDataTrigger>
										<DataTrigger Binding="{Binding ElementName=AcceuilSettings, Path=Visibility}" Value="Collapsed">
											<Setter Property="LoadedBehavior" Value="Close"/>
										</DataTrigger>
										<DataTrigger Binding="{Binding Source={StaticResource AcceuilOrNot}}" Value="False">
											<Setter Property="LoadedBehavior" Value="Close"/>
										</DataTrigger>
									</Style.Triggers>
								</Style>
							</MediaElement.Style>
						</MediaElement>

						<MediaElement x:Name="CloseGameSound" Source="{ThemeFile 'audio/.wav'}" MediaElementBehaviors.Repeat="False" >
							<MediaElement.Style>
								<Style TargetType="MediaElement">
									<Setter Property="LoadedBehavior" Value="Manual"/>
									<Setter Property="UnloadedBehavior" Value="Close"/>
									<Style.Triggers>

										<DataTrigger Binding="{Binding ElementName=GameClosingPanel, Path=Visibility}" Value="Visible">
											<Setter Property="LoadedBehavior" Value="Play"/>
										</DataTrigger>
									</Style.Triggers>
								</Style>
							</MediaElement.Style>
						</MediaElement>

						<MediaElement x:Name="ConnexionClick" Source="{ThemeFile 'audio/Connexion.mp3'}" MediaElementBehaviors.Repeat="False" >
							<MediaElement.Style>
								<Style TargetType="MediaElement">
									<Setter Property="LoadedBehavior" Value="Manual"/>
									<Setter Property="UnloadedBehavior" Value="Close"/>
									<Style.Triggers>
										<DataTrigger Binding="{Binding ElementName=Acceuil, Path=IsChecked}" Value="True">
											<Setter Property="LoadedBehavior" Value="Play"/>
										</DataTrigger>
									</Style.Triggers>
								</Style>
							</MediaElement.Style>
						</MediaElement>

						<MediaElement x:Name="DummySilentChime" ScrubbingEnabled="True" Source="{ThemeFile 'audio/DummySilentChime.mp3'}" MediaElementBehaviors.Repeat="True" >
							<MediaElement.Style>
								<Style TargetType="MediaElement">
									<Setter Property="Visibility" Value="Visible"/>
									<Style.Triggers>
										<DataTrigger Binding="{SettingsBinding Fullscreen.IsMusicMuted}" Value="True">
											<Setter Property="Visibility" Value="Collapsed" />
										</DataTrigger>
									</Style.Triggers>
								</Style>
							</MediaElement.Style>
						</MediaElement>
					</Grid>

					<ControlTemplate.Triggers>

						<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
								<Condition Binding="{Binding ElementName=TrailerContainer, Path=Opacity}" Value="1"/>
								<Condition Binding="{Binding ElementName=ExtraMetadataLoader_VideoLoaderControl_NoControls_Sound, Path=Content.IsPlayerMuted}" Value="False" />
							</MultiDataTrigger.Conditions>
							<Setter Property="Tag" Value="True" TargetName="Sounds_MusicControl" />
						</MultiDataTrigger>

						<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
								<Condition Binding="{Binding ElementName=TrailerContainer, Path=Opacity}" Value="1"/>
								<Condition Binding="{Binding ElementName=ExtraMetadataLoader_VideoLoaderControl_NoControls_Sound, Path=Content.IsPlayerMuted}" Value="True" />
							</MultiDataTrigger.Conditions>
							<Setter Property="Tag" Value="False" TargetName="Sounds_MusicControl" />
						</MultiDataTrigger>


						<DataTrigger Binding="{Binding ElementName=AcceuilSettings, Path=Visibility}"  Value="Visible">
							<Setter Property="Tag" Value="True" TargetName="Sounds_MusicControl" />
						</DataTrigger>

					</ControlTemplate.Triggers>

				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
</ResourceDictionary>